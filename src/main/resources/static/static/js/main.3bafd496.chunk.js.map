{"version":3,"sources":["containers/dataentry/Transactions.js","containers/dataentry/Categories.js","containers/dataentry/CategoryBarchart.js","containers/dataentry/DataEntry.js","containers/reports/BalanceReport.js","containers/reports/CategoriesReport.js","containers/reports/YearReport.js","containers/reports/reports.js","containers/util.js","containers/upload/upload.js","containers/accounts/overview.js","containers/accounts/fixedbalances.js","containers/accounts/duplicates.js","containers/accounts/feeds.js","containers/accounts/accounts.js","containers/categories/categories.js","App.js","serviceWorker.js","index.js"],"names":["classes","array","filter","i","reduce","a","b","round","n","Math","Number","EPSILON","createRefs1d","RegExp","existingArray","Array","fill","map","_","createRef","Transactions","styled","className","updateFilter","transactions","changeCategoryFor","setChangeCategoryFor","updateTransaction","deleteTransaction","addTransaction","saveTransaction","useState","dateRefs","setDateRefs","descriptionRefs","setDescriptionRefs","categoryRefs","setCategoryRefs","amountRefs","setAmountRefs","activeCell","setActiveCell","deleteStarted","setDeleteStarted","setCurrentOp","prev","value","ref","useRef","useEffect","current","usePrevious","tableContainerRef","focusRef1d","refArray","options","scrollTop","focus","max","length","useLayoutEffect","focusField","t","commit","field","findIndex","uuid","withUuid","id","onKeyDown","leftRefArray","rightRefArray","e","ctrlKey","key","isActive","stopPropagation","preventDefault","name","focusAfter","f","onKeyDownForFilter","inputCell","myRefs","other","rightRefs","leftRefs","InputCell","readOnly","disabled","type","autoFocus","onChange","target","totalPlus","amount","totalMinus","totalAmount","deletingTransaction","day","maxLength","description","onClick","category","categoryCell","React","forwardRef","props","rest","setValue","dataEntryKeys","Categories","categories","categoryChanged","getTransaction","quitCategoryMode","selectCatRefs","setSelectCatRefs","filterTextRef","filterText","setFilterText","filteredCategories","c","toLowerCase","includes","index","categoryName","SelectButton","active","substring","test","total","CategoryBarchart","data","layout","keys","indexBy","margin","top","right","bottom","left","padding","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","animate","motionStiffness","motionDamping","DataEntrySection","section","ContentDiv","div","HelpContainer","aside","loadTransactions","year","month","fetch","then","response","json","feed","uuidv4","account","loadCurrentMonth","ok","DataEntry","onChangeHeaderInfo","routeParams","useParams","history","useHistory","monthData","setMonthData","setCategories","setTransactions","filteredTransactions","setFilteredTransactions","parseInt","currentMonth","setCurrentMonth","showChart","setShowChart","showHelp","setShowHelp","setFilter","filterRef","listen","location","pathname","startsWith","results","match","sort","localeCompare","toString","passesFilter","m","newTotal","v","console","log","renderFilter","onKeyDownCapture","getModifierState","result","push","setNextMonth","setPrevMonth","newT","x","transactionUuid","splice","t_uuid","find","method","headers","body","JSON","stringify","savedT","cat","forEach","startingBalance","BalanceReport","setData","d","date","y","MyResponsiveLine","xScale","format","useUTC","precision","xFormat","yScale","min","curve","lineWidth","orient","tickValues","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","from","pointLabel","pointLabelYOffset","useMesh","symbolShape","symbolBorderColor","itemBackground","CategoriesReport","setCategory","setDescription","setTotal","setMin","filteredData","setFilteredData","loadData","filterData","url","isNaN","abs","z","aa","ab","YearReport","ReportsContainer","ReportsContent","ReportsNav","Reports","years","setYears","activeClassName","to","path","o_date","Intl","DateTimeFormat","hour","minute","f_date","m_ca","m_it","Object","Upload","accounts","setAccounts","feeds","setFeeds","statements","setStatements","newAccountName","setNewAccountName","uploadToAccount","setUploadToAccount","currentBalance","setCurrentBalance","file","setFile","dupsForFeed","setDupsForFeed","useReducer","state","action","duplicates","assign","hash","recordNumber","duplicate","k","slice","dups","dispatchDups","matchers","categoryId","pattern","matcherId","Error","dispatchCat","loadAccounts","loadFeeds","loadStatements","loadCategories","groupByHash","contentHash","accountId","numberOfTransactions","s","formatToParts","formatDDMMYYYY","Date","dateImported","formatHHMM","feedId","files","formData","FormData","append","error","first","upload","j","dup","for","content","count","checked","Overview","accountName","overview","setOverview","fromDate","toLocaleDateString","toDate","numberOfStatements","FixedBalances","fixedBalances","setFixedBalances","dateInput","setDateInput","amountInput","setAmountInput","loadFixedBalances","balances","time","width","fb","toLocaleTimeString","Duplicates","status","duplicateCheck","StyledDt","dt","StyledDd","dd","Feeds","activeFeed","setActiveFeed","uploadFile","htmlFor","AccountsContainer","AccountsContent","AccountsNav","Accounts","StyledHeader","header","StyledMain","main","App","headerInfo","setHeaderInfo","getMonth","currentYear","getFullYear","exact","text","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3bafd496.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport React, {createRef, useEffect, useLayoutEffect, useRef, useState} from \"react\";\n\nfunction usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}\n\nconst classes = (...array) => array.filter(i => i != null).reduce((a, b) => {\n    return a && b ? (a + ' ' + b) : a ? a : b ? b : null;\n}, null)\nconst round = n => Math.round((n + Number.EPSILON) * 100) / 100\nconst dataEntryKeys = new RegExp(\"^[-a-zA-Z0-9! \\b]$\");\nconst createRefs1d = (existingArray, n) => Array(n).fill(null).map((_, i) => existingArray[i] || createRef())\n//const scrollIntoView = (refArray, i) => refArray && refArray[i] && refArray[i].current && refArray[i].current.scrollIntoView()\n\nexport const Transactions = styled(({\n                                        className,\n                                        filter,\n                                        updateFilter,\n                                        transactions,\n                                        changeCategoryFor,\n                                        setChangeCategoryFor,\n                                        updateTransaction,\n                                        deleteTransaction,\n                                        addTransaction,\n                                        saveTransaction}) => {\n    const [dateRefs, setDateRefs] = useState([]);\n    const [descriptionRefs, setDescriptionRefs] = useState([]);\n    const [categoryRefs, setCategoryRefs] = useState([]);\n    const [amountRefs, setAmountRefs] = useState([]);\n    const [activeCell, setActiveCell] = useState(null);\n    const [deleteStarted, setDeleteStarted] = useState({})\n    const [currentOp, setCurrentOp] = useState({})\n    const prev = usePrevious({changeCategoryFor, activeCell, filter});\n    const tableContainerRef = useRef(null);\n\n    const focusRef1d = (refArray, i, options) => {\n        if (refArray && refArray[i] && refArray[i].current) { \n            if (tableContainerRef.current) {\n                tableContainerRef.current.scrollTop = 0\n                refArray[i].current.focus()\n            }\n        }\n    };\n\n\n\n    useEffect(() => {\n        setDateRefs( createRefs1d(dateRefs, Math.max(transactions.length, dateRefs.length)) );\n        setDescriptionRefs( createRefs1d(descriptionRefs, Math.max(transactions.length, descriptionRefs.length)) );\n        setCategoryRefs( createRefs1d(categoryRefs, Math.max(transactions.length, categoryRefs.length)));\n        setAmountRefs( createRefs1d(amountRefs, Math.max(transactions.length, amountRefs.length)));\n    }, [transactions.length]);\n\n    useLayoutEffect(() => {\n        if (transactions.length > 0) {\n            focusField('description', 0)\n        }\n    }, [transactions.length])\n\n\n    useLayoutEffect(() =>  {\n        if (deleteStarted && deleteStarted.t && deleteStarted.commit) {\n            setDeleteStarted({})\n            if (deleteStarted.i < transactions.length - 1)\n                focusField(deleteStarted.field, deleteStarted.i + 1)\n            else\n                focusField(deleteStarted.field, deleteStarted.i - 1)\n        }\n    }, [deleteStarted])\n\n    useEffect(() => {\n        if (!changeCategoryFor && prev && prev.changeCategoryFor) {\n            saveTransaction(prev.changeCategoryFor)\n            if (transactions.findIndex(t => t.uuid === prev.changeCategoryFor) >= 0) {\n                focusRef1d(categoryRefs, withUuid(prev.changeCategoryFor))\n            }\n            else {\n                focusRef1d(categoryRefs, 0)\n            }\n        }\n    }, [changeCategoryFor])\n\n    useEffect(() => {\n        if (activeCell && activeCell.commit && activeCell.t) {\n            saveTransaction(activeCell.t.uuid)\n            setActiveCell(null)\n        }\n    }, [activeCell])\n\n    const focusField = (field, i) => {\n        if (field === 'day' && dateRefs[i] && dateRefs[i].current) dateRefs[i].current.focus()\n        if (field === 'description' && descriptionRefs[i] && descriptionRefs[i].current) descriptionRefs[i].current.focus()\n        if (field === 'category' && categoryRefs[i] && categoryRefs[i].current) categoryRefs[i].current.focus();\n        if (field === 'amount' && amountRefs[i] && amountRefs[i].current) amountRefs[i].current.focus()\n    }\n\n\n    const withUuid = id => transactions.findIndex(t => t.uuid === id)\n\n    const onKeyDown = (t, field, refArray, i, leftRefArray, rightRefArray) => {\n        return e => {\n            if (e.ctrlKey) return;\n            if (e.key === 'Home' || e.key === 'End')\n                if (isActive(t, field)) e.stopPropagation()\n                else e.preventDefault()\n\n            if (e.key === 'ArrowUp' && !isActive(t, field) && !deleteStarted.t) {\n                focusRef1d(refArray, i - 1, {behavior: 'auto', block: 'center', inline: 'center'})\n                e.preventDefault()\n            }\n            if (e.key === 'PageUp' && !isActive(t, field) && !deleteStarted.t) {\n                focusRef1d(refArray, i - 10 > 0 ? i - 10 : 0)\n                e.preventDefault()\n            }\n            if (e.key === 'ArrowDown' && !isActive(t, field) && !deleteStarted.t) {\n                focusRef1d(refArray, i + 1, {alignToTop: false})\n                e.preventDefault()\n            }\n            if (e.key === 'PageDown'  && !isActive(t, field) && !deleteStarted.t) {\n                focusRef1d(refArray, i + 10 < refArray.length ? i + 10 : refArray.length - 1)\n                e.preventDefault()\n            }\n            if (e.key === 'ArrowLeft'  && !isActive(t, field) && !deleteStarted.t)\n                focusRef1d(leftRefArray, i)\n            if (e.key === 'ArrowRight' && !isActive(t, field) && !deleteStarted.t)\n                focusRef1d(rightRefArray, i)\n\n            if (e.key === 'Insert' && !isActive(t, field) && !deleteStarted.t) {\n                setCurrentOp({\n                    name: 'AddTransaction',\n                    focusAfter: { f: field, i}})\n                addTransaction(i)\n            }\n            if (e.key === 'Delete' &&  !isActive(t, field) && !deleteStarted.t)\n                setDeleteStarted({t, i, field})\n\n            if (e.key === 'Enter') {\n                if (deleteStarted.t) {\n                    deleteTransaction(deleteStarted.t.uuid)\n                    setDeleteStarted({t, i, field, commit: true})\n                }\n                else if (field !== 'category'){\n                    if (!isActive(t, field)) setActiveCell({t, field, commit: false})\n                    else {\n                        setActiveCell({t, field, commit: true})\n                    }\n                }\n                else if (field === 'category' && !changeCategoryFor) {\n                    setChangeCategoryFor(t.uuid)\n                }\n            }\n\n            if (e.key === 'Escape') {\n                if (deleteStarted.t) setDeleteStarted({})\n                else if (filter) updateFilter(null)\n                else if (isActive(t, field)) setActiveCell(null)\n            }\n\n            if (!isActive(t, field)) onKeyDownForFilter(field)(e)\n        }\n    }\n\n    const onKeyDownForFilter = () => e => {\n        updateFilter(e.key)\n    }\n\n    /*\n    const onKeyDownForFilter = (field) => e => {\n\n        if (e.key === 'Backspace' && filter[field] && filter[field].length > 1 ) {\n            updateFilter(field, filter[field].substring(0, filter[field].length - 1), e.target.id)\n        }\n        else if (e.key === 'Backspace' && filter[field] && filter[field].length > 0 ) {\n            updateFilter(field, null, e.target.id)\n        }\n        if (dataEntryKeys.test(e.key)) {\n            if (filter[field]) {\n                updateFilter(field, filter[field] + e.key, e.target.id)\n            }\n            else {\n                updateFilter(field, e.key, e.target.id)\n            }\n        }\n    }\n    */\n\n    const isActive = (t, field) => {\n        return activeCell && activeCell.t.uuid === t.uuid && activeCell.field === field\n    }\n\n    const categoryCell = (t, i) => {\n        const autoFocus = false //filterSourcecField() === 'category'\n        return <button id={`${t.uuid}_category`}\n                       ref={categoryRefs[i]}\n                       autoFocus={i === 0 && autoFocus}\n                       className={classes('category', changeCategoryFor === t.uuid ? 'changeCategoryFor' : null)}\n                       onKeyDown={onKeyDown(t, 'category', categoryRefs, i, descriptionRefs, amountRefs)}\n                       disabled={changeCategoryFor != null}\n                       onClick={e => e.preventDefault()}>{t.category}</button>\n    }\n\n\n    const inputCell = (t, field, myRefs, i, value, {rightRefs, leftRefs}, other) => {\n        return <InputCell key={`${t.uuid}_${field}`}\n                      ref={myRefs[i]}\n                      id={`${t.uuid}_${field}`}\n                      isActive={() => isActive(t, field)}\n                      className={classes(field, isActive(t, field) ? 'active' : null    )}\n                      onKeyDown={onKeyDown(t, field, myRefs, i, leftRefs, rightRefs)}\n                      readOnly={!isActive(t, field)}\n                      disabled={changeCategoryFor != null}\n                      type='text'\n                      autoFocus={i === 0 && field === 'description' ? true : false}\n                      value={value != null ? value : ''}\n                      onChange={e => updateTransaction(t, field, e.target.value)}\n                      {...other}/>\n    }\n\n    const totalPlus = transactions.map(t => t.amount || 0).filter(a => a > 0).reduce((a, b) => a + b, 0)\n    const totalMinus = transactions.map(t => t.amount || 0).filter(a => a < 0).reduce((a, b) => a + b, 0)\n    const totalAmount = transactions.map(t => t.amount || 0).reduce((a, b) => a + b, 0)\n    const deletingTransaction = (t) => deleteStarted && deleteStarted.t && deleteStarted.t.uuid === t.uuid\n\n    return <div className={className}>\n        <div className='tableContainer' ref={tableContainerRef}>\n            { transactions.length > 0 &&\n            <table>\n                <thead>\n                <tr>\n                    <th key='day-header'>Day</th>\n                    <th key='description-header'>Description</th>\n                    <th key='category-header'>Category</th>\n                    <th key='amount-header'>Amount</th>\n                </tr>\n                </thead>\n                <tbody>\n                {   transactions\n                    .map((t,i) => (<tr key={t.uuid} className={classes( deletingTransaction(t) ? 'deleting' : null)}>\n                        <td key='day'>\n                            {inputCell(t, 'day', dateRefs, i, t.day, {rightRefs: descriptionRefs}, {maxLength: 2}) }\n                        </td>\n                        <td key='content'>\n                            {inputCell(t, 'description', descriptionRefs, i, t.description, {leftRefs: dateRefs, rightRefs: categoryRefs}) }\n                        </td>\n                        <td key='category'>\n                            {categoryCell(t, i)}\n                        </td>\n                        <td key='amount'>\n                            {inputCell(t, 'amount', amountRefs, i, t.amount, {leftRefs: categoryRefs}) }\n                        </td>\n                    </tr>)) }\n                </tbody>\n            </table> }\n        </div>\n        <dl>\n            <dt>Income</dt>\n            <dd>{round(totalPlus)}</dd>\n            <dt>Expenses</dt>\n            <dd>{round(totalMinus)}</dd>\n            <dt>Difference</dt>\n            <dd>{round(totalAmount)}</dd>\n        </dl>\n    </div>})`\n    \n  position: relative;\n  padding-top: 2rem;\n\n    div.tableContainer {\n        overflow-y: auto; \n        max-height: 75vh;      \n    }\n    \n   th, td {\n      text-align: left;\n      border: 1px solid #ccc;\n      font-weight: normal;\n    }\n    th {\n      position: sticky; top: 0;\n      z-index: 1;      \n      background: #ffffff;\n      padding-top: 0.3rem;\n      padding-bottom: 0.3rem;\n    }\n            \n   input {\n      display: inline-block;\n      height: 1.4rem;\n      padding: 0.25rem;\n      border: none;\n   }\n   input:focus {\n       outline: 2px solid black;\n   }\n  tr.deleting {\n     td { border: 2px solid red;}\n     input:focus { outline: none; }\n     button:focus { outline: none; }\n     input, button {\n        text-decoration: line-through;\n     }\n   }\n   \n   input.active {\n       outline: 2px solid blue;\n   }\n   input.day {\n     width: 3rem;\n   }\n   input.description {\n     width: 30rem;\n   }\n   input.amount {\n     width: 4rem;\n   }\n   button {\n    display: inline-block;\n    border: none;\n    width: 100%;\n    height: 1.4rem;\n    padding: 0.25rem;\n    background-color: transparent;\n   }\n   button.category {\n     width: 10rem;\n   }\n   button:disabled {\n    background-color: #fafafa;\n   }   \n   \n   button.changeCategoryFor {\n      background-color: white;\n      outline: 2px solid blue;\n   }\n   \n   dt {\n     display: inline-block;\n   }\n   dt::after {\n     content: ':';\n   }\n   dd {\n     display: inline-block;\n     margin-left: 0.3rem;\n     margin-right: 3rem;\n   }\n`;\n\n\nconst InputCell = React.forwardRef((props, ref) => {\n\n    const { isActive, ...rest  } = props\n    const [value, setValue] = useState(props.value)\n\n    useEffect(() => {\n        setValue(props.value)\n    }, [props.value])\n\n\n    const onKeyDown = e => {\n        if (isActive() && e.key === 'Enter') {\n           props.onChange(e)\n        }\n        props.onKeyDown(e)\n    }\n\n\n\n    return <input ref={ref}\n                  type='text'\n                  {...rest}\n                  value={value != null ? value : ''}\n                  onChange={e => setValue(e.target.value)}\n                  onKeyDown={onKeyDown}\n    />\n\n})","import styled from \"styled-components\";\nimport React, {createRef, useEffect, useRef, useState} from \"react\";\nimport FocusTrap from \"focus-trap-react\";\n\nconst round = n => Math.round((n + Number.EPSILON) * 100) / 100\nconst dataEntryKeys = new RegExp(\"^[a-zA-Z0-9! \\b]$\");\nconst createRefs1d = (existingArray, n) => Array(n).fill(null).map((_, i) => existingArray[i] || createRef())\nconst focusRef1d = (refArray, i) => refArray && refArray[i] && refArray[i].current && refArray[i].current.focus()\n\n\nexport const Categories = styled(({className, categories, changeCategoryFor, categoryChanged, getTransaction, quitCategoryMode}) => {\n    const [selectCatRefs, setSelectCatRefs] = useState([]);\n    const filterTextRef = useRef()\n    const [filterText, setFilterText] = useState(null);\n\n    const filteredCategories = () => categories.filter(c => !filterText || c.name.toLowerCase().includes(filterText.toLowerCase()))\n    const indexOf = categoryName => filteredCategories().findIndex(c => c.name === categoryName)\n\n    useEffect(() => {\n        setSelectCatRefs(createRefs1d(selectCatRefs, categories.length));\n    }, [categories.length]);\n\n    useEffect(() => {\n        if (changeCategoryFor) {\n            if (filteredCategories().length === 0 && filterTextRef.current) {\n                filterTextRef.current.focus()\n            }\n            else {\n                const index = indexOf(getTransaction(changeCategoryFor).category)\n                if (index >= 0) {\n                    if (changeCategoryFor && selectCatRefs[0].current) selectCatRefs[index].current.focus()\n                } else {\n                    if (changeCategoryFor && selectCatRefs[0].current) selectCatRefs[0].current.focus()\n                }\n            }\n        }\n        else {\n            setFilterText(null)\n        }\n    }, [categories, changeCategoryFor, filterText])\n\n    const SelectButton = ({i, name}) => {\n        const props = changeCategoryFor ? {\n            onKeyDown: e => {\n                if (e.key === 'ArrowUp') focusRef1d(selectCatRefs, i-1)\n                if (e.key === 'PageUp') focusRef1d(selectCatRefs, i-10 > 0 ? i-10 : 0)\n                if (e.key === 'ArrowDown') focusRef1d(selectCatRefs, i+1)\n                if (e.key === 'PageDown') focusRef1d(selectCatRefs, i+10 < selectCatRefs.length ? i + 10 : selectCatRefs.length - 1)\n                return true\n            },\n            className: 'selectMode',\n            onClick: () => categoryChanged(name)\n        } : {\n            disabled: true\n        }\n        return <button ref={selectCatRefs[i]} {...props} >{name}</button>\n    }\n\n    const tableKeyEvents = e => {\n        if (e.key === 'Escape'  && filterText) setFilterText(null)\n        if (e.key === 'Escape') quitCategoryMode()\n        if (e.key === 'Backspace' && filterText) setFilterText(filterText.length > 0 ? filterText.substring(0, filterText.length-1) : null)\n        if (dataEntryKeys.test(e.key)) {\n            setFilterText(filterText ? filterText + e.key : e.key)\n        }\n    }\n\n    return <FocusTrap active={changeCategoryFor !== null}>\n        <div className={className} onKeyDown={tableKeyEvents}>\n            { filterText && <header>\n                <input readOnly={true} ref={filterTextRef} value={`name: ${filterText}`}/>\n            </header> }\n            <div className='tableContainer'>\n                <table>\n                    <thead>\n                    <tr>\n                        <th key='name-header'>Name</th>\n                        <th key='total-header'>Total</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {  filteredCategories()\n                        .filter((c => changeCategoryFor || c.total !== 0))\n                        .map((c, i) => (<tr key={c.id}>\n                            <td key='name'><SelectButton i={i} name={c.name}/></td>\n                            <td key='total'><span>{round(c.total || 0)}</span></td>\n                        </tr>)) }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </FocusTrap>})` \n   position: relative; \n   padding-top: 2rem;\n   margin-left: 5rem;\n   \n   div.tableContainer {\n    overflow-y: auto; \n    max-height: 75vh;\n    }    \n   \n   header {\n     position: absolute;\n     left: 0px;\n     top: -2rem;\n     display: block;\n     border: 1px solid black;\n     background: #ffffff;\n     z-index: 2;\n     \n     input {\n      display: inline-block;\n      height: 1.4rem;\n      padding: 0.25rem;\n      border: none;\n     }\n   }\n   \n   th, td {\n      position: relative;\n      text-align: left;\n      font-weight: normal;\n      border: 1px solid #ccc;\n    }\n   th {\n      position: sticky; top: 0;\n      background: #ffffff;   \n      padding-top: 0.3rem;\n      padding-bottom: 0.3rem;\n      padding-left: 1rem;\n      padding-right: 1rem;\n      z-index: 1;\n   } \n   span {\n    padding: 0.25rem;    \n    padding-left: 1rem;\n    padding-right: 1rem;\n   } \n   button {\n    display: inline-block;\n    border: none;\n    height: 1.9rem;    \n    width: 100%;\n    padding: 0.25rem;    \n    padding-left: 1rem;\n    padding-right: 1rem;\n    background-color: transparent;\n   }   \n   button:focus {\n    background-color: light-grey;\n   }\n   button:disabled {\n    color: black;\n   }\n   selectMode:focus {\n     outline: none\n   }\n`;\n","import styled from \"styled-components\";\n\nimport React from \"react\";\nimport {ResponsiveBar} from \"@nivo/bar\";\n\n\nexport const CategoryBarchart = styled(({className, data}) => <div className={className}>\n    <ResponsiveBar\n        data={data}\n        layout='horizontal'\n        keys={[ 'total']}\n        indexBy=\"name\"\n        margin={{ top: 50, right: 130, bottom: 50, left: 130 }}\n        padding={0.3}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Categories',\n            legendPosition: 'middle',\n            legendOffset: 32\n        }}\n        axisLeft={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Amount',\n            legendPosition: 'middle',\n            legendOffset: -40\n        }}\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        legends={[\n            {\n                dataFrom: 'keys',\n                anchor: 'bottom-right',\n                direction: 'column',\n                justify: false,\n                translateX: 120,\n                translateY: 0,\n                itemsSpacing: 2,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemDirection: 'left-to-right',\n                itemOpacity: 0.85,\n                symbolSize: 20,\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n            }\n        ]}\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n    />\n</div>)`\n  height: 600px;\n`\n","import React, {createRef, useEffect, useLayoutEffect, useRef, useState} from 'react';\nimport {useParams, useHistory} from \"react-router-dom\";\n\nimport styled from 'styled-components'\nimport { v4 as uuidv4 } from 'uuid';\nimport {Transactions} from \"./Transactions\";\nimport {Categories} from \"./Categories\";\nimport {CategoryBarchart} from \"./CategoryBarchart\";\n\n\nconst DataEntrySection = styled.section`  \n  padding-top: 3rem;\n  padding-left: 4rem;`;\n\nconst ContentDiv = styled.div`\n    display: flex;\n`;\n\nconst HelpContainer = styled.aside`  \n    position: absolute;\n    background: white;\n    border: 2px solid black;\n    z-index: 2;\n    ol {\n        list-style-type: none;\n        li {\n            padding: 1rem 2rem 1rem 2rem;\n        }\n     }\n`;\n\nconst classes = array => array.filter(i => i != null).reduce((a, b) => a + ' ' + b)\n\nconst round = n => Math.round((n + Number.EPSILON) * 100) / 100\n\nconst loadTransactions = (year, month) => fetch(`http://localhost:8080/api/transaction/${year}/${month}`)\n    .then(response => response.json())\n    .then(json => json.transactions.map(t =>\n    { return {\n        id: t.id,\n        feed: t.feed,\n        uuid: uuidv4(),\n        description: t.description,\n        account: t.account,\n        day: t.day,\n        month: t.month,\n        year: t.year,\n        category: t.category,\n        amount: t.amount\n    }}))\n\nconst loadCurrentMonth = (year, month) => fetch(`http://localhost:8080/api/month/${year}/${month}`)\n     .then(response => response.ok && response.json())\n\nconst toMonthName = month => {\n    if (month === 1) return 'January'\n    if (month === 2) return 'February'\n    if (month === 3) return 'March'\n    if (month === 4) return 'April'\n    if (month === 5) return 'May'\n    if (month === 6) return 'June'\n    if (month === 7) return 'July'\n    if (month === 8) return 'August'\n    if (month === 9) return 'September'\n    if (month === 10) return 'October'\n    if (month === 11) return 'November'\n    if (month === 12) return 'December'\n}\n\nconst dataEntryKeys = new RegExp(\"^[a-zA-Z0-9! \\b,.-]$\");\nconst focusRef1d = (refArray, i) => refArray && refArray[i] && refArray[i].current && refArray[i].current.focus()\nconst createRefs1d = (existingArray, n) => Array(n).fill(null).map((_, i) => existingArray[i] || createRef())\n\n\nconst passesFilter = (t, filter) =>  {\n    if (!filter || filter.length == 0) return true;\n    for (var key in t) {\n        if (t[key] && t[key].toString().toLowerCase().includes(filter.toLowerCase())) {\n            return true;\n        }\n    }\n    return false;\n    /*\n    filterKeys.length === 0  ||\n        filterKeys.map(k => { return { f: k, v: filter[k].toLowerCase()}})\n        .filter(pair => t[pair.f] && ('' + t[pair.f]).toLowerCase().includes(pair.v))\n        .length  === filterKeys.length\n        */\n}\n\n/*\nconst passesFilter = (t, filter) =>  {\n    const filterKeys = Object.keys(filter).filter(k => !k.startsWith('--'))\n    return filterKeys.length === 0  ||\n        filterKeys.map(k => { return { f: k, v: filter[k].toLowerCase()}})\n        .filter(pair => t[pair.f] && ('' + t[pair.f]).toLowerCase().includes(pair.v))\n        .length  === filterKeys.length\n}\n*/\n\nexport const DataEntry = styled(({className, onChangeHeaderInfo}) => {\n    const routeParams = useParams()\n    const history = useHistory();\n    const [changeCategoryFor, setChangeCategoryFor] = useState(null)\n    const [monthData, setMonthData] = useState()\n    const [categories, setCategories] = useState([])\n    const [transactions, setTransactions] = useState([])\n    const [filteredTransactions, setFilteredTransactions] = useState([])\n    const [currentMonth, setCurrentMonth] = useState({ month: parseInt(routeParams.month), year: parseInt(routeParams.year)})\n    const [showChart, setShowChart] = useState(false)\n    const [showHelp, setShowHelp] = useState(false)\n    const [filter, setFilter] = useState(\"\")\n    const dayFilterRef = useRef()\n    const descriptionFilterRef = useRef()\n    const categoryFilterRef = useRef()\n    const amountFilterRef = useRef()\n    const filterRef = useRef()\n\n    useEffect(() => {\n        return history.listen(location => {\n            if (location.pathname.startsWith('/transactions')) {\n                const results = location.pathname.match(/\\/transactions\\/(.+)\\/(.+)/)\n                if (results.length === 3) {\n                    setCurrentMonth({month: parseInt(results[2]), year: parseInt(results[1])})\n                }\n            }\n        })\n    },[history])\n\n    useEffect(() => {\n        if (transactions.length === 0) {\n            filterRef.current && filterRef.current.focus()\n        }\n    },[transactions.length])\n    useEffect(() => {\n        if (showChart) {\n            filterRef.current && filterRef.current.focus()\n        }\n    },[showChart])\n\n\n    useEffect(() => {\n        fetch(loadCurrentMonth(currentMonth.year, currentMonth.month))\n            .then(json => setMonthData(json))\n        fetch('http://localhost:8080/api/categories')\n            .then(response => response.json())\n            .then(json => setCategories(json.categories.sort((a, b) => a.name.localeCompare( b.name))))\n            .then(_ => loadTransactions(currentMonth.year, currentMonth.month))\n            .then(t => setTransactions(t))\n    }, [])\n\n    useEffect(() => {\n        setFilteredTransactions(transactions.filter(t => passesFilter(t, filter)))\n    },[transactions, filter])\n\n\n    useEffect(() => {\n        onChangeHeaderInfo(<>\n            <span>{toMonthName(currentMonth.month)} {currentMonth.year}</span>\n        </>)\n        loadTransactions(currentMonth.year, currentMonth.month).then(t => setTransactions(t))\n        loadCurrentMonth(currentMonth.year, currentMonth.month).then(m => setMonthData(m))\n    }, [currentMonth])\n\n\n    useEffect(() => {\n        if (filteredTransactions) {\n            setCategories((categories.map(c => {\n                const newTotal = filteredTransactions.filter(t => t.category === c.name).map(t => t.amount).reduce((total, v) => total + v, 0)\n                return c.total === newTotal ? c : {\n                    id: c.id,\n                    name: c.name,\n                    total: newTotal\n                }})))\n        }\n    }, [filteredTransactions, changeCategoryFor])\n\n\n  useEffect(() => {\n    if (filteredTransactions.length == 0) {\n       filterRef.current && filterRef.current.focus()\n    }\n  }, [filteredTransactions])\n  \n    const getFilterRef = source => {\n        if (source === 'day') return dayFilterRef\n        if (source === 'description') return descriptionFilterRef\n        if (source === 'category') return categoryFilterRef\n        if (source === 'amount') return amountFilterRef\n    }\n\n\n    const updateFilter = (key) => {\n        console.log(\"update filter\", filter, key)\n        onKeyDownForFilter({key: key})\n    }\n\n    const addTransaction = i => {\n        const t = [...transactions]\n        t.splice(i, 0, {\n            id: null,\n            uuid: uuidv4(),\n            account: 'Bank Austria',\n            day: null,\n            month: currentMonth.month,\n            year: currentMonth.year,\n            category: null,\n            amount: null\n        })\n        setTransactions(t)\n    }\n    const deleteTransaction = transactionUuid => setTransactions(transactions.filter(t => t.uuid != transactionUuid))\n\n    const filterSource = () => (filter['--source'] && filter['--source'].split('_')) || [null, null]\n\n    const onKeyDownForFilter = e => {\n        if (e.key === 'Escape') {\n            setFilter(null)\n            return\n        }\n        if (e.key === 'Backspace') {\n            if (filter && filter.length > 1 ) {\n                setFilter(filter.substring(0, filter.length - 1))\n            }\n            else {\n                setFilter(null)\n            }\n            return\n        }\n        if (dataEntryKeys.test(e.key)) {\n            console.log(\"ZZZ\", e)\n            if (filter) {\n              setFilter(filter + e.key)\n            }\n            else {\n              setFilter(e.key)                \n            }\n        }\n    }\n\n/*\n    const onKeyDownForFilter = () => e => {\n        if (e.key === 'Escape') updateFilter(null, null)\n\n        if (filterSource()[1] && filterSource()[1] !== field) return\n        if (e.key === 'Backspace' && filter[field] && filter[field].length > 1 ) {\n                updateFilter(field, filter[field].substring(0, filter[field].length - 1))\n        }\n        else if (e.key === 'Backspace' && filter[field] && filter[field].length > 0 ) {\n            updateFilter(field, null)\n        }\n        if (dataEntryKeys.test(e.key)) {\n            if (filter[field]) {\n                setFilter(filter + e.key)\n            }\n            else {\n                setFilter(field, e.key)\n            }\n        }\n    }\n*/\n    const setNextMonth = () => {\n        let result\n        if (currentMonth.month === 12) result = {year: currentMonth.year + 1, month: 1}\n        else result = {year: currentMonth.year, month: currentMonth.month + 1}\n        setCurrentMonth(result)\n        history.push(`/transactions/${result.year}/${result.month}`)\n    }\n    const setPrevMonth = () => {\n        let result\n        if (currentMonth.month === 1) result = {year: currentMonth.year - 1, month: 12}\n        else result = {year: currentMonth.year, month: currentMonth.month - 1}\n        setCurrentMonth(result)\n        history.push(`/transactions/${result.year}/${result.month}`)\n    }\n\n    const categoryChanged = cat => {\n        transactions.filter(t => t.uuid === changeCategoryFor).forEach(t => t.category = cat)\n        setChangeCategoryFor(null)\n    }\n    const quitCategoryMode = _ => {\n        setChangeCategoryFor(null)\n    }\n    const getTransaction = uuid => transactions.find(t => t.uuid === uuid)\n    const updateTransaction = (t, field,value) => {\n        console.log(\"UT \", t, field, value)\n        const newT = {...t}\n        newT[field] = value\n        setTransactions(transactions.map(x => x.uuid === newT.uuid ? newT : x))\n    }\n\n    const saveTransaction = (t_uuid) => {\n        const t = transactions.find(t => t.uuid === t_uuid)\n        console.log(t)\n        if (t) {\n            fetch(`http://localhost:8080/api/transaction`, {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify(t)\n            })\n            .then(response => response.json())\n            .then(savedT => {\n                const result = {...t, ...savedT}\n                setTransactions(transactions.map(x => x.uuid === result.uuid ? result : x))\n            })\n        }\n    }\n\n    const onKeyDownCapture = e => {\n        if (e.getModifierState('Control') && e.key.toLowerCase() === 'g') {\n            setShowChart(!showChart)\n            e.preventDefault()\n            e.stopPropagation()\n        }\n        if (e.getModifierState('Control') && e.key.toLowerCase() === 'h') {\n            setShowHelp(!showHelp)\n            e.preventDefault()\n            e.stopPropagation()\n        }\n        if (e.key ==='Escape' && showHelp) {\n            setShowHelp(false)\n            e.preventDefault()\n            e.stopPropagation()\n        }\n    }\n\n    const onKeyDownBubble = e => {\n        if (e.key === 'End') {\n            setNextMonth()\n            e.preventDefault()\n        }\n        if (e.key === 'Home') {\n            setPrevMonth()\n            e.preventDefault()\n        }\n    }\n\n    const renderFilter = () => {\n        const causedEmptyTableOrNoData = field => filteredTransactions.length === 0 || transactions.length === 0\n        return <header className='dataentry'>\n            <input ref={filterRef}\n                   readOnly={true}\n                   disabled={!showChart && !causedEmptyTableOrNoData()}\n                   value={filter || '' }\n                   onKeyDown={onKeyDownForFilter}/>\n            </header>\n    }\n\n    return (\n        <DataEntrySection className={className} onKeyDownCapture={onKeyDownCapture} onKeyDown={onKeyDownBubble}>\n            {showHelp &&\n            <HelpContainer className={className}>\n                <h2>HELP</h2>\n                <ol>\n                    <li>Navigation: ←, ↑, →, ↓, PageUp,PageDown</li>\n                    <li>Prev/Next month:  Home/End</li>\n                    <li>Insert Transaction:  Insert</li>\n                    <li>Delete Transaction:  Delete + Enter</li>\n                    <li>Toggle Graph:  CTRL G</li>\n                </ol>\n            </HelpContainer>}\n            { showChart ? (<>\n                { renderFilter()}\n                <CategoryBarchart data={categories\n                    .filter(c => c.total !== 0)}/>\n            </>) : (\n            <ContentDiv>\n                { (transactions.length === 0 || (filter != null && filter.length > 0)) && renderFilter() }\n\n                <Transactions {...{\n                    filter,\n                    updateFilter,\n                    transactions: filteredTransactions,\n                    changeCategoryFor, setChangeCategoryFor,\n                    updateTransaction,\n                    deleteTransaction,\n                    addTransaction,\n                    saveTransaction}}/>\n                <Categories {...{categories,  changeCategoryFor, categoryChanged, getTransaction, quitCategoryMode}}/>\n            </ContentDiv>) }\n            <footer>\n                <dl>\n                    <dt>Month Start</dt>\n                    <dd>{monthData && round(monthData.startingBalance || 0)}</dd>\n                    <dt>Month End</dt>\n                    <dd>{monthData && round(transactions.map(t => t.amount).reduce((a, b) => a + b, monthData.startingBalance || 0))}</dd>\n                </dl>\n            </footer>\n        </DataEntrySection> )\n})`\n header.dataentry {\n     position: absolute;\n     left: 4rem;\n     top: 4rem;\n     display: block;\n     border: 1px solid black;\n     background: #ffffff;\n     z-index: 2;\n     \n     th {\n       padding-top: 0.3rem;\n       width: 3rem;\n       font-weight: normal;\n       padding-right: 2rem;\n     }\n     \n   }\n\ndt {\n     display: inline-block;\n   }\n   dt::after {\n     content: ':';\n   }\n   dd {\n     display: inline-block;\n     margin-left: 0.3rem;\n     margin-right: 3rem;\n   }   \n     \n`\n","import React, {useEffect, useState} from \"react\";\n\nimport styled from \"styled-components\";\nimport {ResponsiveLine} from \"@nivo/line\";\n\nexport const BalanceReport = props => {\n\n    const [data, setData] = useState(null)\n\n    useEffect(() =>{\n        fetch(`http://localhost:8080/api/timeseries/balance`)\n            .then(response => response.json())\n            .then(json => json.data.map(d =>{ return {\n                id: d.id,\n                data: d.data.map(v => {\n                    return {\n                        x: v.date,\n                        y: v.amount,\n                    }})\n            }}))\n            .then(data => {\n                setData(data)\n            })\n    }, [])\n\n    console.log(data)\n\n\n    return (<div>\n        { data  && <MyResponsiveLine data={data}/> }\n    </div>)\n}\n\nconst MyResponsiveLine = styled(({className, data}) => <div className={className}>\n    <ResponsiveLine\n        data={data}\n        margin={{ top: 50, right: 110, bottom: 100, left: 60 }}\n        xScale={{\n            type: 'time',\n            format: '%Y-%m-%d',\n            useUTC: false,\n            precision: 'day'\n        }}\n        xFormat=\"time:%Y-%m-%d\"\n        yScale={{ type: 'linear', min: 'auto', max: 'auto' }}\n        curve=\"cardinal\"\n        lineWidth={4}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            orient: 'bottom',\n            format: '%d %b %y',\n            tickValues: 'every month',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 90,\n            legend: 'time',\n            legendOffset: 36,\n            legendPosition: 'center'\n        }}\n        axisLeft={{\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'count',\n            legendOffset: -40,\n            legendPosition: 'center'\n        }}\n        pointSize={10}\n        pointColor={{ theme: 'background' }}\n        pointBorderWidth={2}\n        pointBorderColor={{ from: 'serieColor' }}\n        pointLabel=\"y\"\n        pointLabelYOffset={-12}\n        useMesh={true}\n        legends={[\n            {\n                anchor: 'bottom-right',\n                direction: 'column',\n                justify: false,\n                translateX: 100,\n                translateY: 0,\n                itemsSpacing: 0,\n                itemDirection: 'left-to-right',\n                itemWidth: 80,\n                itemHeight: 20,\n                itemOpacity: 0.75,\n                symbolSize: 12,\n                symbolShape: 'circle',\n                symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemBackground: 'rgba(0, 0, 0, .03)',\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n            }\n        ]}\n    />\n</div>)`\n  height: 85vh;\n  width: 95%;\n`\n","import React, {useEffect, useState} from \"react\";\n\nimport styled from \"styled-components\";\nimport {ResponsiveLine} from \"@nivo/line\";\n\nexport const CategoriesReport = props => {\n\n    const [category, setCategory] = useState(null)\n    const [description, setDescription] = useState(null)\n    const [total, setTotal] = useState(0)\n    const [min, setMin] = useState(1)\n    const [data, setData] = useState(null)\n    const [filteredData, setFilteredData] = useState(null)\n\n    useEffect(() =>{\n        loadData()\n    }, [])\n\n    useEffect(() =>{\n        loadData()\n    }, [description])\n\n\n    useEffect(() => {\n        setFilteredData(data ? filterData(data) : null)\n    }, [data, category, total, min])\n\n\n    const loadData = _ => {\n        var url = 'http://localhost:8080/api/timeseries/categories'\n        if (description) {\n            url += `?description=${description}`\n        }\n\n        return fetch(url)\n            .then(response => response.json())\n            .then(json => json.data.map(d =>{ return {\n                id: d.id,\n                data: d.data.map(v => {\n                    return {\n                        x: v.date,\n                        y: v.amount,\n                    }})\n            }}))\n            .then(data => {\n                setData(data)\n            })\n    }\n\n    const filterData = data => data\n        .filter(d => !category || d.id.toLowerCase().includes(category))\n        .filter(d => isNaN(total) || Math.abs(d.data.map(z => z.y).reduce((a,b) => a+b, 0)) >= total)\n        .filter(d => isNaN(min) || d.data.map(z => z.y).reduce((a,b) => {\n            const [aa, ab] = [Math.abs(a), Math.abs(b)]\n            return aa > ab  ? aa : ab }, 0) >= min)\n\n\n    const onKeyDownCapture = e => {\n        if (e.key === 'Escape') {\n            setDescription(null)\n            setCategory(null)\n            setTotal(0)\n            setMin(1)\n        }\n    }\n\n    return (<div onKeyDownCapture={onKeyDownCapture}>\n        Description: <input name='description' value={description || ''} onChange={e => setDescription(e.target.value)}/>\n        Category: <input name='category' value={category || ''} onChange={e => setCategory(e.target.value)}/>\n        Total Over Period: <input name='total' value={total || ''} onChange={e => setTotal(parseInt(e.target.value)) }/>\n        Can Exceed: <input name='min' value={min || ''} onChange={e =>  setMin(parseInt(e.target.value)) }/>\n        {filteredData ? filteredData.length : 0 } Categories\n        { filteredData  && <MyResponsiveLine data={filteredData}/> }\n    </div>)\n}\n\nconst MyResponsiveLine = styled(({className, data}) => <div className={className}>\n    <ResponsiveLine\n        data={data}\n        margin={{ top: 50, right: 110, bottom: 100, left: 60 }}\n        xScale={{\n            type: 'time',\n            format: '%Y-%m-%d',\n            useUTC: false,\n            precision: 'month'\n        }}\n        xFormat=\"time:%Y-%m-%d\"\n        yScale={{ type: 'linear', min: 'auto', max: 'auto' }}\n        curve=\"cardinal\"\n        lineWidth={4}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            orient: 'bottom',\n            format: '%d %b %y',\n            tickValues: 'every month',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 90,\n            legend: 'time',\n            legendOffset: 36,\n            legendPosition: 'center'\n        }}\n        axisLeft={{\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'count',\n            legendOffset: -40,\n            legendPosition: 'center'\n        }}\n        pointSize={10}\n        pointColor={{ theme: 'background' }}\n        pointBorderWidth={2}\n        pointBorderColor={{ from: 'serieColor' }}\n        pointLabel=\"y\"\n        pointLabelYOffset={-12}\n        useMesh={true}\n        legends={[\n            {\n                anchor: 'bottom-right',\n                direction: 'column',\n                justify: false,\n                translateX: 100,\n                translateY: 0,\n                itemsSpacing: 0,\n                itemDirection: 'left-to-right',\n                itemWidth: 80,\n                itemHeight: 20,\n                itemOpacity: 0.75,\n                symbolSize: 12,\n                symbolShape: 'circle',\n                symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemBackground: 'rgba(0, 0, 0, .03)',\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n            }\n        ]}\n    />\n</div>)`\n  height:90vh;\n  width: 95%;\n`\n","import React, {useEffect, useState} from \"react\";\n\nimport {useParams} from \"react-router-dom\";\nimport {CategoryBarchart} from \"../dataentry/CategoryBarchart\";\n\nexport const YearReport = props =>  {\n\n    const { year } = useParams()\n    const [categories, setCategories] = useState(null)\n\n    useEffect(() => {\n        fetch(`http://localhost:8080/api/year/${year}/categories`)\n            .then(response => response.json())\n            .then(json => setCategories(json.data))\n    }, [year])\n\n\n    return (<div>\n        <h2>Year report for {year}</h2>\n        { categories &&  <CategoryBarchart data={categories}/> }\n    </div>)\n}","import React, {useEffect, useState} from \"react\";\n\nimport {BalanceReport} from \"./BalanceReport\";\nimport {CategoriesReport} from \"./CategoriesReport\";\nimport styled from \"styled-components\";\nimport {NavLink, Route, Switch} from \"react-router-dom\";\nimport {YearReport} from \"./YearReport\";\n\nconst ReportsContainer = styled.div`\n    display: flex;\n`\n\nconst ReportsContent = styled.div`\n padding-left: 2rem;\n flex-grow: 2;\n`\n\nconst ReportsNav = styled.div`\n flex-grow: 0;\n padding-left: 2rem;\n ol {\n    list-style-type: none;\n    padding-left: 0;\n }\n ol > li  ol > li  {\n    padding-left: 2rem;\n }\n a {\n      text-align: center;\n      display: block;\n      color: black;\n      height: 3rem;\n      line-height: 3rem;\n      text-decoration: none;\n  }\n \n .navActive {\n    background-color: #DCDCDD;\n }\n`\n\n\nexport const Reports = props => {\n\n    const [years, setYears] = useState(null)\n\n    useEffect(() =>{\n        loadData()\n    }, [])\n\n    const loadData = () => {\n        var url = 'http://localhost:8080/api/years'\n        return fetch(url)\n            .then(response => response.json())\n            .then(json => setYears(json.years))\n    }\n\n    return (\n    <ReportsContainer>\n        <ReportsNav>\n            <ol>\n                <li><NavLink activeClassName='navActive' to='/reports/timeline'>Overview</NavLink></li>\n               { years && years.map(y => <li key={y}><NavLink activeClassName='navActive' to={`/reports/year/${y}`}>{y}</NavLink></li>) }\n            </ol>\n        </ReportsNav>\n        <ReportsContent>\n            <Switch>\n                <Route key='1' path='/reports/year/:year'>\n                    <YearReport/>\n                </Route>\n                <Route key='1' path='/reports'>\n                    <BalanceReport/>\n                    <CategoriesReport/>\n                </Route>\n            </Switch>\n        </ReportsContent>\n   </ReportsContainer>)\n}\n","\nconst o_date = new Intl.DateTimeFormat('de-de', {\n    day: 'numeric',\n    month: 'numeric',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric'\n});\nconst f_date = (m_ca, m_it) => Object({...m_ca, [m_it.type]: m_it.value});\nexport const formatDDMMYYYY = date => {\n    const d = o_date.formatToParts(date).reduce(f_date, {});\n    return d.day + '.' + d.month + '.' + d.year\n}\n\nexport const formatHHMM = date => {\n    const d = o_date.formatToParts(date).reduce(f_date, {});\n    return d.hour + ':' + d.minute\n}","import React, {useEffect, useReducer, useState} from 'react';\nimport styled from \"styled-components\";\nimport {v4 as uuidv4} from \"uuid\";\nimport {formatDDMMYYYY, formatHHMM} from \"../util\";\n\n\nexport const Upload = styled(({className}) => {\n\n    const [accounts, setAccounts] = useState([])\n    const [feeds, setFeeds] = useState([])\n    const [statements, setStatements] = useState([])\n    const [newAccountName, setNewAccountName] = useState([])\n    const [uploadToAccount, setUploadToAccount] = useState(null)\n    const [currentBalance, setCurrentBalance] = useState(null)\n    const [file, setFile] = useState(null)\n    const [dupsForFeed, setDupsForFeed] = useState(null)\n    const [dups, dispatchDups] = useReducer(dupsReducer, [])\n\n    const [categories, dispatchCat] = useReducer(categoriesReducer, []);\n\n    useEffect(() => {\n        loadAccounts()\n        loadFeeds()\n        loadStatements()\n        loadCategories()\n    }, [])\n\n    function dupsReducer(state, action) {\n        console.log(action)\n        switch (action.type) {\n            case 'set-dups':\n                return action.duplicates;\n            case 'change-dup':\n                const v = Object.assign({}, state);\n                v[action.hash] = state[action.hash].map(d => {\n                    return  d.recordNumber === action.recordNumber ? {...d, duplicate: !d.duplicate} : d;\n                })\n                return v;\n            case 'make-assumptions':\n                Object.keys(state).forEach(k => {\n                    if (state[k].length === 1) state[k][0].duplicate = true\n                    else {\n                        state[k][0].duplicate = false\n                        state[k].slice(1).forEach(d => {\n                            d.duplicate = true\n                        })\n                    }\n                })\n                return { ...state }\n        }\n    }\n\n    function categoriesReducer(state, action) {\n        switch (action.type) {\n            case 'add-category':\n                return [...state, { id: uuidv4(), name: null, matchers: []}]\n            case 'remove-category':\n                return state.filter(c => c.id !== action.categoryId)\n            case 'update-category-name':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    name: action.name } : c )\n            case 'add-matcher':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    matchers: [...c.matchers, {id : uuidv4(), pattern: null}]} : c)\n            case 'remove-matcher':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    matchers: c.matchers.filter(m => m.id !== action.matcherId) } : c)\n            case 'update-matcher':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    matchers: c.matchers.map(m => m.id === action.matcherId ? {\n                        ...m,\n                        pattern: action.pattern\n                    } : m)} : c)\n            case 'load':\n                return action.categories\n            default:\n                throw new Error();\n        }\n    }\n\n    const loadAccounts = () => fetch(`http://localhost:8080/account`)\n        .then(response => response.json())\n        .then(json => setAccounts(json.accounts))\n\n    const loadFeeds = () => fetch(`http://localhost:8080/feed`)\n        .then(response => response.json())\n        .then(json => setFeeds(json.feeds))\n\n    const loadStatements = () => fetch(`http://localhost:8080/statement`)\n        .then(response => response.json())\n        .then(json => setStatements(json.statements))\n\n    const loadCategories = () => fetch(`http://localhost:8080/category`)\n        .then(response => response.json())\n        .then(json => dispatchCat({type: 'load', categories: json.categories}))\n\n    const addAccount = () => fetch(`http://localhost:8080/account/${newAccountName}`, { method: 'PUT' })\n        .then(response => response.ok && loadAccounts())\n\n    const deleteAccount = (accountId) => fetch(`http://localhost:8080/account/${accountId}`, { method: 'DELETE' })\n        .then(response => response.ok && loadAccounts())\n\n    const deleteImport = (feedId) => fetch(`http://localhost:8080/feed/${feedId}`, { method: 'DELETE' })\n        .then(response => response.ok && loadAccounts() && loadFeeds() && loadStatements())\n\n    const duplicateCheck = (feedId) => fetch(`http://localhost:8080/duplicateCheck/${feedId}`, { method: 'GET' })\n        .then(response => response.ok && response.json())\n        .then(json => {\n            setDupsForFeed(feedId)\n            dispatchDups({type: 'set-dups', duplicates: groupByHash(json.duplicates)})\n        })\n\n    const saveCategories = () => fetch(`http://localhost:8080/category`, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(categories)})\n        .then(response => loadCategories())\n\n    const saveDuplicates = () => fetch(`http://localhost:8080/duplicates/${dupsForFeed}`, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(dups)})\n        .then(response => response.ok && response.json())\n        .then(json => dispatchDups({type: 'set-dups', duplicates: groupByHash(json.duplicates)}))\n\n\n    const upload = (account) => {\n        const formData = new FormData()\n        formData.append('file', file)\n        if (currentBalance)\n            formData.append('currentBalance', currentBalance)\n        fetch(`http://localhost:8080/upload/${account.name}`,{\n            method: 'POST',\n            body: formData\n        }).then(response => response.json())\n        .then(response => {\n            if (!response.error) {\n                setDupsForFeed(response.feedId)\n                dispatchDups({type: 'set-dups', duplicates: groupByHash(response.duplicates)})\n                loadAccounts();\n                loadFeeds();\n                setDupsForFeed(feeds.filter(f => f.file === file.name).first)\n                loadStatements()\n            }\n        })\n    }\n    const groupByHash = duplicates => {\n        const result = {}\n        duplicates.forEach(d => result[d.contentHash] ? result[d.contentHash].push(d) : result[d.contentHash] = [d])\n        return result\n    }\n\n    const setDuplicateAssumption = dup => {\n        if (dup.length === 1) dup[0].duplicate = true\n        else {\n            dup[0].duplicate = false\n            dup.slice(1).forEach(d => { d.duplicate = true})\n        }\n        return dup\n    }\n\n    const rowStyleFor = dup => { if (dup.duplicate) return 'duplicate-row'; else return ''; }\n\n    return (<div className={className}>\n        <section>\n            <h2>Accounts</h2>\n            <ul>\n                { accounts && accounts.map(a => (<>\n                <li>{a.name} - <button onClick={_ => deleteAccount(a.id)}>Delete</button><button onClick={_ => setUploadToAccount(a.id)}>Upload</button></li>\n                <ul>\n                    <li>Number of transactions: {a.numberOfTransactions}</li>\n                    <li>Number of statements: {statements && statements.filter(s => s.accountId === a.id).length}</li>\n                    <li>Uploads:</li>\n                    { feeds.length > 0 && (<ol>\n                        {feeds.map(f => (<li>{f.file} uploaded on {formatDDMMYYYY(new Date(f.dateImported))} at {formatHHMM(new Date(f.dateImported))}\n                        <button onClick={() => duplicateCheck(f.id)}>duplicate check</button>\n                        <button onClick={() => deleteImport(f.id)}>delete</button>\n                        </li>))}\n                    </ol>) }\n                    { uploadToAccount === a.id && (<ol>\n\n                        { statements.filter(s => s.accountId === a.id).length === 0 && <li>Please specify the most current balance\n                            <input name='balance'\n                                   type='input'\n                                   value={currentBalance !== null ? currentBalance : ''}\n                                   onChange={e => setCurrentBalance(e.target.value)}/></li> }\n                        <li>Please select file  to upload\n                                <input name='upload'\n                                       type='file'\n                                       onChange={e => setFile(e.target.files[0])}/></li>\n                        <li><button onClick={() => upload(a)}>Go!</button></li>\n                    </ol>)}\n                </ul></>)) }\n\n                <li>New: <input name='newAccount' value={newAccountName} onChange={e => setNewAccountName(e.target.value)}/>\n                    <button onClick={_ => addAccount()}>Add</button></li>\n            </ul>\n        </section>\n        { dups && Object.keys(dups).length > 0 && (<section>\n            <h2>Duplicates</h2>\n            <button name=\"assumptions\" onClick={_ => dispatchDups({type: 'make-assumptions'})}>Assumptions</button>\n            <table>\n                <thead>\n                <tr>\n                    <th>line</th>\n                    <th>content</th>\n                    <th>Duplicate</th>\n                </tr>\n                </thead>\n                <tbody>\n                { Object.keys(dups).map((k, i) => <>\n                        <tr key={`${i}-dashed}`}><td>----------------</td></tr>\n                        { dups[k].map((d,j) =>  <tr key={`${i}-${j}`} className={rowStyleFor(d)}>\n                            <td>{d.recordNumber}</td>\n                            <td><label for={`duplicate-${i}-${j}`}>{d.content}</label></td>\n                            <td>{d.count}</td>\n                            <td><input id={`duplicate-${i}-${j}`}\n                                       name={`duplicate-${i}-${j}`}\n                                       type=\"checkbox\"\n                                       checked={d.duplicate}\n                                       onChange={_ => dispatchDups(\n                                           {   type: 'change-dup',\n                                               hash: d.contentHash,\n                                               recordNumber: d.recordNumber,\n                                               duplicate: !d.duplicate})}/>\n                            </td>\n                        </tr>)}\n                        </>)}\n                </tbody>\n            </table>\n            <button name='save'onClick={() => saveDuplicates()}>Save</button>\n        </section>)}\n\n        <section>\n            <h2>Categories</h2>\n            <ul>\n                { categories && categories.map(c => (<>\n                    <li><input name={`category-${c.id}`} value={c.name} onChange={e => dispatchCat({type: 'update-category-name', categoryId: c.id, name: e.target.value})}/>\n                        <button onClick={() => dispatchCat({type: 'remove-category', categoryId: c.id})}>X</button>\n                    </li>\n                    <ul>\n                        { c.matchers && c.matchers.map(m => <li><input name={m.id} value={m.pattern} onChange={e => dispatchCat({type: 'update-matcher', categoryId: c.id, matcherId: m.id, pattern: e.target.value})}/>\n                        <button onClick={() => dispatchCat({type: 'remove-matcher', categoryId: c.id, matcherId: m.id})}>X</button>\n                        </li>)}\n                        <li><button onClick={_ => dispatchCat({type: 'add-matcher', categoryId: c.id})}>Add</button></li>\n                        </ul></>))}\n                <li><button onClick={_ => dispatchCat({type: 'add-category'})}>Add</button></li>\n            </ul>\n            <button onClick={saveCategories}>Save</button>\n        </section>\n    </div>)\n})` \n\n .duplicate-row {\n   text-decoration: line-through;\n }\n `","import React, {useEffect, useState} from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport const Overview = props => {\n    const { accountName } = useParams()\n    const [overview, setOverview] = useState(null)\n\n    useEffect(() => {\n        fetch(`http://localhost:8080/api/account/${accountName}/overview`)\n            .then(response => response.ok && response.json())\n            .then(json => setOverview(json))\n    }, [])\n\n    console.log(overview)\n    return (<div>\n        <h2>Overview</h2>\n        { overview && (<dl>\n            <dt>From</dt>\n            <dd>{new Date(overview.fromDate).toLocaleDateString()}</dd>\n            <dt>To</dt>\n            <dd>{new Date(overview.toDate).toLocaleDateString()}</dd>\n            <dt>Transactions</dt>\n            <dd>{overview.numberOfTransactions}</dd>\n            <dt>End of Month Statements Generated</dt>\n            <dd>{overview.numberOfStatements}</dd>\n        </dl>)\n        }\n    </div>)\n}","import React, {useEffect, useState} from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {useParams} from \"react-router-dom\";\n\nexport const FixedBalances = props => {\n    const { accountName } = useParams()\n    const [fixedBalances, setFixedBalances] = useState([])\n    const [dateInput, setDateInput] = useState(null)\n    const [amountInput, setAmountInput] = useState(null)\n\n    useEffect(() => {\n        loadFixedBalances()\n    }, [])\n\n    const loadFixedBalances = () => fetch(`http://localhost:8080/api/account/${accountName}/fixedbalance`)\n        .then(response => response.ok && response.json())\n        .then(json => setFixedBalances(json.balances))\n\n    const saveFixedBalance = () => {\n        fetch(`http://localhost:8080/api/account/${accountName}/fixedbalance`, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                id: uuidv4(),\n                time: dateInput,\n                amount: amountInput\n            })})\n            .then(response => response.ok && response.json())\n            .then(json => setFixedBalances(json.balances))\n    }\n\n    return (<div>\n        <h2>Fixed Balances</h2>\n        Date: <input name='date' type='text' value={dateInput} onChange={e => setDateInput(e.target.value)}/>\n        Amount: <input name='amount' type='text' value={amountInput} onChange={e => setAmountInput(e.target.value)}/>\n        <button name='save' onClick={_ => saveFixedBalance()}>Add</button>\n        <table width='60%'>\n            <thead>\n            <tr>\n                <th key='th0'>Date</th>\n                <th key='th1'>Amount</th>\n            </tr>\n            </thead>\n            <tbody>\n            { fixedBalances && fixedBalances.map( fb => <tr>\n                    <td>{new Date(fb.time).toLocaleDateString('en', { year: 'numeric', month: 'long', day: 'numeric' })} {new Date(fb.time).toLocaleTimeString()}</td>\n                    <td>{fb.amount}</td>\n                </tr>)}\n            </tbody>\n        </table>\n    </div>)\n}","import React, {useEffect, useReducer, useState} from \"react\";\nimport styled from \"styled-components\";\n\n\nexport const Duplicates = styled( ({className, feedId})  => {\n\n    const [dupsForFeed, setDupsForFeed] = useState(null)\n    const [dups, dispatchDups] = useReducer(dupsReducer, [])\n\n    console.log(feedId)\n\n    const duplicateCheck = (feedId) => fetch(`http://localhost:8080/api/duplicateCheck/${feedId}`, { method: 'GET' })\n        .then(response => response.status === 200 && response.json())\n        .then(json => {\n            if (json) {\n                setDupsForFeed(feedId)\n                dispatchDups({type: 'set-dups', duplicates: groupByHash(json.duplicates)})\n            }\n        })\n\n    const saveDuplicates = () => fetch(`http://localhost:8080/api/duplicates/${dupsForFeed}`, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(dups)})\n        .then(response => response.ok && response.json())\n        .then(json => dispatchDups({type: 'set-dups', duplicates: groupByHash(json.duplicates)}))\n\n    const groupByHash = duplicates => {\n        const result = {}\n        duplicates.forEach(d => result[d.contentHash] ? result[d.contentHash].push(d) : result[d.contentHash] = [d])\n        return result\n    }\n\n    const rowStyleFor = dup => { if (dup.duplicate) return 'duplicate-row'; else return ''; }\n\n    useEffect(() => {\n        duplicateCheck(feedId)\n    }, [feedId])\n\n    function dupsReducer(state, action) {\n        console.log(action)\n        switch (action.type) {\n            case 'set-dups':\n                return action.duplicates;\n            case 'change-dup':\n                const v = Object.assign({}, state);\n                v[action.hash] = state[action.hash].map(d => {\n                    return  d.recordNumber === action.recordNumber ? {...d, duplicate: action.duplicate} : d;\n                })\n                return v;\n            case 'make-assumptions':\n                Object.keys(state).forEach(k => {\n                    if (state[k].length === 1) state[k][0].duplicate = true\n                    else {\n                        state[k][0].duplicate = false\n                        state[k].slice(1).forEach(d => {\n                            d.duplicate = true\n                        })\n                    }\n                })\n                return { ...state }\n        }\n    }\n\n    return dups && Object.keys(dups).length > 0 && (<section className={className}>\n            <h2>Duplicates</h2>\n            <button name=\"assumptions\" onClick={_ => dispatchDups({type: 'make-assumptions'})}>Assumptions</button>\n            <button name='save'onClick={() => saveDuplicates()}>Save</button>\n            <table>\n                <thead>\n                <tr>\n                    <th>line</th>\n                    <th>content</th>\n                    <th>Duplicate</th>\n                </tr>\n                </thead>\n                <tbody>\n                { Object.keys(dups).map((k, i) => <>\n                    <tr key={`${i}-dashed}`}><td>----------------</td></tr>\n                    { dups[k].map((d,j) =>  <tr key={`${i}-${j}`} className={rowStyleFor(d)}>\n                        <td key={`d1-${i}-${j}`}>{d.recordNumber}</td>\n                        <td key={`d2-${i}-${j}`}><label for={`duplicate-${i}-${j}`}>{d.content}</label></td>\n                        <td key={`d3-${i}-${j}`}>{d.count}</td>\n                        <td key={`d4-${i}-${j}`} className='radio'>\n                            <label>yes\n                                <input id={`duplicate-${i}-${j}`}\n                                       name={`duplicate-${i}-${j}`}\n                                       type=\"radio\"\n                                       value=\"yes\"\n                                       checked={d.duplicate === true}\n                                       onChange={_ => dispatchDups(\n                                           {   type: 'change-dup',\n                                               hash: d.contentHash,\n                                               recordNumber: d.recordNumber,\n                                               duplicate: true})}/>\n                            </label>\n                            <label>no\n                                <input id={`duplicate-${i}-${j}`}\n                                       name={`duplicate-${i}-${j}`}\n                                       type=\"radio\"\n                                       value=\"no\"\n                                       checked={d.duplicate !== true && d.duplicate !== null}\n                                       onChange={_ => dispatchDups(\n                                           {   type: 'change-dup',\n                                               hash: d.contentHash,\n                                               recordNumber: d.recordNumber,\n                                               duplicate: false})}/>\n                            </label>\n                            <label>don't know\n                                <input id={`duplicate-${i}-${j}`}\n                                       name={`duplicate-${i}-${j}`}\n                                       type=\"radio\"\n                                       value=\"unknown\"\n                                       checked={d.duplicate === null}\n                                       onChange={_ => dispatchDups(\n                                           {   type: 'change-dup',\n                                               hash: d.contentHash,\n                                               recordNumber: d.recordNumber,\n                                               duplicate: null})}/>\n                            </label>\n                        </td>\n                    </tr>)}\n                </>)}\n                </tbody>\n            </table>\n        </section>)\n})` \n\n .duplicate-row {\n   td {\n    text-decoration: line-through;\n   }\n   td.radio {\n    text-decoration: none;\n   }\n   \n }\n `","import React, {useEffect, useReducer, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {Duplicates} from \"./duplicates\";\n\nimport styled from \"styled-components\";\n\nconst StyledDt = styled.dt`\n    display: inline-block;\n`\n\nconst StyledDd = styled.dd`\n    margin-left: 4pt;\n    display: inline-block;\n`\n\nexport const Feeds = props => {\n    const { accountName } = useParams()\n    const [feeds, setFeeds] = useState([])\n    const [activeFeed, setActiveFeed] = useState(null)\n\n    useEffect(() => {\n        loadFeeds()\n    }, [])\n\n    const loadFeeds = () => fetch(`http://localhost:8080/api/account/${accountName}/feed`)\n        .then(response => response.ok && response.json())\n        .then(json => setFeeds(json.feeds))\n\n    const deleteImport = (feedId) => fetch(`http://localhost:8080/api/feed/${feedId}`, { method: 'DELETE' })\n        .then(response => response.ok && loadFeeds() && setActiveFeed(null))\n\n    const upload = (uploadFile) => {\n        console.log(uploadFile)\n        if (uploadFile) {\n            const formData = new FormData()\n            formData.append('file',uploadFile)\n            fetch(`http://localhost:8080/api/account/${accountName}/feed`, {\n                method: 'POST',\n                body: formData\n            }).then(response => response.json())\n                .then(response => {\n                    if (!response.error) {\n                        loadFeeds();\n                    }\n                })\n        }\n    }\n\n    return (<div>\n        <h2>Feeds</h2>\n        <input type='file' name='upload' onChange={ e => upload(e.target.files[0])}/>\n        <table width=\"100%\">\n            <tbody>\n            { feeds.map((f, i) => <tr key={`f0-${i}`}>\n                 <td key={`f1-${i}`}><input id={`f1-${i}`} type='radio' name='feed' onChange={_ => setActiveFeed(f)} checked={f === activeFeed}/></td>\n                 <td key={`f2-${i}`}><label htmlFor={`f1-${i}`}> {f.file}</label></td>\n                 <td key={`f3-${i}`}>{new Date(f.dateImported).toLocaleDateString('en', { year: 'numeric', month: 'long', day: 'numeric' })} {new Date(f.dateImported).toLocaleTimeString()}</td>\n             </tr>)}\n            </tbody>\n        </table>\n        { activeFeed && (<>\n            <div key='overview'>\n                <dl>\n                    <StyledDt>From:</StyledDt>\n                    <StyledDd>{new Date(activeFeed.fromDate).toLocaleDateString('en', { year: 'numeric', month: 'long', day: 'numeric' })}</StyledDd>\n                </dl>\n                    <StyledDt>To:</StyledDt>\n                    <StyledDd>{new Date(activeFeed.toDate).toLocaleDateString('en', { year: 'numeric', month: 'long', day: 'numeric' })}</StyledDd>\n                <dl>\n                    <StyledDt>Transactions:</StyledDt>\n                    <StyledDd>{activeFeed.numberOfTransactions}</StyledDd>\n                </dl>\n            </div>\n            <button name='delete' onClick={ _ => deleteImport(activeFeed.feedId)}>Delete</button>\n            <Duplicates feedId={activeFeed.feedId}/></>)}\n    </div>)\n}","import React, {useEffect, useState} from \"react\";\n\nimport styled from \"styled-components\";\nimport {NavLink, Route, Switch} from \"react-router-dom\";\nimport {Overview} from \"./overview\";\nimport {FixedBalances} from \"./fixedbalances\";\nimport {Feeds} from \"./feeds\";\n\nconst AccountsContainer = styled.div`\n    display: flex;\n`\n\nconst AccountsContent = styled.div`\n padding-left: 2rem;\n flex-grow: 2;\n`\n\nconst AccountsNav = styled.div`\n flex-grow: 0;\n padding-left: 2rem;\n ol {\n    list-style-type: none;\n    padding-left: 0;\n }\n ol > li  ol > li  {\n    padding-left: 2rem;\n }\n a {\n      text-align: center;\n      display: block;\n      color: black;\n      height: 3rem;\n      line-height: 3rem;\n      text-decoration: none;\n  }\n \n .navActive {\n    background-color: #DCDCDD;\n }\n`\n\n\nexport const Accounts = props => {\n\n    const [accounts, setAccounts] = useState([])\n\n    useEffect(() =>{\n        loadData()\n    }, [])\n\n    const loadData = () => {\n        var url = 'http://localhost:8080/api/account'\n        return fetch(url)\n            .then(response => response.json())\n            .then(json => setAccounts(json.accounts))\n    }\n\n    return (\n        <AccountsContainer>\n            <AccountsNav>\n                <ol>\n                    { accounts && accounts.map(a => <li key={a.name}>\n                        <NavLink activeClassName='navActive' to={`/accounts/${a.name}`}>{a.name}</NavLink>\n                        <ol>\n                            <li><NavLink activeClassName='navActive' to={`/accounts/${a.name}/feeds`}>Feeds</NavLink></li>\n                            <li><NavLink activeClassName='navActive' to={`/accounts/${a.name}/fixedbalances`}>FixedBalances</NavLink></li>\n                        </ol>\n                    </li>) }\n                </ol>\n            </AccountsNav>\n            <AccountsContent>\n                <Switch>\n                    <Route key='route-2' path='/accounts/:accountName/feeds'>\n                        <Feeds/>\n                    </Route>\n                    <Route key='route-3' path='/accounts/:accountName/fixedbalances'>\n                        <FixedBalances/>\n                    </Route>\n                    <Route key='route-3' path='/accounts/:accountName'>\n                        <Overview/>\n                    </Route>\n                </Switch>\n            </AccountsContent>\n        </AccountsContainer>)\n}\n","import React, {useEffect, useReducer, useState} from \"react\";\nimport {v4 as uuidv4} from \"uuid\";\n\nexport const Categories = props => {\n\n    const [categories, dispatchCat] = useReducer(categoriesReducer, []);\n\n\n    useEffect(() => {\n        loadCategories()\n    }, [])\n\n    const loadCategories = () => fetch(`http://localhost:8080/api/category`)\n        .then(response => response.json())\n        .then(json => dispatchCat({type: 'load', categories: json.categories}))\n\n    const saveCategories = () => fetch(`http://localhost:8080/api/category`, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(categories)})\n        .then(response => loadCategories())\n\n    function categoriesReducer(state, action) {\n        switch (action.type) {\n            case 'add-category':\n                return [...state, { id: uuidv4(), name: null, matchers: []}]\n            case 'remove-category':\n                return state.filter(c => c.id !== action.categoryId)\n            case 'update-category-name':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    name: action.name } : c )\n            case 'add-matcher':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    matchers: [...c.matchers, {id : uuidv4(), pattern: null}]} : c)\n            case 'remove-matcher':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    matchers: c.matchers.filter(m => m.id !== action.matcherId) } : c)\n            case 'update-matcher':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    matchers: c.matchers.map(m => m.id === action.matcherId ? {\n                        ...m,\n                        pattern: action.pattern\n                    } : m)} : c)\n            case 'load':\n                return action.categories\n            default:\n                throw new Error();\n        }\n    }\n\n    return (<section>\n            <h2>Categories</h2>\n            <ul>\n                { categories && categories.map(c => (<>\n                    <li><input name={`category-${c.id}`} value={c.name} onChange={e => dispatchCat({type: 'update-category-name', categoryId: c.id, name: e.target.value})}/>\n                        <button onClick={() => dispatchCat({type: 'remove-category', categoryId: c.id})}>X</button>\n                    </li>\n                    <ul>\n                        { c.matchers && c.matchers.map(m => <li><input name={m.id} value={m.pattern} onChange={e => dispatchCat({type: 'update-matcher', categoryId: c.id, matcherId: m.id, pattern: e.target.value})}/>\n                            <button onClick={() => dispatchCat({type: 'remove-matcher', categoryId: c.id, matcherId: m.id})}>X</button>\n                        </li>)}\n                        <li><button onClick={_ => dispatchCat({type: 'add-matcher', categoryId: c.id})}>Add</button></li>\n                    </ul></>))}\n                <li><button onClick={_ => dispatchCat({type: 'add-category'})}>Add</button></li>\n            </ul>\n            <button onClick={saveCategories}>Save</button>\n        </section>\n    )\n}","import React, {useState} from 'react';\nimport {BrowserRouter as Router, NavLink, Route, Switch, Redirect} from 'react-router-dom';\nimport './App.css';\nimport {DataEntry} from \"./containers/dataentry/DataEntry\";\nimport styled from 'styled-components'\nimport {Reports} from \"./containers/reports/reports\";\nimport {Upload} from \"./containers/upload/upload\";\nimport {Accounts} from \"./containers/accounts/accounts\";\nimport {Categories} from \"./containers/categories/categories\";\n\nconst StyledHeader = styled.header`\n    display: flex;\n    ol {\n        display: flex;\n        margin: 0;\n        list-style-type: none;\n        li {\n          padding-right: 1rem;\n        }\n        a {\n          text-align: center;\n          display: block;\n          color: black;\n          height: 3rem;\n          line-height: 3rem;\n          text-decoration: none;\n        }\n        .navActive {\n          background-color: #DCDCDD;\n        }\n     }\n   h1 {\n     margin: 0;\n     margin-left: 5rem;\n   }  \n     border-bottom: solid black 1px;\n`;\n\nconst StyledMain = styled.main`\n`;\n\nfunction App() {\n  const [headerInfo, setHeaderInfo] = useState(\"\")\n  const currentMonth = new Date().getMonth() + 1\n  const currentYear = new Date().getFullYear()\n\n  return (\n    <div className=\"App\">\n    <Router>\n      <StyledHeader className=\"App-header\">\n            <ol>\n                <li><NavLink activeClassName='navActive' to=\"/accounts\">Accounts</NavLink></li>\n                <li><NavLink activeClassName='navActive' to=\"/categories\">Categories</NavLink></li>\n                <li><NavLink activeClassName='navActive' to=\"/transactions\">Transactions</NavLink></li>\n                <li><NavLink activeClassName='navActive' to=\"/reports\">Reports</NavLink></li>\n            </ol>\n            <h1>{headerInfo}</h1>\n      </StyledHeader>\n      <StyledMain>\n          <Switch>\n            <Route exact={true} key=\"route-1\" path='/transactions'>\n              <Redirect to={`/transactions/${currentYear}/${currentMonth}`}/>\n            </Route>\n              <Route exact={true} key=\"route-1\" path='/transactions/:year/:month'>\n                  <DataEntry onChangeHeaderInfo={(text) => setHeaderInfo(text)}/>\n              </Route>\n            <Route exact={false} key=\"route-2\" path='/reports'>\n                <Reports/>\n            </Route>\n            <Route exact={false} key=\"route-3\" path='/accounts'>\n                <Accounts/>\n            </Route>\n          <Route exact={false} key=\"route-3\" path='/categories'>\n              <Categories/>\n          </Route>\n          <Route exact={false} key=\"route-3\" path='/upload'>\n              <Upload/>\n          </Route>\n            <Route>\n                <Redirect to='enterdata'/>\n            </Route>\n          </Switch>\n      </StyledMain>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}