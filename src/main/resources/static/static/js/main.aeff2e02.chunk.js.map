{"version":3,"sources":["containers/dataentry/Transactions.js","containers/dataentry/Categories.js","containers/dataentry/CategoryBarchart.js","containers/dataentry/DataEntry.js","containers/reports/BalanceReport.js","containers/reports/CategoriesReport.js","containers/reports/YearReport.js","containers/reports/reports.js","containers/util.js","containers/upload/upload.js","containers/accounts/overview.js","containers/accounts/fixedbalances.js","containers/accounts/duplicates.js","containers/accounts/feeds.js","containers/accounts/accounts.js","containers/categories/categories.js","App.js","serviceWorker.js","index.js"],"names":["classes","array","filter","i","reduce","a","b","round","n","Math","Number","EPSILON","dataEntryKeys","RegExp","createRefs1d","existingArray","Array","fill","map","_","createRef","focusRef1d","refArray","current","focus","Transactions","styled","className","updateFilter","transactions","changeCategoryFor","setChangeCategoryFor","updateTransaction","deleteTransaction","addTransaction","saveTransaction","useState","dateRefs","setDateRefs","descriptionRefs","setDescriptionRefs","categoryRefs","setCategoryRefs","amountRefs","setAmountRefs","activeCell","setActiveCell","deleteStarted","setDeleteStarted","currentOp","setCurrentOp","prev","value","ref","useRef","useEffect","usePrevious","max","length","useLayoutEffect","name","focusField","focusAfter","f","split","transaction_uuid","field","index","findIndex","t","uuid","commit","withUuid","id","onKeyDown","leftRefArray","rightRefArray","e","ctrlKey","key","isActive","stopPropagation","preventDefault","onKeyDownForFilter","substring","target","test","inputCell","myRefs","other","rightRefs","leftRefs","InputCell","readOnly","disabled","type","autoFocus","onChange","totalPlus","amount","totalMinus","totalAmount","deletingTransaction","day","maxLength","description","onClick","category","categoryCell","React","forwardRef","props","rest","setValue","Categories","categories","categoryChanged","getTransaction","quitCategoryMode","selectCatRefs","setSelectCatRefs","filterTextRef","filterText","setFilterText","filteredCategories","c","toLowerCase","includes","categoryName","SelectButton","active","total","CategoryBarchart","data","layout","keys","indexBy","margin","top","right","bottom","left","padding","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","animate","motionStiffness","motionDamping","DataEntrySection","section","ContentDiv","div","HelpContainer","aside","loadTransactions","year","month","fetch","then","response","json","uuidv4","account","loadCurrentMonth","ok","DataEntry","onChangeHeaderInfo","routeParams","useParams","history","useHistory","monthData","setMonthData","setCategories","setTransactions","filteredTransactions","setFilteredTransactions","parseInt","currentMonth","setCurrentMonth","showChart","setShowChart","showHelp","setShowHelp","setFilter","dayFilterRef","descriptionFilterRef","categoryFilterRef","amountFilterRef","listen","location","pathname","startsWith","results","match","sort","localeCompare","filterKeys","Object","k","v","pair","passesFilter","m","newTotal","x","getFilterRef","source","forEach","filterSource","renderFilter","causedEmptyTable","onKeyDownCapture","getModifierState","result","push","setNextMonth","setPrevMonth","console","log","newT","transactionUuid","splice","t_uuid","find","method","headers","body","JSON","stringify","savedT","cat","startingBalance","BalanceReport","setData","d","date","y","MyResponsiveLine","xScale","format","useUTC","precision","xFormat","yScale","min","curve","lineWidth","orient","tickValues","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","from","pointLabel","pointLabelYOffset","useMesh","symbolShape","symbolBorderColor","itemBackground","CategoriesReport","setCategory","setDescription","setTotal","setMin","filteredData","setFilteredData","loadData","filterData","url","isNaN","abs","z","aa","ab","YearReport","ReportsContainer","ReportsContent","ReportsNav","Reports","years","setYears","activeClassName","to","path","o_date","Intl","DateTimeFormat","hour","minute","f_date","m_ca","m_it","Upload","accounts","setAccounts","feeds","setFeeds","statements","setStatements","newAccountName","setNewAccountName","uploadToAccount","setUploadToAccount","currentBalance","setCurrentBalance","file","setFile","dupsForFeed","setDupsForFeed","useReducer","state","action","duplicates","assign","hash","recordNumber","duplicate","slice","dups","dispatchDups","matchers","categoryId","pattern","matcherId","Error","dispatchCat","loadAccounts","loadFeeds","loadStatements","loadCategories","groupByHash","contentHash","accountId","numberOfTransactions","s","formatToParts","formatDDMMYYYY","Date","dateImported","formatHHMM","feedId","files","formData","FormData","append","error","first","upload","j","dup","for","content","count","checked","Overview","accountName","overview","setOverview","fromDate","toLocaleDateString","toDate","numberOfStatements","FixedBalances","fixedBalances","setFixedBalances","dateInput","setDateInput","amountInput","setAmountInput","loadFixedBalances","balances","time","width","fb","toLocaleTimeString","Duplicates","status","duplicateCheck","StyledDt","dt","StyledDd","dd","Feeds","activeFeed","setActiveFeed","uploadFile","htmlFor","AccountsContainer","AccountsContent","AccountsNav","Accounts","StyledHeader","header","StyledMain","main","App","headerInfo","setHeaderInfo","getMonth","currentYear","getFullYear","exact","text","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.aeff2e02.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport React, {createRef, useEffect, useLayoutEffect, useRef, useState} from \"react\";\n\nfunction usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}\n\nconst classes = (...array) => array.filter(i => i != null).reduce((a, b) => {\n    return a && b ? (a + ' ' + b) : a ? a : b ? b : null;\n}, null)\nconst round = n => Math.round((n + Number.EPSILON) * 100) / 100\nconst dataEntryKeys = new RegExp(\"^[-a-zA-Z0-9! \\b]$\");\nconst createRefs1d = (existingArray, n) => Array(n).fill(null).map((_, i) => existingArray[i] || createRef())\nconst focusRef1d = (refArray, i) => refArray && refArray[i] && refArray[i].current && refArray[i].current.focus()\n\n\nexport const Transactions = styled(({\n                                        className,\n                                        filter,\n                                        updateFilter,\n                                        transactions,\n                                        changeCategoryFor,\n                                        setChangeCategoryFor,\n                                        updateTransaction,\n                                        deleteTransaction,\n                                        addTransaction,\n                                        saveTransaction}) => {\n    const [dateRefs, setDateRefs] = useState([]);\n    const [descriptionRefs, setDescriptionRefs] = useState([]);\n    const [categoryRefs, setCategoryRefs] = useState([]);\n    const [amountRefs, setAmountRefs] = useState([]);\n    const [activeCell, setActiveCell] = useState(null);\n    const [deleteStarted, setDeleteStarted] = useState({})\n    const [currentOp, setCurrentOp] = useState({})\n    const prev = usePrevious({changeCategoryFor, activeCell, filter});\n\n    useEffect(() => {\n        setDateRefs( createRefs1d(dateRefs, Math.max(transactions.length, dateRefs.length)) );\n        setDescriptionRefs( createRefs1d(descriptionRefs, Math.max(transactions.length, descriptionRefs.length)) );\n        setCategoryRefs( createRefs1d(categoryRefs, Math.max(transactions.length, categoryRefs.length)));\n        setAmountRefs( createRefs1d(amountRefs, Math.max(transactions.length, amountRefs.length)));\n    }, [transactions.length]);\n\n    useLayoutEffect(() => {\n        if (currentOp && currentOp.name === 'AddTransaction') {\n            focusField(currentOp.focusAfter.f, currentOp.focusAfter.i)\n            setCurrentOp(null)\n        }\n        if (filter['--source']) {\n            const [transaction_uuid, field] = filter['--source'].split('_')\n            const index = transactions.findIndex( t => t.uuid === transaction_uuid )\n            if (index >= 0) focusField(field, index)\n            else if (transactions.length > 0) {\n                focusField(field, 0)\n            }\n        }\n    }, [transactions.length])\n\n\n    useLayoutEffect(() =>  {\n        if (deleteStarted && deleteStarted.t && deleteStarted.commit) {\n            setDeleteStarted({})\n            if (deleteStarted.i < transactions.length - 1)\n                focusField(deleteStarted.field, deleteStarted.i + 1)\n            else\n                focusField(deleteStarted.field, deleteStarted.i - 1)\n        }\n    }, [deleteStarted])\n\n    useEffect(() => {\n        if (!changeCategoryFor && prev && prev.changeCategoryFor) {\n            saveTransaction(prev.changeCategoryFor)\n            if (transactions.findIndex(t => t.uuid === prev.changeCategoryFor) >= 0) {\n                focusRef1d(categoryRefs, withUuid(prev.changeCategoryFor))\n            }\n            else {\n                focusRef1d(categoryRefs, 0)\n            }\n        }\n    }, [changeCategoryFor])\n\n    useEffect(() => {\n        if (activeCell && activeCell.commit && activeCell.t) {\n            saveTransaction(activeCell.t.uuid)\n            setActiveCell(null)\n        }\n    }, [activeCell])\n\n    const focusField = (field, i) => {\n        if (field === 'day' && dateRefs[i] && dateRefs[i].current) dateRefs[i].current.focus()\n        if (field === 'description' && descriptionRefs[i] && descriptionRefs[i].current) descriptionRefs[i].current.focus()\n        if (field === 'category' && categoryRefs[i] && categoryRefs[i].current) categoryRefs[i].current.focus();\n        if (field === 'amount' && amountRefs[i] && amountRefs[i].current) amountRefs[i].current.focus()\n    }\n\n\n    const withUuid = id => transactions.findIndex(t => t.uuid === id)\n\n    const onKeyDown = (t, field, refArray, i, leftRefArray, rightRefArray) => {\n        return e => {\n            if (e.ctrlKey) return;\n            if (e.key === 'Home' || e.key === 'End')\n                if (isActive(t, field)) e.stopPropagation()\n                else e.preventDefault()\n\n            if (e.key === 'ArrowUp' && !isActive(t, field) && !deleteStarted.t)\n                focusRef1d(refArray, i - 1)\n            if (e.key === 'PageUp' && !isActive(t, field) && !deleteStarted.t) {\n                focusRef1d(refArray, i - 10 > 0 ? i - 10 : 0)\n                e.preventDefault()\n            }\n            if (e.key === 'ArrowDown' && !isActive(t, field) && !deleteStarted.t)\n                focusRef1d(refArray, i + 1)\n            if (e.key === 'PageDown'  && !isActive(t, field) && !deleteStarted.t) {\n                focusRef1d(refArray, i + 10 < refArray.length ? i + 10 : refArray.length - 1)\n                e.preventDefault()\n            }\n            if (e.key === 'ArrowLeft'  && !isActive(t, field) && !deleteStarted.t)\n                focusRef1d(leftRefArray, i)\n            if (e.key === 'ArrowRight' && !isActive(t, field) && !deleteStarted.t)\n                focusRef1d(rightRefArray, i)\n\n            if (e.key === 'Insert' && !isActive(t, field) && !deleteStarted.t) {\n                setCurrentOp({\n                    name: 'AddTransaction',\n                    focusAfter: { f: field, i}})\n                addTransaction(i)\n            }\n            if (e.key === 'Delete' &&  !isActive(t, field) && !deleteStarted.t)\n                setDeleteStarted({t, i, field})\n\n            if (e.key === 'Enter') {\n                if (deleteStarted.t) {\n                    deleteTransaction(deleteStarted.t.uuid)\n                    setDeleteStarted({t, i, field, commit: true})\n                }\n                else if (field !== 'category'){\n                    if (!isActive(t, field)) setActiveCell({t, field, commit: false})\n                    else {\n                        setActiveCell({t, field, commit: true})\n                    }\n                }\n                else if (field === 'category' && !changeCategoryFor) {\n                    setChangeCategoryFor(t.uuid)\n                }\n            }\n\n            if (e.key === 'Escape') {\n                if (deleteStarted.t) setDeleteStarted({})\n                else if (filter[field]) updateFilter(null, null)\n                else if (isActive(t, field)) setActiveCell(null)\n            }\n\n            if (!isActive(t, field)) onKeyDownForFilter(field)(e)\n        }\n    }\n    const onKeyDownForFilter = (field) => e => {\n        if (e.key === 'Backspace' && filter[field] && filter[field].length > 1 ) {\n            updateFilter(field, filter[field].substring(0, filter[field].length - 1), e.target.id)\n        }\n        else if (e.key === 'Backspace' && filter[field] && filter[field].length > 0 ) {\n            updateFilter(field, null, e.target.id)\n        }\n        if (dataEntryKeys.test(e.key)) {\n            if (filter[field]) {\n                updateFilter(field, filter[field] + e.key, e.target.id)\n            }\n            else {\n                updateFilter(field, e.key, e.target.id)\n            }\n        }\n    }\n\n    const isActive = (t, field) => {\n        return activeCell && activeCell.t.uuid === t.uuid && activeCell.field === field\n    }\n\n    const categoryCell = (t, i) => {\n        const autoFocus = false //filterSourcecField() === 'category'\n        return <button id={`${t.uuid}_category`}\n                       ref={categoryRefs[i]}\n                       autoFocus={i === 0 && autoFocus}\n                       className={classes('category', changeCategoryFor === t.uuid ? 'changeCategoryFor' : null)}\n                       onKeyDown={onKeyDown(t, 'category', categoryRefs, i, descriptionRefs, amountRefs)}\n                       disabled={changeCategoryFor != null}\n                       onClick={e => e.preventDefault()}>{t.category}</button>\n    }\n\n\n    const inputCell = (t, field, myRefs, i, value, {rightRefs, leftRefs}, other) => {\n        return <InputCell key={`${t.uuid}_${field}`}\n                      ref={myRefs[i]}\n                      id={`${t.uuid}_${field}`}\n                      isActive={() => isActive(t, field)}\n                      className={classes(field, isActive(t, field) ? 'active' : null    )}\n                      onKeyDown={onKeyDown(t, field, myRefs, i, leftRefs, rightRefs)}\n                      readOnly={!isActive(t, field)}\n                      disabled={changeCategoryFor != null}\n                      type='text'\n                      autoFocus={i === 0 && field === 'description' ? true : false}\n                      value={value != null ? value : ''}\n                      onChange={e => updateTransaction(t, field, e.target.value)}\n                      {...other}/>\n    }\n\n    const totalPlus = transactions.map(t => t.amount || 0).filter(a => a > 0).reduce((a, b) => a + b, 0)\n    const totalMinus = transactions.map(t => t.amount || 0).filter(a => a < 0).reduce((a, b) => a + b, 0)\n    const totalAmount = transactions.map(t => t.amount || 0).reduce((a, b) => a + b, 0)\n    const deletingTransaction = (t) => deleteStarted && deleteStarted.t && deleteStarted.t.uuid === t.uuid\n\n    return <div className={className}>\n        <div className='tableContainer'>\n            { transactions.length > 0 &&\n            <table>\n                <thead>\n                <tr>\n                    <th key='day-header'>Day</th>\n                    <th key='description-header'>Description</th>\n                    <th key='category-header'>Category</th>\n                    <th key='amount-header'>Amount</th>\n                </tr>\n                </thead>\n                <tbody>\n                {   transactions\n                    .map((t,i) => (<tr key={t.uuid} className={classes( deletingTransaction(t) ? 'deleting' : null)}>\n                        <td key='day'>\n                            {inputCell(t, 'day', dateRefs, i, t.day, {rightRefs: descriptionRefs}, {maxLength: 2}) }\n                        </td>\n                        <td key='content'>\n                            {inputCell(t, 'description', descriptionRefs, i, t.description, {leftRefs: dateRefs, rightRefs: categoryRefs}) }\n                        </td>\n                        <td key='category'>\n                            {categoryCell(t, i)}\n                        </td>\n                        <td key='amount'>\n                            {inputCell(t, 'amount', amountRefs, i, t.amount, {leftRefs: categoryRefs}) }\n                        </td>\n                    </tr>)) }\n                </tbody>\n            </table> }\n        </div>\n        <dl>\n            <dt>Income</dt>\n            <dd>{round(totalPlus)}</dd>\n            <dt>Expenses</dt>\n            <dd>{round(totalMinus)}</dd>\n            <dt>Difference</dt>\n            <dd>{round(totalAmount)}</dd>\n        </dl>\n    </div>})`\n    \n  position: relative;\n  padding-top: 2rem;\n\n    div.tableContainer {\n        overflow-y: auto; \n        max-height: 75vh;      \n    }\n    \n   th, td {\n      text-align: left;\n      border: 1px solid #ccc;\n      font-weight: normal;\n    }\n    th {\n      position: sticky; top: 0;\n      z-index: 1;      \n      background: #ffffff;\n      padding-top: 0.3rem;\n      padding-bottom: 0.3rem;\n    }\n            \n   input {\n      display: inline-block;\n      height: 1.4rem;\n      padding: 0.25rem;\n      border: none;\n   }\n   input:focus {\n       outline: 2px solid black;\n   }\n  tr.deleting {\n     td { border: 2px solid red;}\n     input:focus { outline: none; }\n     button:focus { outline: none; }\n     input, button {\n        text-decoration: line-through;\n     }\n   }\n   \n   input.active {\n       outline: 2px solid blue;\n   }\n   input.day {\n     width: 3rem;\n   }\n   input.description {\n     width: 30rem;\n   }\n   input.amount {\n     width: 4rem;\n   }\n   button {\n    display: inline-block;\n    border: none;\n    width: 100%;\n    height: 1.4rem;\n    padding: 0.25rem;\n    background-color: transparent;\n   }\n   button.category {\n     width: 10rem;\n   }\n   button:disabled {\n    background-color: #fafafa;\n   }   \n   \n   button.changeCategoryFor {\n      background-color: white;\n      outline: 2px solid blue;\n   }\n   \n   dt {\n     display: inline-block;\n   }\n   dt::after {\n     content: ':';\n   }\n   dd {\n     display: inline-block;\n     margin-left: 0.3rem;\n     margin-right: 3rem;\n   }\n`;\n\n\nconst InputCell = React.forwardRef((props, ref) => {\n\n    const { isActive, ...rest  } = props\n    const [value, setValue] = useState(props.value)\n\n    useEffect(() => {\n        setValue(props.value)\n    }, [props.value])\n\n\n    const onKeyDown = e => {\n        if (isActive() && e.key === 'Enter') {\n           props.onChange(e)\n        }\n        props.onKeyDown(e)\n    }\n\n\n\n    return <input ref={ref}\n                  type='text'\n                  {...rest}\n                  value={value != null ? value : ''}\n                  onChange={e => setValue(e.target.value)}\n                  onKeyDown={onKeyDown}\n    />\n\n})","import styled from \"styled-components\";\nimport React, {createRef, useEffect, useRef, useState} from \"react\";\nimport FocusTrap from \"focus-trap-react\";\n\nconst round = n => Math.round((n + Number.EPSILON) * 100) / 100\nconst dataEntryKeys = new RegExp(\"^[a-zA-Z0-9! \\b]$\");\nconst createRefs1d = (existingArray, n) => Array(n).fill(null).map((_, i) => existingArray[i] || createRef())\nconst focusRef1d = (refArray, i) => refArray && refArray[i] && refArray[i].current && refArray[i].current.focus()\n\n\nexport const Categories = styled(({className, categories, changeCategoryFor, categoryChanged, getTransaction, quitCategoryMode}) => {\n    const [selectCatRefs, setSelectCatRefs] = useState([]);\n    const filterTextRef = useRef()\n    const [filterText, setFilterText] = useState(null);\n\n    const filteredCategories = () => categories.filter(c => !filterText || c.name.toLowerCase().includes(filterText.toLowerCase()))\n    const indexOf = categoryName => filteredCategories().findIndex(c => c.name === categoryName)\n\n    useEffect(() => {\n        setSelectCatRefs(createRefs1d(selectCatRefs, categories.length));\n    }, [categories.length]);\n\n    useEffect(() => {\n        if (changeCategoryFor) {\n            if (filteredCategories().length === 0 && filterTextRef.current) {\n                filterTextRef.current.focus()\n            }\n            else {\n                const index = indexOf(getTransaction(changeCategoryFor).category)\n                if (index >= 0) {\n                    if (changeCategoryFor && selectCatRefs[0].current) selectCatRefs[index].current.focus()\n                } else {\n                    if (changeCategoryFor && selectCatRefs[0].current) selectCatRefs[0].current.focus()\n                }\n            }\n        }\n        else {\n            setFilterText(null)\n        }\n    }, [categories, changeCategoryFor, filterText])\n\n    const SelectButton = ({i, name}) => {\n        const props = changeCategoryFor ? {\n            onKeyDown: e => {\n                if (e.key === 'ArrowUp') focusRef1d(selectCatRefs, i-1)\n                if (e.key === 'PageUp') focusRef1d(selectCatRefs, i-10 > 0 ? i-10 : 0)\n                if (e.key === 'ArrowDown') focusRef1d(selectCatRefs, i+1)\n                if (e.key === 'PageDown') focusRef1d(selectCatRefs, i+10 < selectCatRefs.length ? i + 10 : selectCatRefs.length - 1)\n                return true\n            },\n            className: 'selectMode',\n            onClick: () => categoryChanged(name)\n        } : {\n            disabled: true\n        }\n        return <button ref={selectCatRefs[i]} {...props} >{name}</button>\n    }\n\n    const tableKeyEvents = e => {\n        if (e.key === 'Escape'  && filterText) setFilterText(null)\n        if (e.key === 'Escape') quitCategoryMode()\n        if (e.key === 'Backspace' && filterText) setFilterText(filterText.length > 0 ? filterText.substring(0, filterText.length-1) : null)\n        if (dataEntryKeys.test(e.key)) {\n            setFilterText(filterText ? filterText + e.key : e.key)\n        }\n    }\n\n    return <FocusTrap active={changeCategoryFor !== null}>\n        <div className={className} onKeyDown={tableKeyEvents}>\n            { filterText && <header>\n                <input readOnly={true} ref={filterTextRef} value={`name: ${filterText}`}/>\n            </header> }\n            <div className='tableContainer'>\n                <table>\n                    <thead>\n                    <tr>\n                        <th key='name-header'>Name</th>\n                        <th key='total-header'>Total</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {  filteredCategories()\n                        .filter((c => changeCategoryFor || c.total !== 0))\n                        .map((c, i) => (<tr key={c.id}>\n                            <td key='name'><SelectButton i={i} name={c.name}/></td>\n                            <td key='total'><span>{round(c.total)}</span></td>\n                        </tr>)) }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </FocusTrap>})` \n   position: relative; \n   padding-top: 2rem;\n   margin-left: 5rem;\n   \n   div.tableContainer {\n    overflow-y: auto; \n    max-height: 75vh;\n    }    \n   \n   header {\n     position: absolute;\n     left: 0px;\n     top: -2rem;\n     display: block;\n     border: 1px solid black;\n     background: #ffffff;\n     z-index: 2;\n     \n     input {\n      display: inline-block;\n      height: 1.4rem;\n      padding: 0.25rem;\n      border: none;\n     }\n   }\n   \n   th, td {\n      position: relative;\n      text-align: left;\n      font-weight: normal;\n      border: 1px solid #ccc;\n    }\n   th {\n      position: sticky; top: 0;\n      background: #ffffff;   \n      padding-top: 0.3rem;\n      padding-bottom: 0.3rem;\n      padding-left: 1rem;\n      padding-right: 1rem;\n      z-index: 1;\n   } \n   span {\n    padding: 0.25rem;    \n    padding-left: 1rem;\n    padding-right: 1rem;\n   } \n   button {\n    display: inline-block;\n    border: none;\n    height: 1.9rem;    \n    width: 100%;\n    padding: 0.25rem;    \n    padding-left: 1rem;\n    padding-right: 1rem;\n    background-color: transparent;\n   }   \n   button:focus {\n    background-color: light-grey;\n   }\n   button:disabled {\n    color: black;\n   }\n   selectMode:focus {\n     outline: none\n   }\n`;\n","import styled from \"styled-components\";\n\nimport React from \"react\";\nimport {ResponsiveBar} from \"@nivo/bar\";\n\n\nexport const CategoryBarchart = styled(({className, data}) => <div className={className}>\n    <ResponsiveBar\n        data={data}\n        layout='horizontal'\n        keys={[ 'total']}\n        indexBy=\"name\"\n        margin={{ top: 50, right: 130, bottom: 50, left: 130 }}\n        padding={0.3}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Categories',\n            legendPosition: 'middle',\n            legendOffset: 32\n        }}\n        axisLeft={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Amount',\n            legendPosition: 'middle',\n            legendOffset: -40\n        }}\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        legends={[\n            {\n                dataFrom: 'keys',\n                anchor: 'bottom-right',\n                direction: 'column',\n                justify: false,\n                translateX: 120,\n                translateY: 0,\n                itemsSpacing: 2,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemDirection: 'left-to-right',\n                itemOpacity: 0.85,\n                symbolSize: 20,\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n            }\n        ]}\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n    />\n</div>)`\n  height: 600px;\n`\n","import React, {createRef, useEffect, useLayoutEffect, useRef, useState} from 'react';\nimport {useParams, useHistory} from \"react-router-dom\";\n\nimport styled from 'styled-components'\nimport { v4 as uuidv4 } from 'uuid';\nimport {Transactions} from \"./Transactions\";\nimport {Categories} from \"./Categories\";\nimport {CategoryBarchart} from \"./CategoryBarchart\";\n\n\nconst DataEntrySection = styled.section`  \n  padding-top: 3rem;\n  padding-left: 4rem;`;\n\nconst ContentDiv = styled.div`\n    display: flex;\n`;\n\nconst HelpContainer = styled.aside`  \n    position: absolute;\n    background: white;\n    border: 2px solid black;\n    z-index: 2;\n    ol {\n        list-style-type: none;\n        li {\n            padding: 1rem 2rem 1rem 2rem;\n        }\n     }\n`;\n\nconst classes = array => array.filter(i => i != null).reduce((a, b) => a + ' ' + b)\n\nconst round = n => Math.round((n + Number.EPSILON) * 100) / 100\n\nconst loadTransactions = (year, month) => fetch(`http://localhost:8080/transaction/${year}/${month}`)\n    .then(response => response.json())\n    .then(json => json.transactions.map(t =>\n    { return {\n        id: t.id,\n        uuid: uuidv4(),\n        description: t.description,\n        account: t.account,\n        day: t.day,\n        month: t.month,\n        year: t.year,\n        category: t.category,\n        amount: t.amount\n    }}))\n\nconst loadCurrentMonth = (year, month) => fetch(`http://localhost:8080/month/${year}/${month}`)\n     .then(response => response.ok && response.json())\n\nconst toMonthName = month => {\n    if (month === 1) return 'January'\n    if (month === 2) return 'February'\n    if (month === 3) return 'March'\n    if (month === 4) return 'April'\n    if (month === 5) return 'May'\n    if (month === 6) return 'June'\n    if (month === 7) return 'July'\n    if (month === 8) return 'August'\n    if (month === 9) return 'September'\n    if (month === 10) return 'October'\n    if (month === 11) return 'November'\n    if (month === 12) return 'December'\n}\n\nconst dataEntryKeys = new RegExp(\"^[a-zA-Z0-9! \\b]$\");\nconst focusRef1d = (refArray, i) => refArray && refArray[i] && refArray[i].current && refArray[i].current.focus()\nconst createRefs1d = (existingArray, n) => Array(n).fill(null).map((_, i) => existingArray[i] || createRef())\n\n\nconst passesFilter = (t, filter) =>  {\n    const filterKeys = Object.keys(filter).filter(k => !k.startsWith('--'))\n    return filterKeys.length === 0  ||\n        filterKeys.map(k => { return { f: k, v: filter[k].toLowerCase()}})\n        .filter(pair => t[pair.f] && ('' + t[pair.f]).toLowerCase().includes(pair.v))\n        .length  === filterKeys.length\n}\n\nexport const DataEntry = styled(({className, onChangeHeaderInfo}) => {\n    const routeParams = useParams()\n    const history = useHistory();\n    const [changeCategoryFor, setChangeCategoryFor] = useState(null)\n    const [monthData, setMonthData] = useState()\n    const [categories, setCategories] = useState([])\n    const [transactions, setTransactions] = useState([])\n    const [filteredTransactions, setFilteredTransactions] = useState([])\n    const [currentMonth, setCurrentMonth] = useState({ month: parseInt(routeParams.month), year: parseInt(routeParams.year)})\n    const [showChart, setShowChart] = useState(false)\n    const [showHelp, setShowHelp] = useState(false)\n    const [filter, setFilter] = useState({})\n    const dayFilterRef = useRef()\n    const descriptionFilterRef = useRef()\n    const categoryFilterRef = useRef()\n    const amountFilterRef = useRef()\n\n    useEffect(() => {\n        return history.listen(location => {\n            if (location.pathname.startsWith('/transactions')) {\n                const results = location.pathname.match(/\\/transactions\\/(.+)\\/(.+)/)\n                if (results.length === 3) {\n                    setCurrentMonth({month: parseInt(results[2]), year: parseInt(results[1])})\n                }\n            }\n        })\n    },[history])\n\n    useEffect(() => {\n        if (transactions.length === 0) {\n            descriptionFilterRef.current && descriptionFilterRef.current.focus()\n        }\n    },[transactions.length])\n    useEffect(() => {\n        if (showChart) {\n            descriptionFilterRef.current && descriptionFilterRef.current.focus()\n        }\n    },[showChart])\n\n\n\n    useEffect(() => {\n        fetch(loadCurrentMonth(currentMonth.year, currentMonth.month))\n            .then(json => setMonthData(json))\n        fetch('http://localhost:8080/categories')\n            .then(response => response.json())\n            .then(json => setCategories(json.categories.sort((a, b) => a.name.localeCompare( b.name))))\n            .then(_ => loadTransactions(currentMonth.year, currentMonth.month))\n            .then(t => setTransactions(t))\n    }, [])\n\n    useEffect(() => {\n        setFilteredTransactions(transactions.filter(t => passesFilter(t, filter)))\n    },[transactions, filter])\n\n\n    useEffect(() => {\n        onChangeHeaderInfo(<>\n            <span>{toMonthName(currentMonth.month)} {currentMonth.year}</span>\n        </>)\n        loadTransactions(currentMonth.year, currentMonth.month).then(t => setTransactions(t))\n        loadCurrentMonth(currentMonth.year, currentMonth.month).then(m => setMonthData(m))\n    }, [currentMonth])\n\n\n    useEffect(() => {\n        if (filteredTransactions) {\n            setCategories((categories.map(c => {\n                const newTotal = filteredTransactions.filter(t => t.category === c.name).map(t => t.amount).reduce((total, v) => total + v, 0)\n                return c.total === newTotal ? c : {\n                    id: c.id,\n                    name: c.name,\n                    total: newTotal\n                }})))\n        }\n\n        if (filteredTransactions.length === 0 && filter['--source'] && !changeCategoryFor) {\n            const x = getFilterRef(filter['--source'].split('_')[1]); x && x.current && x.current.focus()\n        }\n        else if (filteredTransactions.length === 0 && !filter['--source']) {\n            const x = getFilterRef('description'); x && x.current && x.current.focus()\n        }\n    }, [filteredTransactions, changeCategoryFor])\n\n    const getFilterRef = source => {\n        if (source === 'day') return dayFilterRef\n        if (source === 'description') return descriptionFilterRef\n        if (source === 'category') return categoryFilterRef\n        if (source === 'amount') return amountFilterRef\n    }\n\n    const updateFilter = (field, value, source) => {\n        const x = {...filter }\n        if (field && value) x[field] = value\n        if (field && !value) delete x[field]\n        if (!field) Object.keys(x).filter(k => !k.startsWith('--')).forEach(k => delete x[k])\n        if (source) x['--source'] = source\n        setFilter(x)\n    }\n\n    const addTransaction = i => {\n        const t = [...transactions]\n        t.splice(i, 0, {\n            id: null,\n            uuid: uuidv4(),\n            account: 'Bank Austria',\n            day: null,\n            month: currentMonth.month,\n            year: currentMonth.year,\n            category: null,\n            amount: null\n        })\n        setTransactions(t)\n    }\n    const deleteTransaction = transactionUuid => setTransactions(transactions.filter(t => t.uuid != transactionUuid))\n\n    const filterSource = () => (filter['--source'] && filter['--source'].split('_')) || [null, null]\n\n    const onKeyDownForFilter = field => e => {\n        if (e.key === 'Escape') updateFilter(null, null)\n\n        if (filterSource()[1] && filterSource()[1] !== field) return\n        if (e.key === 'Backspace' && filter[field] && filter[field].length > 1 ) {\n                updateFilter(field, filter[field].substring(0, filter[field].length - 1))\n        }\n        else if (e.key === 'Backspace' && filter[field] && filter[field].length > 0 ) {\n            updateFilter(field, null)\n        }\n        if (dataEntryKeys.test(e.key)) {\n            if (filter[field]) {\n                updateFilter(field, filter[field] + e.key)\n            }\n            else {\n                updateFilter(field, e.key)\n            }\n        }\n    }\n\n    const setNextMonth = () => {\n        let result\n        if (currentMonth.month === 12) result = {year: currentMonth.year + 1, month: 1}\n        else result = {year: currentMonth.year, month: currentMonth.month + 1}\n        setCurrentMonth(result)\n        history.push(`/transactions/${result.year}/${result.month}`)\n    }\n    const setPrevMonth = () => {\n        let result\n        if (currentMonth.month === 1) result = {year: currentMonth.year - 1, month: 12}\n        else result = {year: currentMonth.year, month: currentMonth.month - 1}\n        setCurrentMonth(result)\n        history.push(`/transactions/${result.year}/${result.month}`)\n    }\n\n    const categoryChanged = cat => {\n        transactions.filter(t => t.uuid === changeCategoryFor).forEach(t => t.category = cat)\n        setChangeCategoryFor(null)\n    }\n    const quitCategoryMode = _ => {\n        setChangeCategoryFor(null)\n    }\n    const getTransaction = uuid => transactions.find(t => t.uuid === uuid)\n    const updateTransaction = (t, field,value) => {\n        console.log(\"UT \", t, field, value)\n        const newT = {...t}\n        newT[field] = value\n        setTransactions(transactions.map(x => x.uuid === newT.uuid ? newT : x))\n    }\n\n    const saveTransaction = (t_uuid) => {\n        const t = transactions.find(t => t.uuid === t_uuid)\n        console.log(t)\n        if (t) {\n            fetch(`http://localhost:8080/transaction`, {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify(t)\n            })\n            .then(response => response.json())\n            .then(savedT => {\n                const result = {...t, ...savedT}\n                setTransactions(transactions.map(x => x.uuid === result.uuid ? result : x))\n            })\n        }\n    }\n\n    const onKeyDownCapture = e => {\n        if (e.getModifierState('Control') && e.key.toLowerCase() === 'g') {\n            setShowChart(!showChart)\n            e.preventDefault()\n            e.stopPropagation()\n        }\n        if (e.getModifierState('Control') && e.key.toLowerCase() === 'h') {\n            setShowHelp(!showHelp)\n            e.preventDefault()\n            e.stopPropagation()\n        }\n        if (e.key ==='Escape' && showHelp) {\n            setShowHelp(false)\n            e.preventDefault()\n            e.stopPropagation()\n        }\n    }\n\n    const onKeyDownBubble = e => {\n        if (e.key === 'End') {\n            setNextMonth()\n            e.preventDefault()\n        }\n        if (e.key === 'Home') {\n            setPrevMonth()\n            e.preventDefault()\n        }\n    }\n\n    const renderFilter = () => {\n\n    const causedEmptyTable = field => filteredTransactions.length === 0 && filterSource()[1] === field\n    const causedEmptyTableOrNoData = field => causedEmptyTable(field) || transactions.length === 0\n\n    return <header className='dataentry'>\n            <table>\n                <tr>\n                    <th>Description</th>\n                    <td className='description'>\n                        <input ref={descriptionFilterRef}\n                               readOnly={true}\n                               disabled={!showChart && !causedEmptyTableOrNoData('description')}\n                               value={filter.description || '' }\n                               onKeyDown={onKeyDownForFilter('description')}\n                               maxLength={1}/>\n                    </td>\n                </tr>\n                <tr>\n                    <th>Category</th>\n                    <td className='category'>\n                        <input ref={categoryFilterRef}\n                               readOnly={true}\n                               disabled={!showChart && !causedEmptyTable('category')}\n                               value={filter.category || '' }\n                               onKeyDown={onKeyDownForFilter('category')}\n                               maxLength={1}/>\n                    </td>\n                </tr>\n            </table>\n        </header>\n    }\n\n    return (\n        <DataEntrySection className={className} onKeyDownCapture={onKeyDownCapture} onKeyDown={onKeyDownBubble}>\n            {showHelp &&\n            <HelpContainer className={className}>\n                <h2>HELP</h2>\n                <ol>\n                    <li>Navigation: ←, ↑, →, ↓, PageUp,PageDown</li>\n                    <li>Prev/Next month:  Home/End</li>\n                    <li>Insert Transaction:  Insert</li>\n                    <li>Delete Transaction:  Delete + Enter</li>\n                    <li>Toggle Graph:  CTRL G</li>\n                </ol>\n            </HelpContainer>}\n            { showChart ? (<>\n                { renderFilter()}\n                <CategoryBarchart data={categories\n                    .filter(c => c.total !== 0)}/>\n            </>) : (\n            <ContentDiv>\n                { (transactions.length === 0 || Object.keys(filter).filter( k => !k.startsWith('--')).length > 0) && renderFilter() }\n\n                <Transactions {...{\n                    filter,\n                    updateFilter,\n                    transactions: filteredTransactions,\n                    changeCategoryFor, setChangeCategoryFor,\n                    updateTransaction,\n                    deleteTransaction,\n                    addTransaction,\n                    saveTransaction}}/>\n                <Categories {...{categories,  changeCategoryFor, categoryChanged, getTransaction, quitCategoryMode}}/>\n            </ContentDiv>) }\n            <footer>\n                <dl>\n                    <dt>Month Start</dt>\n                    <dd>{monthData && round(monthData.startingBalance)}</dd>\n                    <dt>Month End</dt>\n                    <dd>{monthData && round(transactions.map(t => t.amount).reduce((a, b) => a + b, monthData.startingBalance))}</dd>\n                </dl>\n            </footer>\n        </DataEntrySection> )\n})`\n header.dataentry {\n     position: absolute;\n     left: 4rem;\n     top: 4rem;\n     display: block;\n     border: 1px solid black;\n     background: #ffffff;\n     z-index: 2;\n     \n     th {\n       padding-top: 0.3rem;\n       width: 3rem;\n       font-weight: normal;\n       padding-right: 2rem;\n     }\n     \n   }\n\ndt {\n     display: inline-block;\n   }\n   dt::after {\n     content: ':';\n   }\n   dd {\n     display: inline-block;\n     margin-left: 0.3rem;\n     margin-right: 3rem;\n   }   \n     \n`\n","import React, {useEffect, useState} from \"react\";\n\nimport styled from \"styled-components\";\nimport {ResponsiveLine} from \"@nivo/line\";\n\nexport const BalanceReport = props => {\n\n    const [data, setData] = useState(null)\n\n    useEffect(() =>{\n        fetch(`http://localhost:8080/timeseries/balance`)\n            .then(response => response.json())\n            .then(json => json.data.map(d =>{ return {\n                id: d.id,\n                data: d.data.map(v => {\n                    return {\n                        x: v.date,\n                        y: v.amount,\n                    }})\n            }}))\n            .then(data => {\n                setData(data)\n            })\n    }, [])\n\n    console.log(data)\n\n\n    return (<div>\n        { data  && <MyResponsiveLine data={data}/> }\n    </div>)\n}\n\nconst MyResponsiveLine = styled(({className, data}) => <div className={className}>\n    <ResponsiveLine\n        data={data}\n        margin={{ top: 50, right: 110, bottom: 100, left: 60 }}\n        xScale={{\n            type: 'time',\n            format: '%Y-%m-%d',\n            useUTC: false,\n            precision: 'day'\n        }}\n        xFormat=\"time:%Y-%m-%d\"\n        yScale={{ type: 'linear', min: 'auto', max: 'auto' }}\n        curve=\"cardinal\"\n        lineWidth={4}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            orient: 'bottom',\n            format: '%d %b %y',\n            tickValues: 'every month',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 90,\n            legend: 'time',\n            legendOffset: 36,\n            legendPosition: 'center'\n        }}\n        axisLeft={{\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'count',\n            legendOffset: -40,\n            legendPosition: 'center'\n        }}\n        pointSize={10}\n        pointColor={{ theme: 'background' }}\n        pointBorderWidth={2}\n        pointBorderColor={{ from: 'serieColor' }}\n        pointLabel=\"y\"\n        pointLabelYOffset={-12}\n        useMesh={true}\n        legends={[\n            {\n                anchor: 'bottom-right',\n                direction: 'column',\n                justify: false,\n                translateX: 100,\n                translateY: 0,\n                itemsSpacing: 0,\n                itemDirection: 'left-to-right',\n                itemWidth: 80,\n                itemHeight: 20,\n                itemOpacity: 0.75,\n                symbolSize: 12,\n                symbolShape: 'circle',\n                symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemBackground: 'rgba(0, 0, 0, .03)',\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n            }\n        ]}\n    />\n</div>)`\n  height: 85vh;\n  width: 95%;\n`\n","import React, {useEffect, useState} from \"react\";\n\nimport styled from \"styled-components\";\nimport {ResponsiveLine} from \"@nivo/line\";\n\nexport const CategoriesReport = props => {\n\n    const [category, setCategory] = useState(null)\n    const [description, setDescription] = useState(null)\n    const [total, setTotal] = useState(0)\n    const [min, setMin] = useState(1)\n    const [data, setData] = useState(null)\n    const [filteredData, setFilteredData] = useState(null)\n\n    useEffect(() =>{\n        loadData()\n    }, [])\n\n    useEffect(() =>{\n        loadData()\n    }, [description])\n\n\n    useEffect(() => {\n        setFilteredData(data ? filterData(data) : null)\n    }, [data, category, total, min])\n\n\n    const loadData = _ => {\n        var url = 'http://localhost:8080/timeseries/categories'\n        if (description) {\n            url += `?description=${description}`\n        }\n\n        return fetch(url)\n            .then(response => response.json())\n            .then(json => json.data.map(d =>{ return {\n                id: d.id,\n                data: d.data.map(v => {\n                    return {\n                        x: v.date,\n                        y: v.amount,\n                    }})\n            }}))\n            .then(data => {\n                setData(data)\n            })\n    }\n\n    const filterData = data => data\n        .filter(d => !category || d.id.toLowerCase().includes(category))\n        .filter(d => isNaN(total) || Math.abs(d.data.map(z => z.y).reduce((a,b) => a+b, 0)) >= total)\n        .filter(d => isNaN(min) || d.data.map(z => z.y).reduce((a,b) => {\n            const [aa, ab] = [Math.abs(a), Math.abs(b)]\n            return aa > ab  ? aa : ab }, 0) >= min)\n\n\n    const onKeyDownCapture = e => {\n        if (e.key === 'Escape') {\n            setDescription(null)\n            setCategory(null)\n            setTotal(0)\n            setMin(1)\n        }\n    }\n\n    return (<div onKeyDownCapture={onKeyDownCapture}>\n        Description: <input name='description' value={description || ''} onChange={e => setDescription(e.target.value)}/>\n        Category: <input name='category' value={category || ''} onChange={e => setCategory(e.target.value)}/>\n        Total Over Period: <input name='total' value={total || ''} onChange={e => setTotal(parseInt(e.target.value)) }/>\n        Can Exceed: <input name='min' value={min || ''} onChange={e =>  setMin(parseInt(e.target.value)) }/>\n        {filteredData ? filteredData.length : 0 } Categories\n        { filteredData  && <MyResponsiveLine data={filteredData}/> }\n    </div>)\n}\n\nconst MyResponsiveLine = styled(({className, data}) => <div className={className}>\n    <ResponsiveLine\n        data={data}\n        margin={{ top: 50, right: 110, bottom: 100, left: 60 }}\n        xScale={{\n            type: 'time',\n            format: '%Y-%m-%d',\n            useUTC: false,\n            precision: 'month'\n        }}\n        xFormat=\"time:%Y-%m-%d\"\n        yScale={{ type: 'linear', min: 'auto', max: 'auto' }}\n        curve=\"cardinal\"\n        lineWidth={4}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            orient: 'bottom',\n            format: '%d %b %y',\n            tickValues: 'every month',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 90,\n            legend: 'time',\n            legendOffset: 36,\n            legendPosition: 'center'\n        }}\n        axisLeft={{\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'count',\n            legendOffset: -40,\n            legendPosition: 'center'\n        }}\n        pointSize={10}\n        pointColor={{ theme: 'background' }}\n        pointBorderWidth={2}\n        pointBorderColor={{ from: 'serieColor' }}\n        pointLabel=\"y\"\n        pointLabelYOffset={-12}\n        useMesh={true}\n        legends={[\n            {\n                anchor: 'bottom-right',\n                direction: 'column',\n                justify: false,\n                translateX: 100,\n                translateY: 0,\n                itemsSpacing: 0,\n                itemDirection: 'left-to-right',\n                itemWidth: 80,\n                itemHeight: 20,\n                itemOpacity: 0.75,\n                symbolSize: 12,\n                symbolShape: 'circle',\n                symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemBackground: 'rgba(0, 0, 0, .03)',\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n            }\n        ]}\n    />\n</div>)`\n  height:90vh;\n  width: 95%;\n`\n","import React, {useEffect, useState} from \"react\";\n\nimport {useParams} from \"react-router-dom\";\nimport {CategoryBarchart} from \"../dataentry/CategoryBarchart\";\n\nexport const YearReport = props =>  {\n\n    const { year } = useParams()\n    const [categories, setCategories] = useState(null)\n\n    useEffect(() => {\n        fetch(`http://localhost:8080/year/${year}/categories`)\n            .then(response => response.json())\n            .then(json => setCategories(json.data))\n    }, [year])\n\n\n    return (<div>\n        <h2>Year report for {year}</h2>\n        { categories &&  <CategoryBarchart data={categories}/> }\n    </div>)\n}","import React, {useEffect, useState} from \"react\";\n\nimport {BalanceReport} from \"./BalanceReport\";\nimport {CategoriesReport} from \"./CategoriesReport\";\nimport styled from \"styled-components\";\nimport {NavLink, Route, Switch} from \"react-router-dom\";\nimport {YearReport} from \"./YearReport\";\n\nconst ReportsContainer = styled.div`\n    display: flex;\n`\n\nconst ReportsContent = styled.div`\n padding-left: 2rem;\n flex-grow: 2;\n`\n\nconst ReportsNav = styled.div`\n flex-grow: 0;\n padding-left: 2rem;\n ol {\n    list-style-type: none;\n    padding-left: 0;\n }\n ol > li  ol > li  {\n    padding-left: 2rem;\n }\n a {\n      text-align: center;\n      display: block;\n      color: black;\n      height: 3rem;\n      line-height: 3rem;\n      text-decoration: none;\n  }\n \n .navActive {\n    background-color: #DCDCDD;\n }\n`\n\n\nexport const Reports = props => {\n\n    const [years, setYears] = useState(null)\n\n    useEffect(() =>{\n        loadData()\n    }, [])\n\n    const loadData = () => {\n        var url = 'http://localhost:8080/years'\n        return fetch(url)\n            .then(response => response.json())\n            .then(json => setYears(json.years))\n    }\n\n    return (\n    <ReportsContainer>\n        <ReportsNav>\n            <ol>\n                <li><NavLink activeClassName='navActive' to='/reports/timeline'>Overview</NavLink></li>\n               { years && years.map(y => <li key={y}><NavLink activeClassName='navActive' to={`/reports/year/${y}`}>{y}</NavLink></li>) }\n            </ol>\n        </ReportsNav>\n        <ReportsContent>\n            <Switch>\n                <Route key='1' path='/reports/year/:year'>\n                    <YearReport/>\n                </Route>\n                <Route key='1' path='/reports'>\n                    <BalanceReport/>\n                    <CategoriesReport/>\n                </Route>\n            </Switch>\n        </ReportsContent>\n   </ReportsContainer>)\n}\n","\nconst o_date = new Intl.DateTimeFormat('de-de', {\n    day: 'numeric',\n    month: 'numeric',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric'\n});\nconst f_date = (m_ca, m_it) => Object({...m_ca, [m_it.type]: m_it.value});\nexport const formatDDMMYYYY = date => {\n    const d = o_date.formatToParts(date).reduce(f_date, {});\n    return d.day + '.' + d.month + '.' + d.year\n}\n\nexport const formatHHMM = date => {\n    const d = o_date.formatToParts(date).reduce(f_date, {});\n    return d.hour + ':' + d.minute\n}","import React, {useEffect, useReducer, useState} from 'react';\nimport styled from \"styled-components\";\nimport {v4 as uuidv4} from \"uuid\";\nimport {formatDDMMYYYY, formatHHMM} from \"../util\";\n\n\nexport const Upload = styled(({className}) => {\n\n    const [accounts, setAccounts] = useState([])\n    const [feeds, setFeeds] = useState([])\n    const [statements, setStatements] = useState([])\n    const [newAccountName, setNewAccountName] = useState([])\n    const [uploadToAccount, setUploadToAccount] = useState(null)\n    const [currentBalance, setCurrentBalance] = useState(null)\n    const [file, setFile] = useState(null)\n    const [dupsForFeed, setDupsForFeed] = useState(null)\n    const [dups, dispatchDups] = useReducer(dupsReducer, [])\n\n    const [categories, dispatchCat] = useReducer(categoriesReducer, []);\n\n    useEffect(() => {\n        loadAccounts()\n        loadFeeds()\n        loadStatements()\n        loadCategories()\n    }, [])\n\n    function dupsReducer(state, action) {\n        console.log(action)\n        switch (action.type) {\n            case 'set-dups':\n                return action.duplicates;\n            case 'change-dup':\n                const v = Object.assign({}, state);\n                v[action.hash] = state[action.hash].map(d => {\n                    return  d.recordNumber === action.recordNumber ? {...d, duplicate: !d.duplicate} : d;\n                })\n                return v;\n            case 'make-assumptions':\n                Object.keys(state).forEach(k => {\n                    if (state[k].length === 1) state[k][0].duplicate = true\n                    else {\n                        state[k][0].duplicate = false\n                        state[k].slice(1).forEach(d => {\n                            d.duplicate = true\n                        })\n                    }\n                })\n                return { ...state }\n        }\n    }\n\n    function categoriesReducer(state, action) {\n        switch (action.type) {\n            case 'add-category':\n                return [...state, { id: uuidv4(), name: null, matchers: []}]\n            case 'remove-category':\n                return state.filter(c => c.id !== action.categoryId)\n            case 'update-category-name':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    name: action.name } : c )\n            case 'add-matcher':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    matchers: [...c.matchers, {id : uuidv4(), pattern: null}]} : c)\n            case 'remove-matcher':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    matchers: c.matchers.filter(m => m.id !== action.matcherId) } : c)\n            case 'update-matcher':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    matchers: c.matchers.map(m => m.id === action.matcherId ? {\n                        ...m,\n                        pattern: action.pattern\n                    } : m)} : c)\n            case 'load':\n                return action.categories\n            default:\n                throw new Error();\n        }\n    }\n\n    const loadAccounts = () => fetch(`http://localhost:8080/account`)\n        .then(response => response.json())\n        .then(json => setAccounts(json.accounts))\n\n    const loadFeeds = () => fetch(`http://localhost:8080/feed`)\n        .then(response => response.json())\n        .then(json => setFeeds(json.feeds))\n\n    const loadStatements = () => fetch(`http://localhost:8080/statement`)\n        .then(response => response.json())\n        .then(json => setStatements(json.statements))\n\n    const loadCategories = () => fetch(`http://localhost:8080/category`)\n        .then(response => response.json())\n        .then(json => dispatchCat({type: 'load', categories: json.categories}))\n\n    const addAccount = () => fetch(`http://localhost:8080/account/${newAccountName}`, { method: 'PUT' })\n        .then(response => response.ok && loadAccounts())\n\n    const deleteAccount = (accountId) => fetch(`http://localhost:8080/account/${accountId}`, { method: 'DELETE' })\n        .then(response => response.ok && loadAccounts())\n\n    const deleteImport = (feedId) => fetch(`http://localhost:8080/feed/${feedId}`, { method: 'DELETE' })\n        .then(response => response.ok && loadAccounts() && loadFeeds() && loadStatements())\n\n    const duplicateCheck = (feedId) => fetch(`http://localhost:8080/duplicateCheck/${feedId}`, { method: 'GET' })\n        .then(response => response.ok && response.json())\n        .then(json => {\n            setDupsForFeed(feedId)\n            dispatchDups({type: 'set-dups', duplicates: groupByHash(json.duplicates)})\n        })\n\n    const saveCategories = () => fetch(`http://localhost:8080/category`, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(categories)})\n        .then(response => loadCategories())\n\n    const saveDuplicates = () => fetch(`http://localhost:8080/duplicates/${dupsForFeed}`, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(dups)})\n        .then(response => response.ok && response.json())\n        .then(json => dispatchDups({type: 'set-dups', duplicates: groupByHash(json.duplicates)}))\n\n\n    const upload = (account) => {\n        const formData = new FormData()\n        formData.append('file', file)\n        if (currentBalance)\n            formData.append('currentBalance', currentBalance)\n        fetch(`http://localhost:8080/upload/${account.name}`,{\n            method: 'POST',\n            body: formData\n        }).then(response => response.json())\n        .then(response => {\n            if (!response.error) {\n                setDupsForFeed(response.feedId)\n                dispatchDups({type: 'set-dups', duplicates: groupByHash(response.duplicates)})\n                loadAccounts();\n                loadFeeds();\n                setDupsForFeed(feeds.filter(f => f.file === file.name).first)\n                loadStatements()\n            }\n        })\n    }\n    const groupByHash = duplicates => {\n        const result = {}\n        duplicates.forEach(d => result[d.contentHash] ? result[d.contentHash].push(d) : result[d.contentHash] = [d])\n        return result\n    }\n\n    const setDuplicateAssumption = dup => {\n        if (dup.length === 1) dup[0].duplicate = true\n        else {\n            dup[0].duplicate = false\n            dup.slice(1).forEach(d => { d.duplicate = true})\n        }\n        return dup\n    }\n\n    const rowStyleFor = dup => { if (dup.duplicate) return 'duplicate-row'; else return ''; }\n\n    return (<div className={className}>\n        <section>\n            <h2>Accounts</h2>\n            <ul>\n                { accounts && accounts.map(a => (<>\n                <li>{a.name} - <button onClick={_ => deleteAccount(a.id)}>Delete</button><button onClick={_ => setUploadToAccount(a.id)}>Upload</button></li>\n                <ul>\n                    <li>Number of transactions: {a.numberOfTransactions}</li>\n                    <li>Number of statements: {statements && statements.filter(s => s.accountId === a.id).length}</li>\n                    <li>Uploads:</li>\n                    { feeds.length > 0 && (<ol>\n                        {feeds.map(f => (<li>{f.file} uploaded on {formatDDMMYYYY(new Date(f.dateImported))} at {formatHHMM(new Date(f.dateImported))}\n                        <button onClick={() => duplicateCheck(f.id)}>duplicate check</button>\n                        <button onClick={() => deleteImport(f.id)}>delete</button>\n                        </li>))}\n                    </ol>) }\n                    { uploadToAccount === a.id && (<ol>\n\n                        { statements.filter(s => s.accountId === a.id).length === 0 && <li>Please specify the most current balance\n                            <input name='balance'\n                                   type='input'\n                                   value={currentBalance !== null ? currentBalance : ''}\n                                   onChange={e => setCurrentBalance(e.target.value)}/></li> }\n                        <li>Please select file  to upload\n                                <input name='upload'\n                                       type='file'\n                                       onChange={e => setFile(e.target.files[0])}/></li>\n                        <li><button onClick={() => upload(a)}>Go!</button></li>\n                    </ol>)}\n                </ul></>)) }\n\n                <li>New: <input name='newAccount' value={newAccountName} onChange={e => setNewAccountName(e.target.value)}/>\n                    <button onClick={_ => addAccount()}>Add</button></li>\n            </ul>\n        </section>\n        { dups && Object.keys(dups).length > 0 && (<section>\n            <h2>Duplicates</h2>\n            <button name=\"assumptions\" onClick={_ => dispatchDups({type: 'make-assumptions'})}>Assumptions</button>\n            <table>\n                <thead>\n                <tr>\n                    <th>line</th>\n                    <th>content</th>\n                    <th>Duplicate</th>\n                </tr>\n                </thead>\n                <tbody>\n                { Object.keys(dups).map((k, i) => <>\n                        <tr key={`${i}-dashed}`}><td>----------------</td></tr>\n                        { dups[k].map((d,j) =>  <tr key={`${i}-${j}`} className={rowStyleFor(d)}>\n                            <td>{d.recordNumber}</td>\n                            <td><label for={`duplicate-${i}-${j}`}>{d.content}</label></td>\n                            <td>{d.count}</td>\n                            <td><input id={`duplicate-${i}-${j}`}\n                                       name={`duplicate-${i}-${j}`}\n                                       type=\"checkbox\"\n                                       checked={d.duplicate}\n                                       onChange={_ => dispatchDups(\n                                           {   type: 'change-dup',\n                                               hash: d.contentHash,\n                                               recordNumber: d.recordNumber,\n                                               duplicate: !d.duplicate})}/>\n                            </td>\n                        </tr>)}\n                        </>)}\n                </tbody>\n            </table>\n            <button name='save'onClick={() => saveDuplicates()}>Save</button>\n        </section>)}\n\n        <section>\n            <h2>Categories</h2>\n            <ul>\n                { categories && categories.map(c => (<>\n                    <li><input name={`category-${c.id}`} value={c.name} onChange={e => dispatchCat({type: 'update-category-name', categoryId: c.id, name: e.target.value})}/>\n                        <button onClick={() => dispatchCat({type: 'remove-category', categoryId: c.id})}>X</button>\n                    </li>\n                    <ul>\n                        { c.matchers && c.matchers.map(m => <li><input name={m.id} value={m.pattern} onChange={e => dispatchCat({type: 'update-matcher', categoryId: c.id, matcherId: m.id, pattern: e.target.value})}/>\n                        <button onClick={() => dispatchCat({type: 'remove-matcher', categoryId: c.id, matcherId: m.id})}>X</button>\n                        </li>)}\n                        <li><button onClick={_ => dispatchCat({type: 'add-matcher', categoryId: c.id})}>Add</button></li>\n                        </ul></>))}\n                <li><button onClick={_ => dispatchCat({type: 'add-category'})}>Add</button></li>\n            </ul>\n            <button onClick={saveCategories}>Save</button>\n        </section>\n    </div>)\n})` \n\n .duplicate-row {\n   text-decoration: line-through;\n }\n `","import React, {useEffect, useState} from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport const Overview = props => {\n    const { accountName } = useParams()\n    const [overview, setOverview] = useState(null)\n\n    useEffect(() => {\n        fetch(`http://localhost:8080/account/${accountName}/overview`)\n            .then(response => response.ok && response.json())\n            .then(json => setOverview(json))\n    }, [])\n\n    console.log(overview)\n    return (<div>\n        <h2>Overview</h2>\n        { overview && (<dl>\n            <dt>From</dt>\n            <dd>{new Date(overview.fromDate).toLocaleDateString()}</dd>\n            <dt>To</dt>\n            <dd>{new Date(overview.toDate).toLocaleDateString()}</dd>\n            <dt>Transactions</dt>\n            <dd>{overview.numberOfTransactions}</dd>\n            <dt>End of Month Statements Generated</dt>\n            <dd>{overview.numberOfStatements}</dd>\n        </dl>)\n        }\n    </div>)\n}","import React, {useEffect, useState} from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {useParams} from \"react-router-dom\";\n\nexport const FixedBalances = props => {\n    const { accountName } = useParams()\n    const [fixedBalances, setFixedBalances] = useState([])\n    const [dateInput, setDateInput] = useState(null)\n    const [amountInput, setAmountInput] = useState(null)\n\n    useEffect(() => {\n        loadFixedBalances()\n    }, [])\n\n    const loadFixedBalances = () => fetch(`http://localhost:8080/account/${accountName}/fixedbalance`)\n        .then(response => response.ok && response.json())\n        .then(json => setFixedBalances(json.balances))\n\n    const saveFixedBalance = () => {\n        fetch(`http://localhost:8080/account/${accountName}/fixedbalance`, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                id: uuidv4(),\n                time: dateInput,\n                amount: amountInput\n            })})\n            .then(response => response.ok && response.json())\n            .then(json => setFixedBalances(json.balances))\n    }\n\n    return (<div>\n        <h2>Fixed Balances</h2>\n        Date: <input name='date' type='text' value={dateInput} onChange={e => setDateInput(e.target.value)}/>\n        Amount: <input name='amount' type='text' value={amountInput} onChange={e => setAmountInput(e.target.value)}/>\n        <button name='save' onClick={_ => saveFixedBalance()}>Add</button>\n        <table width='60%'>\n            <thead>\n            <tr>\n                <th key='th0'>Date</th>\n                <th key='th1'>Amount</th>\n            </tr>\n            </thead>\n            <tbody>\n            { fixedBalances && fixedBalances.map( fb => <tr>\n                    <td>{new Date(fb.time).toLocaleDateString('en', { year: 'numeric', month: 'long', day: 'numeric' })} {new Date(fb.time).toLocaleTimeString()}</td>\n                    <td>{fb.amount}</td>\n                </tr>)}\n            </tbody>\n        </table>\n    </div>)\n}","import React, {useEffect, useReducer, useState} from \"react\";\nimport styled from \"styled-components\";\n\n\nexport const Duplicates = styled( ({className, feedId})  => {\n\n    const [dupsForFeed, setDupsForFeed] = useState(null)\n    const [dups, dispatchDups] = useReducer(dupsReducer, [])\n\n    console.log(feedId)\n\n    const duplicateCheck = (feedId) => fetch(`http://localhost:8080/duplicateCheck/${feedId}`, { method: 'GET' })\n        .then(response => response.status === 200 && response.json())\n        .then(json => {\n            if (json) {\n                setDupsForFeed(feedId)\n                dispatchDups({type: 'set-dups', duplicates: groupByHash(json.duplicates)})\n            }\n        })\n\n    const saveDuplicates = () => fetch(`http://localhost:8080/duplicates/${dupsForFeed}`, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(dups)})\n        .then(response => response.ok && response.json())\n        .then(json => dispatchDups({type: 'set-dups', duplicates: groupByHash(json.duplicates)}))\n\n    const groupByHash = duplicates => {\n        const result = {}\n        duplicates.forEach(d => result[d.contentHash] ? result[d.contentHash].push(d) : result[d.contentHash] = [d])\n        return result\n    }\n\n    const rowStyleFor = dup => { if (dup.duplicate) return 'duplicate-row'; else return ''; }\n\n    useEffect(() => {\n        duplicateCheck(feedId)\n    }, [feedId])\n\n    function dupsReducer(state, action) {\n        console.log(action)\n        switch (action.type) {\n            case 'set-dups':\n                return action.duplicates;\n            case 'change-dup':\n                const v = Object.assign({}, state);\n                v[action.hash] = state[action.hash].map(d => {\n                    return  d.recordNumber === action.recordNumber ? {...d, duplicate: action.duplicate} : d;\n                })\n                return v;\n            case 'make-assumptions':\n                Object.keys(state).forEach(k => {\n                    if (state[k].length === 1) state[k][0].duplicate = true\n                    else {\n                        state[k][0].duplicate = false\n                        state[k].slice(1).forEach(d => {\n                            d.duplicate = true\n                        })\n                    }\n                })\n                return { ...state }\n        }\n    }\n\n    return dups && Object.keys(dups).length > 0 && (<section className={className}>\n            <h2>Duplicates</h2>\n            <button name=\"assumptions\" onClick={_ => dispatchDups({type: 'make-assumptions'})}>Assumptions</button>\n            <button name='save'onClick={() => saveDuplicates()}>Save</button>\n            <table>\n                <thead>\n                <tr>\n                    <th>line</th>\n                    <th>content</th>\n                    <th>Duplicate</th>\n                </tr>\n                </thead>\n                <tbody>\n                { Object.keys(dups).map((k, i) => <>\n                    <tr key={`${i}-dashed}`}><td>----------------</td></tr>\n                    { dups[k].map((d,j) =>  <tr key={`${i}-${j}`} className={rowStyleFor(d)}>\n                        <td key={`d1-${i}-${j}`}>{d.recordNumber}</td>\n                        <td key={`d2-${i}-${j}`}><label for={`duplicate-${i}-${j}`}>{d.content}</label></td>\n                        <td key={`d3-${i}-${j}`}>{d.count}</td>\n                        <td key={`d4-${i}-${j}`} className='radio'>\n                            <label>yes\n                                <input id={`duplicate-${i}-${j}`}\n                                       name={`duplicate-${i}-${j}`}\n                                       type=\"radio\"\n                                       value=\"yes\"\n                                       checked={d.duplicate === true}\n                                       onChange={_ => dispatchDups(\n                                           {   type: 'change-dup',\n                                               hash: d.contentHash,\n                                               recordNumber: d.recordNumber,\n                                               duplicate: true})}/>\n                            </label>\n                            <label>no\n                                <input id={`duplicate-${i}-${j}`}\n                                       name={`duplicate-${i}-${j}`}\n                                       type=\"radio\"\n                                       value=\"no\"\n                                       checked={d.duplicate !== true && d.duplicate !== null}\n                                       onChange={_ => dispatchDups(\n                                           {   type: 'change-dup',\n                                               hash: d.contentHash,\n                                               recordNumber: d.recordNumber,\n                                               duplicate: false})}/>\n                            </label>\n                            <label>don't know\n                                <input id={`duplicate-${i}-${j}`}\n                                       name={`duplicate-${i}-${j}`}\n                                       type=\"radio\"\n                                       value=\"unknown\"\n                                       checked={d.duplicate === null}\n                                       onChange={_ => dispatchDups(\n                                           {   type: 'change-dup',\n                                               hash: d.contentHash,\n                                               recordNumber: d.recordNumber,\n                                               duplicate: null})}/>\n                            </label>\n                        </td>\n                    </tr>)}\n                </>)}\n                </tbody>\n            </table>\n        </section>)\n})` \n\n .duplicate-row {\n   td {\n    text-decoration: line-through;\n   }\n   td.radio {\n    text-decoration: none;\n   }\n   \n }\n `","import React, {useEffect, useReducer, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {Duplicates} from \"./duplicates\";\n\nimport styled from \"styled-components\";\n\nconst StyledDt = styled.dt`\n    display: inline-block;\n`\n\nconst StyledDd = styled.dd`\n    margin-left: 4pt;\n    display: inline-block;\n`\n\nexport const Feeds = props => {\n    const { accountName } = useParams()\n    const [feeds, setFeeds] = useState([])\n    const [activeFeed, setActiveFeed] = useState(null)\n\n    useEffect(() => {\n        loadFeeds()\n    }, [])\n\n    const loadFeeds = () => fetch(`http://localhost:8080/account/${accountName}/feed`)\n        .then(response => response.ok && response.json())\n        .then(json => setFeeds(json.feeds))\n\n    const deleteImport = (feedId) => fetch(`http://localhost:8080/feed/${feedId}`, { method: 'DELETE' })\n        .then(response => response.ok && loadFeeds() && setActiveFeed(null))\n\n    const upload = (uploadFile) => {\n        console.log(uploadFile)\n        if (uploadFile) {\n            const formData = new FormData()\n            formData.append('file',uploadFile)\n            fetch(`http://localhost:8080/account/${accountName}/feed`, {\n                method: 'POST',\n                body: formData\n            }).then(response => response.json())\n                .then(response => {\n                    if (!response.error) {\n                        loadFeeds();\n                    }\n                })\n        }\n    }\n\n    return (<div>\n        <h2>Feeds</h2>\n        <input type='file' name='upload' onChange={ e => upload(e.target.files[0])}/>\n        <table width=\"100%\">\n            <tbody>\n            { feeds.map((f, i) => <tr key={`f0-${i}`}>\n                 <td key={`f1-${i}`}><input id={`f1-${i}`} type='radio' name='feed' onChange={_ => setActiveFeed(f)} checked={f === activeFeed}/></td>\n                 <td key={`f2-${i}`}><label htmlFor={`f1-${i}`}> {f.file}</label></td>\n                 <td key={`f3-${i}`}>{new Date(f.dateImported).toLocaleDateString('en', { year: 'numeric', month: 'long', day: 'numeric' })} {new Date(f.dateImported).toLocaleTimeString()}</td>\n             </tr>)}\n            </tbody>\n        </table>\n        { activeFeed && (<>\n            <div key='overview'>\n                <dl>\n                    <StyledDt>From:</StyledDt>\n                    <StyledDd>{new Date(activeFeed.fromDate).toLocaleDateString('en', { year: 'numeric', month: 'long', day: 'numeric' })}</StyledDd>\n                </dl>\n                    <StyledDt>To:</StyledDt>\n                    <StyledDd>{new Date(activeFeed.toDate).toLocaleDateString('en', { year: 'numeric', month: 'long', day: 'numeric' })}</StyledDd>\n                <dl>\n                    <StyledDt>Transactions:</StyledDt>\n                    <StyledDd>{activeFeed.numberOfTransactions}</StyledDd>\n                </dl>\n            </div>\n            <button name='delete' onClick={ _ => deleteImport(activeFeed.feedId)}>Delete</button>\n            <Duplicates feedId={activeFeed.feedId}/></>)}\n    </div>)\n}","import React, {useEffect, useState} from \"react\";\n\nimport styled from \"styled-components\";\nimport {NavLink, Route, Switch} from \"react-router-dom\";\nimport {Overview} from \"./overview\";\nimport {FixedBalances} from \"./fixedbalances\";\nimport {Feeds} from \"./feeds\";\n\nconst AccountsContainer = styled.div`\n    display: flex;\n`\n\nconst AccountsContent = styled.div`\n padding-left: 2rem;\n flex-grow: 2;\n`\n\nconst AccountsNav = styled.div`\n flex-grow: 0;\n padding-left: 2rem;\n ol {\n    list-style-type: none;\n    padding-left: 0;\n }\n ol > li  ol > li  {\n    padding-left: 2rem;\n }\n a {\n      text-align: center;\n      display: block;\n      color: black;\n      height: 3rem;\n      line-height: 3rem;\n      text-decoration: none;\n  }\n \n .navActive {\n    background-color: #DCDCDD;\n }\n`\n\n\nexport const Accounts = props => {\n\n    const [accounts, setAccounts] = useState([])\n\n    useEffect(() =>{\n        loadData()\n    }, [])\n\n    const loadData = () => {\n        var url = 'http://localhost:8080/account'\n        return fetch(url)\n            .then(response => response.json())\n            .then(json => setAccounts(json.accounts))\n    }\n\n    return (\n        <AccountsContainer>\n            <AccountsNav>\n                <ol>\n                    { accounts && accounts.map(a => <li key={a.name}>\n                        <NavLink activeClassName='navActive' to={`/accounts/${a.name}`}>{a.name}</NavLink>\n                        <ol>\n                            <li><NavLink activeClassName='navActive' to={`/accounts/${a.name}/feeds`}>Feeds</NavLink></li>\n                            <li><NavLink activeClassName='navActive' to={`/accounts/${a.name}/fixedbalances`}>FixedBalances</NavLink></li>\n                        </ol>\n                    </li>) }\n                </ol>\n            </AccountsNav>\n            <AccountsContent>\n                <Switch>\n                    <Route key='route-2' path='/accounts/:accountName/feeds'>\n                        <Feeds/>\n                    </Route>\n                    <Route key='route-3' path='/accounts/:accountName/fixedbalances'>\n                        <FixedBalances/>\n                    </Route>\n                    <Route key='route-3' path='/accounts/:accountName'>\n                        <Overview/>\n                    </Route>\n                </Switch>\n            </AccountsContent>\n        </AccountsContainer>)\n}\n","import React, {useEffect, useReducer, useState} from \"react\";\nimport {v4 as uuidv4} from \"uuid\";\n\nexport const Categories = props => {\n\n    const [categories, dispatchCat] = useReducer(categoriesReducer, []);\n\n\n    useEffect(() => {\n        loadCategories()\n    }, [])\n\n    const loadCategories = () => fetch(`http://localhost:8080/category`)\n        .then(response => response.json())\n        .then(json => dispatchCat({type: 'load', categories: json.categories}))\n\n    const saveCategories = () => fetch(`http://localhost:8080/category`, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(categories)})\n        .then(response => loadCategories())\n\n    function categoriesReducer(state, action) {\n        switch (action.type) {\n            case 'add-category':\n                return [...state, { id: uuidv4(), name: null, matchers: []}]\n            case 'remove-category':\n                return state.filter(c => c.id !== action.categoryId)\n            case 'update-category-name':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    name: action.name } : c )\n            case 'add-matcher':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    matchers: [...c.matchers, {id : uuidv4(), pattern: null}]} : c)\n            case 'remove-matcher':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    matchers: c.matchers.filter(m => m.id !== action.matcherId) } : c)\n            case 'update-matcher':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    matchers: c.matchers.map(m => m.id === action.matcherId ? {\n                        ...m,\n                        pattern: action.pattern\n                    } : m)} : c)\n            case 'load':\n                return action.categories\n            default:\n                throw new Error();\n        }\n    }\n\n    return (<section>\n            <h2>Categories</h2>\n            <ul>\n                { categories && categories.map(c => (<>\n                    <li><input name={`category-${c.id}`} value={c.name} onChange={e => dispatchCat({type: 'update-category-name', categoryId: c.id, name: e.target.value})}/>\n                        <button onClick={() => dispatchCat({type: 'remove-category', categoryId: c.id})}>X</button>\n                    </li>\n                    <ul>\n                        { c.matchers && c.matchers.map(m => <li><input name={m.id} value={m.pattern} onChange={e => dispatchCat({type: 'update-matcher', categoryId: c.id, matcherId: m.id, pattern: e.target.value})}/>\n                            <button onClick={() => dispatchCat({type: 'remove-matcher', categoryId: c.id, matcherId: m.id})}>X</button>\n                        </li>)}\n                        <li><button onClick={_ => dispatchCat({type: 'add-matcher', categoryId: c.id})}>Add</button></li>\n                    </ul></>))}\n                <li><button onClick={_ => dispatchCat({type: 'add-category'})}>Add</button></li>\n            </ul>\n            <button onClick={saveCategories}>Save</button>\n        </section>\n    )\n}","import React, {useState} from 'react';\nimport {BrowserRouter as Router, NavLink, Route, Switch, Redirect} from 'react-router-dom';\nimport './App.css';\nimport {DataEntry} from \"./containers/dataentry/DataEntry\";\nimport styled from 'styled-components'\nimport {Reports} from \"./containers/reports/reports\";\nimport {Upload} from \"./containers/upload/upload\";\nimport {Accounts} from \"./containers/accounts/accounts\";\nimport {Categories} from \"./containers/categories/categories\";\n\nconst StyledHeader = styled.header`\n    display: flex;\n    ol {\n        display: flex;\n        margin: 0;\n        list-style-type: none;\n        li {\n          padding-right: 1rem;\n        }\n        a {\n          text-align: center;\n          display: block;\n          color: black;\n          height: 3rem;\n          line-height: 3rem;\n          text-decoration: none;\n        }\n        .navActive {\n          background-color: #DCDCDD;\n        }\n     }\n   h1 {\n     margin: 0;\n     margin-left: 5rem;\n   }  \n     border-bottom: solid black 1px;\n`;\n\nconst StyledMain = styled.main`\n`;\n\nfunction App() {\n  const [headerInfo, setHeaderInfo] = useState(\"\")\n  const currentMonth = new Date().getMonth() + 1\n  const currentYear = new Date().getFullYear()\n\n  return (\n    <div className=\"App\">\n    <Router>\n      <StyledHeader className=\"App-header\">\n            <ol>\n                <li><NavLink activeClassName='navActive' to=\"/accounts\">Accounts</NavLink></li>\n                <li><NavLink activeClassName='navActive' to=\"/categories\">Categories</NavLink></li>\n                <li><NavLink activeClassName='navActive' to=\"/transactions\">Transactions</NavLink></li>\n                <li><NavLink activeClassName='navActive' to=\"/reports\">Reports</NavLink></li>\n            </ol>\n            <h1>{headerInfo}</h1>\n      </StyledHeader>\n      <StyledMain>\n          <Switch>\n            <Route exact={true} key=\"route-1\" path='/transactions'>\n              <Redirect to={`/transactions/${currentYear}/${currentMonth}`}/>\n            </Route>\n              <Route exact={true} key=\"route-1\" path='/transactions/:year/:month'>\n                  <DataEntry onChangeHeaderInfo={(text) => setHeaderInfo(text)}/>\n              </Route>\n            <Route exact={false} key=\"route-2\" path='/reports'>\n                <Reports/>\n            </Route>\n            <Route exact={false} key=\"route-3\" path='/accounts'>\n                <Accounts/>\n            </Route>\n          <Route exact={false} key=\"route-3\" path='/categories'>\n              <Categories/>\n          </Route>\n          <Route exact={false} key=\"route-3\" path='/upload'>\n              <Upload/>\n          </Route>\n            <Route>\n                <Redirect to='enterdata'/>\n            </Route>\n          </Switch>\n      </StyledMain>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}