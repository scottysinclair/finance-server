{"version":3,"sources":["containers/monthlyreport/Transactions.js","containers/monthlyreport/Categories.js","containers/monthlyreport/CategoryBarchart.js","containers/monthlyreport/MonthyReport.js","containers/reports/BalanceReport.js","containers/reports/CategoriesReport.js","containers/reports/YearReport.js","containers/reports/reports.js","containers/util.js","containers/upload/upload.js","containers/accounts/overview.js","containers/accounts/fixedbalances.js","containers/accounts/duplicates.js","containers/accounts/feeds.js","containers/accounts/duplicates2.js","containers/accounts/accounts.js","containers/categories/categories.js","App.js","serviceWorker.js","index.js"],"names":["classes","array","filter","i","reduce","a","b","round","n","Math","Number","EPSILON","createRefs1d","existingArray","Array","fill","map","_","createRef","Transactions","styled","className","updateFilter","updateSort","transactions","changeCategoryFor","setChangeCategoryFor","updateTransaction","saveTransaction","addTransaction","useState","dateRefs","setDateRefs","descriptionRefs","setDescriptionRefs","categoryRefs","setCategoryRefs","amountRefs","setAmountRefs","activeCell","setActiveCell","prev","value","ref","useRef","useEffect","current","usePrevious","tableContainerRef","focusRef1d","refArray","options","scrollTop","setSelectionRange","focus","max","length","useLayoutEffect","focusField","findIndex","t","uuid","withUuid","commit","field","id","onKeyDown","leftRefArray","rightRefArray","e","ctrlKey","key","stopPropagation","preventDefault","isActive","onKeyDownForFilter","inputCell","myRefs","other","rightRefs","leftRefs","InputCell","readOnly","disabled","type","autoFocus","onChange","target","totalPlus","amount","totalMinus","totalAmount","day","maxLength","description","category","React","forwardRef","props","rest","setValue","Categories","categories","categoryChanged","getTransaction","quitCategoryMode","selectCatRefs","setSelectCatRefs","filterTextRef","filterText","setFilterText","filteredCategories","c","name","toLowerCase","includes","createRefsArray","index","categoryName","SelectButton","onClick","active","substring","dataEntryKeys","test","total","count","RegExp","CategoryBarchart","data","layout","keys","indexBy","margin","top","right","bottom","left","padding","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","animate","motionStiffness","motionDamping","DataEntrySection","section","ContentDiv","div","HelpContainer","aside","loadTransactions","year","month","fetch","then","response","json","feed","uuidv4","account","loadCurrentMonth","ok","toMonthName","MonthyReport","onChangeHeaderInfo","routeParams","useParams","history","useHistory","monthData","setMonthData","setCategories","setTransactions","filteredTransactions","setFilteredTransactions","parseInt","currentMonth","setCurrentMonth","showChart","setShowChart","showHelp","setShowHelp","setFilter","sort","setSort","filterRef","getModifierState","setNextYear","setNextMonth","setPrevYear","setPrevMonth","window","addEventListener","removeEventListener","listen","location","pathname","startsWith","results","match","localeCompare","number","toString","passesFilter","document","title","m","trans","newTotal","v","result","push","compareDescriptions","compareCategories","renderFilter","class","up","sortTransactions","console","log","newT","x","splice","t_uuid","find","method","headers","body","JSON","stringify","savedT","cat","forEach","startingBalance","BalanceReport","setData","d","date","y","MyResponsiveLine","xScale","format","useUTC","precision","xFormat","yScale","min","curve","lineWidth","orient","tickValues","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","from","pointLabel","pointLabelYOffset","useMesh","symbolShape","symbolBorderColor","itemBackground","CategoriesReport","setCategory","setDescription","setTotal","setMin","filteredData","setFilteredData","loadData","filterData","url","isNaN","abs","z","aa","ab","onKeyDownCapture","YearReport","ReportsContainer","ReportsContent","ReportsNav","Reports","years","setYears","activeClassName","to","path","o_date","Intl","DateTimeFormat","hour","minute","f_date","m_ca","m_it","Object","Upload","accounts","setAccounts","feeds","setFeeds","statements","setStatements","newAccountName","setNewAccountName","uploadToAccount","setUploadToAccount","currentBalance","setCurrentBalance","file","setFile","dupsForFeed","setDupsForFeed","useReducer","state","action","duplicates","assign","hash","recordNumber","duplicate","k","slice","dups","dispatchDups","matchers","categoryId","pattern","matcherId","Error","dispatchCat","loadAccounts","loadFeeds","loadStatements","loadCategories","groupByHash","contentHash","accountId","numberOfTransactions","s","f","formatToParts","formatDDMMYYYY","Date","dateImported","formatHHMM","feedId","files","formData","FormData","append","error","first","upload","j","dup","for","content","checked","Overview","accountName","overview","setOverview","fromDate","toLocaleDateString","toDate","numberOfStatements","FixedBalances","fixedBalances","setFixedBalances","dateInput","setDateInput","amountInput","setAmountInput","loadFixedBalances","balances","time","width","fb","toLocaleTimeString","Duplicates","status","duplicateCheck","StyledDt","dt","StyledDd","dd","Feeds","activeFeed","setActiveFeed","uploadFile","htmlFor","pad","Duplicates2","setDuplicateStatus","tranId","contentDuplicatesPrev","alert","tran","transaction","AccountsContainer","AccountsContent","AccountsNav","Accounts","StyledHeader","header","InfoBar","StyledMain","main","App","headerInfo","setHeaderInfo","getMonth","currentYear","getFullYear","exact","text","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ef7125eb.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport React, {createRef, useEffect, useLayoutEffect, useRef, useState} from \"react\";\n\nfunction usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}\n\nconst classes = (...array) => array.filter(i => i != null).reduce((a, b) => {\n    return a && b ? (a + ' ' + b) : a ? a : b ? b : null;\n}, null)\nconst round = n => Math.round((n + Number.EPSILON) * 100) / 100\nconst createRefs1d = (existingArray, n) => Array(n).fill(null).map((_, i) => existingArray[i] || createRef())\n\nexport const Transactions = styled(({\n                                        className,\n                                        filter,\n                                        updateFilter,\n                                        updateSort,\n                                        transactions,\n                                        changeCategoryFor,\n                                        setChangeCategoryFor,\n                                        updateTransaction,\n                                        addTransaction,\n                                        saveTransaction\n                                    }) => {\n    const [dateRefs, setDateRefs] = useState([]);\n    const [descriptionRefs, setDescriptionRefs] = useState([]);\n    const [categoryRefs, setCategoryRefs] = useState([]);\n    const [amountRefs, setAmountRefs] = useState([]);\n    const [activeCell, setActiveCell] = useState(null);\n    const prev = usePrevious({changeCategoryFor, activeCell, filter});\n    const tableContainerRef = useRef(null);\n\n    const focusRef1d = (refArray, i, options) => {\n        if (refArray && refArray[i] && refArray[i].current) {\n            if (tableContainerRef.current) {\n                tableContainerRef.current.scrollTop = 0\n                refArray[i].current.setSelectionRange(0, 0);\n                refArray[i].current.focus()\n            }\n        }\n    };\n\n    useEffect(() => {\n        setDateRefs(createRefs1d(dateRefs, Math.max(transactions.length, dateRefs.length)));\n        setDescriptionRefs(createRefs1d(descriptionRefs, Math.max(transactions.length, descriptionRefs.length)));\n        setCategoryRefs(createRefs1d(categoryRefs, Math.max(transactions.length, categoryRefs.length)));\n        setAmountRefs(createRefs1d(amountRefs, Math.max(transactions.length, amountRefs.length)));\n    }, [transactions.length]);\n\n    useLayoutEffect(() => {\n        if (transactions.length > 0) {\n            focusField('description', 0)\n        }\n    }, [transactions.length])\n\n\n    useEffect(() => {\n        if (!changeCategoryFor && prev && prev.changeCategoryFor) {\n            saveTransaction(prev.changeCategoryFor)\n            if (transactions.findIndex(t => t.uuid === prev.changeCategoryFor) >= 0) {\n                focusRef1d(categoryRefs, withUuid(prev.changeCategoryFor))\n            } else {\n                focusRef1d(categoryRefs, 0)\n            }\n        }\n    }, [changeCategoryFor])\n\n    useEffect(() => {\n        if (activeCell && activeCell.commit && activeCell.t) {\n            saveTransaction(activeCell.t.uuid)\n            setActiveCell(null)\n        }\n    }, [activeCell])\n\n    const focusField = (field, i) => {\n        if (field === 'day' && dateRefs[i] && dateRefs[i].current) {\n            dateRefs[i].current.setSelectionRange(0, 0);\n            dateRefs[i].current.focus()\n        }\n        if (field === 'description' && descriptionRefs[i] && descriptionRefs[i].current) {\n            descriptionRefs[i].current.setSelectionRange(0, 0);\n            descriptionRefs[i].current.focus()\n        }\n        if (field === 'category' && categoryRefs[i] && categoryRefs[i].current) {\n            categoryRefs[i].current.setSelectionRange(0, 0);\n            categoryRefs[i].current.focus();\n        }\n        if (field === 'amount' && amountRefs[i] && amountRefs[i].current) {\n            amountRefs[i].current.setSelectionRange(0, 0);\n            amountRefs[i].current.focus()\n        }\n    }\n\n\n    const withUuid = id => transactions.findIndex(t => t.uuid === id)\n\n    const onKeyDown = (t, field, refArray, i, leftRefArray, rightRefArray) => {\n        return e => {\n            if (e.ctrlKey && e.key === \"s\") {\n                e.stopPropagation()\n                e.preventDefault()\n                updateSort(field)\n            }\n            if (e.ctrlKey) {\n                return;\n            }\n            if (e.key === 'Home' || e.key === 'End')\n                if (isActive(t, field)) e.stopPropagation()\n                else e.preventDefault()\n\n            if (e.key === 'ArrowUp' && !isActive(t, field)) {\n                focusRef1d(refArray, i - 1, {behavior: 'auto', block: 'center', inline: 'center'})\n                e.preventDefault()\n            }\n            if (e.key === 'PageUp' && i > 0) {\n                focusRef1d(refArray, i - 10 > 0 ? i - 10 : 0)\n                e.preventDefault()\n            }\n            if (e.key === 'ArrowDown' && !isActive(t, field)) {\n                focusRef1d(refArray, i + 1, {alignToTop: false})\n                e.preventDefault()\n            }\n            if (e.key === 'PageDown' && i < refArray.length - 1) {\n                focusRef1d(refArray, i + 10 < refArray.length ? i + 10 : refArray.length - 1)\n                e.preventDefault()\n            }\n            if (e.key === 'ArrowLeft' && !isActive(t, field)) {\n                focusRef1d(leftRefArray, i)\n                e.preventDefault()\n            }\n            if (e.key === 'ArrowRight' && !isActive(t, field)) {\n                focusRef1d(rightRefArray, i)\n                e.preventDefault()\n            }\n            if (e.key === 'Enter') {\n                if (field === 'category' && !changeCategoryFor) {\n                    setChangeCategoryFor(t.uuid)\n                }\n            }\n            if (e.key === 'Escape') {\n                if (filter) updateFilter(e)\n                else if (isActive(t, field)) setActiveCell(null)\n            }\n            if (!isActive(t, field)) onKeyDownForFilter(field)(e)\n        }\n    }\n\n    const onKeyDownForFilter = () => e => {\n        updateFilter(e)\n    }\n\n    const isActive = (t, field) => {\n        return activeCell && activeCell.t.uuid === t.uuid && activeCell.field === field\n    }\n\n    const inputCell = (t, field, myRefs, i, value, {rightRefs, leftRefs}, other) => {\n        return <InputCell key={`${t.uuid}_${field}`}\n                          ref={myRefs[i]}\n                          id={`${t.uuid}_${field}`}\n                          isActive={() => isActive(t, field)}\n                          className={classes(field, isActive(t, field) ? 'active' : null)}\n                          onKeyDown={onKeyDown(t, field, myRefs, i, leftRefs, rightRefs)}\n                          readOnly={!isActive(t, field)}\n                          disabled={changeCategoryFor != null}\n                          type='text'\n                          autoFocus={i === 0 && field === 'description' ? true : false}\n                          value={value != null ? value : ''}\n                          onChange={e => updateTransaction(t, field, e.target.value)}\n                          {...other}/>\n    }\n\n    const totalPlus = transactions.map(t => t.amount || 0).filter(a => a > 0).reduce((a, b) => a + b, 0)\n    const totalMinus = transactions.map(t => t.amount || 0).filter(a => a < 0).reduce((a, b) => a + b, 0)\n    const totalAmount = transactions.map(t => t.amount || 0).reduce((a, b) => a + b, 0)\n\n    return <div className={className}>\n        <div className='tableContainer' ref={tableContainerRef}>\n            {transactions.length > 0 &&\n                <table>\n                    <thead>\n                    <tr>\n                        <th key='day-header'>Day</th>\n                        <th key='description-header'>Description</th>\n                        <th key='category-header'>Category</th>\n                        <th key='amount-header'>Amount</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {transactions\n                        .map((t, i) => (<tr key={t.uuid}>\n                            <td key='day'>\n                                {inputCell(t, 'day', dateRefs, i, t.day, {rightRefs: descriptionRefs}, {maxLength: 2})}\n                            </td>\n                            <td key='content'>\n                                {inputCell(t, 'description', descriptionRefs, i, t.description, {\n                                    leftRefs: dateRefs,\n                                    rightRefs: categoryRefs\n                                })}\n                            </td>\n                            <td key='category'>\n                                {inputCell(t, 'category', categoryRefs, i, t.category, {\n                                    leftRefs: descriptionRefs,\n                                    rightRefs: amountRefs\n                                })}\n                            </td>\n                            <td key='amount'>\n                                {inputCell(t, 'amount', amountRefs, i, t.amount, {leftRefs: categoryRefs})}\n                            </td>\n                        </tr>))}\n                    </tbody>\n                </table>}\n        </div>\n        <dl>\n            <dt>Income</dt>\n            <dd>{round(totalPlus)}</dd>\n            <dt>Expenses</dt>\n            <dd>{round(totalMinus)}</dd>\n            <dt>Difference</dt>\n            <dd>{round(totalAmount)}</dd>\n        </dl>\n    </div>\n})`\n\n  position: relative;\n  padding-top: 2rem;\n\n  div.tableContainer {\n    overflow-y: auto;\n    max-height: 75vh;\n  }\n\n  th, td {\n    text-align: left;\n    border: 1px solid #ccc;\n    font-weight: normal;\n  }\n\n  th {\n    position: sticky;\n    top: 0;\n    z-index: 1;\n    background: #ffffff;\n    padding-top: 0.3rem;\n    padding-bottom: 0.3rem;\n  }\n\n  input {\n    display: inline-block;\n    height: 1.4rem;\n    padding: 0.25rem;\n    border: none;\n  }\n\n  input:focus {\n    outline: 2px solid black;\n  }\n\n  input.active {\n    outline: 2px solid blue;\n  }\n\n  input.day {\n    width: 2.5rem;\n  }\n\n  input.description {\n    width: 40rem;\n  }\n\n  input.amount {\n    width: 4rem;\n  }\n\n  button {\n    display: inline-block;\n    border: none;\n    width: 100%;\n    height: 1.4rem;\n    padding: 0.25rem;\n    background-color: transparent;\n  }\n\n  button.category {\n    width: 10rem;\n  }\n\n  button:disabled {\n    background-color: #fafafa;\n  }\n\n  button.changeCategoryFor {\n    background-color: white;\n    outline: 2px solid blue;\n  }\n\n  dt {\n    display: inline-block;\n  }\n\n  dt::after {\n    content: ':';\n  }\n\n  dd {\n    display: inline-block;\n    margin-left: 0.3rem;\n    margin-right: 3rem;\n  }\n`;\n\n\nconst InputCell = React.forwardRef((props, ref) => {\n\n    const {isActive, ...rest} = props\n    const [value, setValue] = useState(props.value)\n\n    useEffect(() => {\n        setValue(props.value)\n    }, [props.value])\n\n\n    const onKeyDown = e => {\n        if (isActive() && e.key === 'Enter') {\n            props.onChange(e)\n        }\n        props.onKeyDown(e)\n    }\n\n    return <input ref={ref}\n                  type='text'\n                  {...rest}\n                  value={value != null ? value : ''}\n                  onChange={e => setValue(e.target.value)}\n                  onKeyDown={onKeyDown}\n    />\n\n})","import styled from \"styled-components\";\nimport React, {createRef, useEffect, useRef, useState} from \"react\";\nimport FocusTrap from \"focus-trap-react\";\n\n\nexport const Categories = styled(({className, categories, changeCategoryFor, categoryChanged, getTransaction, quitCategoryMode}) => {\n    const [selectCatRefs, setSelectCatRefs] = useState([]);\n    const filterTextRef = useRef()\n    const [filterText, setFilterText] = useState(null);\n\n    const filteredCategories = () => categories.filter(c => !filterText || c.name.toLowerCase().includes(filterText.toLowerCase()))\n    const indexOf = categoryName => filteredCategories().findIndex(c => c.name === categoryName)\n\n    /*\n     * build a ref for each category item\n     */\n    useEffect(() => {\n        setSelectCatRefs(createRefsArray(selectCatRefs, categories.length));\n    }, [categories.length]);\n\n    useEffect(() => {\n        if (changeCategoryFor) {\n            if (filteredCategories().length === 0 && filterTextRef.current) {\n                filterTextRef.current.focus()\n            }\n            else {\n                const index = indexOf(getTransaction(changeCategoryFor).category)\n                if (index >= 0) {\n                    if (changeCategoryFor && selectCatRefs[0].current) selectCatRefs[index].current.focus()\n                } else {\n                    if (changeCategoryFor && selectCatRefs[0].current) selectCatRefs[0].current.focus()\n                }\n            }\n        }\n        else {\n            setFilterText(null)\n        }\n    }, [categories, changeCategoryFor, filterText])\n\n    const SelectButton = ({i, name}) => {\n        const props = changeCategoryFor ? {\n            onKeyDown: e => {\n                if (e.key === 'ArrowUp') focusRef1d(selectCatRefs, i-1)\n                if (e.key === 'PageUp') focusRef1d(selectCatRefs, i-10 > 0 ? i-10 : 0)\n                if (e.key === 'ArrowDown') focusRef1d(selectCatRefs, i+1)\n                if (e.key === 'PageDown') focusRef1d(selectCatRefs, i+10 < selectCatRefs.length ? i + 10 : selectCatRefs.length - 1)\n                return true\n            },\n            className: 'selectMode',\n            onClick: () => categoryChanged(name)\n        } : {\n            disabled: true\n        }\n        return <button ref={selectCatRefs[i]} {...props} >{name}</button>\n    }\n\n    const tableKeyEvents = e => {\n        if (e.key === 'Escape'  && filterText) setFilterText(null)\n        if (e.key === 'Escape') quitCategoryMode()\n        if (e.key === 'Backspace' && filterText) setFilterText(filterText.length > 0 ? filterText.substring(0, filterText.length-1) : null)\n        if (dataEntryKeys.test(e.key)) {\n            setFilterText(filterText ? filterText + e.key : e.key)\n        }\n    }\n\n    return <FocusTrap active={changeCategoryFor !== null}>\n        <div className={className} onKeyDown={tableKeyEvents}>\n            { filterText && <header>\n                <input readOnly={true} ref={filterTextRef} value={`name: ${filterText}`}/>\n            </header> }\n            <div className='tableContainer'>\n                <table>\n                    <thead>\n                    <tr>\n                        <th key='name-header'>Name</th>\n                        <th key='total-header'>Total</th>\n                        <th key='count-header'>Count</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {  filteredCategories()\n                        .filter((c => changeCategoryFor || c.total !== 0))\n                        .map((c, i) => (<tr key={c.id}>\n                            <td key='name'><SelectButton i={i} name={c.name}/></td>\n                            <td key='total'><span>{round(c.total || 0)}</span></td>\n                            <td key='count'><span>{c.count || 0}</span></td>\n                        </tr>)) }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </FocusTrap>})` \n   position: relative; \n   padding-top: 2rem;\n   margin-left: 2rem;\n   \n   div.tableContainer {\n    overflow-y: auto; \n    max-height: 75vh;\n    }    \n   \n   header {\n     position: absolute;\n     left: 0px;\n     top: -2rem;\n     display: block;\n     border: 1px solid black;\n     background: #ffffff;\n     z-index: 2;\n     \n     input {\n      display: inline-block;\n      height: 1.4rem;\n      padding: 0.25rem;\n      border: none;\n     }\n   }\n   \n   th, td {\n      position: relative;\n      text-align: left;\n      font-weight: normal;\n      border: 1px solid #ccc;\n    }\n   th {\n      position: sticky; top: 0;\n      background: #ffffff;   \n      padding-top: 0.3rem;\n      padding-bottom: 0.3rem;\n      padding-left: 1rem;\n      padding-right: 1rem;\n      z-index: 1;\n   } \n   span {\n    padding: 0.25rem;    \n    padding-left: 1rem;\n    padding-right: 1rem;\n   } \n   button {\n    display: inline-block;\n    border: none;\n//    height: 1.9rem;    \n    width: 100%;\n    padding: 0.25rem;    \n    padding-left: 1rem;\n    padding-right: 1rem;\n    background-color: transparent;\n   }   \n   button:focus {\n    background-color: light-grey;\n   }\n   button:disabled {\n    color: black;\n   }\n   selectMode:focus {\n     outline: none\n   }\n`;\n\nconst round = n => Math.round((n + Number.EPSILON) * 100) / 100\nconst dataEntryKeys = new RegExp(\"^[a-zA-Z0-9! \\b]$\");\nconst createRefsArray = (existingArray, n) => Array(n).fill(null).map((_, i) => existingArray[i] || createRef())\nconst focusRef1d = (refArray, i) => refArray && refArray[i] && refArray[i].current && refArray[i].current.focus()\n\n","import styled from \"styled-components\";\n\nimport React from \"react\";\nimport {ResponsiveBar} from \"@nivo/bar\";\n\n\nexport const CategoryBarchart = styled(({className, data}) => <div className={className}>\n    <ResponsiveBar\n        data={data}\n        layout='horizontal'\n        keys={[ 'total']}\n        indexBy=\"name\"\n        margin={{ top: 50, right: 130, bottom: 50, left: 130 }}\n        padding={0.3}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Categories',\n            legendPosition: 'middle',\n            legendOffset: 32\n        }}\n        axisLeft={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Amount',\n            legendPosition: 'middle',\n            legendOffset: -40\n        }}\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        legends={[\n            {\n                dataFrom: 'keys',\n                anchor: 'bottom-right',\n                direction: 'column',\n                justify: false,\n                translateX: 120,\n                translateY: 0,\n                itemsSpacing: 2,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemDirection: 'left-to-right',\n                itemOpacity: 0.85,\n                symbolSize: 20,\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n            }\n        ]}\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n    />\n</div>)`\n  height: 600px;\n`\n","import React, {createRef, useEffect, useLayoutEffect, useRef, useState} from 'react';\nimport {useParams, useHistory} from \"react-router-dom\";\n\nimport styled from 'styled-components'\nimport {v4 as uuidv4} from 'uuid';\nimport {Transactions} from \"./Transactions\";\nimport {Categories} from \"./Categories\";\nimport {CategoryBarchart} from \"./CategoryBarchart\";\n\n\nconst DataEntrySection = styled.section`\n  padding-top: 1em;\n  padding-left: 3em;`;\n\nconst ContentDiv = styled.div`\n  display: flex;\n`;\n\nconst HelpContainer = styled.aside`\n  position: fixed;\n  padding: 1em;\n  background: white;\n  height: 35em;\n  width: 40em;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  border: 2px solid black;\n  z-index: 2;\n\n  h2 {\n    text-align: center;\n  }\n\n  ol {\n    list-style-type: none;\n\n    li {\n      padding: 1rem 2rem 1rem 2rem;\n    }\n  }\n  ol.sublist {\n    li {\n      padding: 0.5rem 1rem 0.5rem 1rem;\n    }\n  }\n`;\n\nconst classes = array => array.filter(i => i != null).reduce((a, b) => a + ' ' + b)\n\nconst round = n => Math.round((n + Number.EPSILON) * 100) / 100\n\nconst loadTransactions = (year, month) => fetch(`http://localhost:8080/api/transaction/${year}/${month}`)\n    .then(response => response.json())\n    .then(json => json.transactions.map(t => {\n        return {\n            id: t.id,\n            feed: t.feed,\n            uuid: uuidv4(),\n            description: t.description,\n            account: t.account,\n            day: t.day,\n            month: t.month,\n            year: t.year,\n            category: t.category,\n            amount: t.amount\n        }\n    }))\n\nconst loadCurrentMonth = (year, month) => fetch(`http://localhost:8080/api/month/${year}/${month}`)\n    .then(response => response.ok && response.json())\n\nconst toMonthName = month => {\n    if (month === 1) return 'January'\n    if (month === 2) return 'February'\n    if (month === 3) return 'March'\n    if (month === 4) return 'April'\n    if (month === 5) return 'May'\n    if (month === 6) return 'June'\n    if (month === 7) return 'July'\n    if (month === 8) return 'August'\n    if (month === 9) return 'September'\n    if (month === 10) return 'October'\n    if (month === 11) return 'November'\n    if (month === 12) return 'December'\n}\n\nconst dataEntryKeys = new RegExp(\"^[a-zA-Z0-9!>< \\b,.-]$\");\n\nconst passesFilter = (t, filter) => {\n    if (!filter || filter.length == 0) return true;\n    if (filter.startsWith(\">\")) {\n        const number = parseInt( filter.substring(1) )\n        return t.amount > number;\n    }\n    else if (filter.startsWith(\"<\")) {\n        const number = parseInt( filter.substring(1) )\n        return t.amount < number;\n    }\n    else {\n        for (var key in t) {\n            if (t[key] && t[key].toString().toLowerCase().includes(filter.toLowerCase())) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nexport const MonthyReport = styled(({className, onChangeHeaderInfo}) => {\n    const routeParams = useParams()\n    const history = useHistory();\n    const [changeCategoryFor, setChangeCategoryFor] = useState(null)\n    const [monthData, setMonthData] = useState()\n    const [categories, setCategories] = useState([])\n    const [transactions, setTransactions] = useState([])\n    const [filteredTransactions, setFilteredTransactions] = useState([])\n    const [currentMonth, setCurrentMonth] = useState({\n        month: parseInt(routeParams.month),\n        year: parseInt(routeParams.year)\n    })\n    const [showChart, setShowChart] = useState(false)\n    const [showHelp, setShowHelp] = useState(false)\n    const [filter, setFilter] = useState(\"\")\n    const [sort, setSort] = useState(null)\n    const filterRef = useRef()\n\n    const onKeyDown = e => {\n        if (e.getModifierState('Control') && e.key.toLowerCase() === 'g') {\n            setShowChart(!showChart)\n            e.preventDefault()\n            e.stopPropagation()\n        }\n        if (e.getModifierState('Control') && e.key.toLowerCase() === 'h') {\n            setShowHelp(!showHelp)\n            e.preventDefault()\n            e.stopPropagation()\n        }\n        if (e.key === 'Escape') {\n            if (showHelp) {\n                setShowHelp(false)\n                e.preventDefault()\n                e.stopPropagation()\n            }\n            else if (showChart && !filter) {\n                setShowChart(false)\n                e.preventDefault()\n                e.stopPropagation()\n            }\n        }\n        if (e.key === 'End') {\n            if (e.getModifierState('Shift')) {\n                setNextYear()\n            }\n            else {\n                setNextMonth()\n            }\n            e.preventDefault()\n            e.stopPropagation()\n        }\n        if (e.key === 'Home') {\n            if (e.getModifierState('Shift')) {\n                setPrevYear()\n            }\n            else {\n                setPrevMonth()\n            }\n            e.preventDefault()\n            e.stopPropagation()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", onKeyDown, true)\n        return function cleanup() {\n            window.removeEventListener(\"keydown\", onKeyDown, true)\n        }\n    })\n\n    useEffect(() => {\n        return history.listen(location => {\n            if (location.pathname.startsWith('/transactions')) {\n                const results = location.pathname.match(/\\/transactions\\/(.+)\\/(.+)/)\n                if (results.length === 3) {\n                    setCurrentMonth({month: parseInt(results[2]), year: parseInt(results[1])})\n                }\n            }\n        })\n    }, [history])\n\n    useEffect(() => {\n        if (transactions.length === 0) {\n            filterRef.current && filterRef.current.focus()\n        }\n    }, [transactions.length])\n    useEffect(() => {\n        if (showChart) {\n            filterRef.current && filterRef.current.focus()\n        }\n    }, [showChart])\n\n\n    useEffect(() => {\n        fetch(loadCurrentMonth(currentMonth.year, currentMonth.month))\n            .then(json => setMonthData(json))\n        fetch('http://localhost:8080/api/categories')\n            .then(response => response.json())\n            .then(json => setCategories(json.categories.sort((a, b) => a.name.localeCompare(b.name))))\n            .then(_ => loadTransactions(currentMonth.year, currentMonth.month))\n            .then(t => setTransactions(t))\n    }, [])\n\n    useEffect(() => {\n        setFilteredTransactions(transactions.filter(t => passesFilter(t, filter)))\n    }, [transactions, filter])\n\n\n    useEffect(() => {\n        document.title = `${toMonthName(currentMonth.month)} ${currentMonth.year}`;\n        onChangeHeaderInfo(<>\n            <span>{toMonthName(currentMonth.month)} {currentMonth.year}</span>\n        </>)\n        loadTransactions(currentMonth.year, currentMonth.month).then(t => setTransactions(t))\n        loadCurrentMonth(currentMonth.year, currentMonth.month).then(m => setMonthData(m))\n    }, [currentMonth])\n\n\n    useEffect(() => {\n        if (filteredTransactions) {\n            setCategories(categories.map(c => {\n                const trans = filteredTransactions.filter(t => t.category === c.name)\n                const newTotal = trans.map(t => t.amount).reduce((total, v) => total + v, 0)\n                return c.total === newTotal ? c : {\n                    id: c.id,\n                    name: c.name,\n                    total: newTotal,\n                    count: trans.length\n                }\n            }))\n        }\n    }, [filteredTransactions, changeCategoryFor])\n\n\n    useEffect(() => {\n        if (filteredTransactions.length == 0) {\n            filterRef.current && filterRef.current.focus()\n        }\n    }, [filteredTransactions])\n\n    const updateFilter = (e) => {\n        //console.log(\"update filter\", filter, key)\n        if (e.key === 'Escape') {\n            setFilter(null)\n            return\n        }\n        if (e.key === 'Backspace') {\n            if (filter && filter.length > 1) {\n                setFilter(filter.substring(0, filter.length - 1))\n            } else {\n                setFilter(null)\n            }\n            return\n        }\n        if (dataEntryKeys.test(e.key)) {\n            if (filter) {\n                setFilter(filter + e.key)\n            } else {\n                setFilter(e.key)\n            }\n        }\n    }\n\n    const updateSort = (field) => {\n        if (sort == null || sort.field !== field) {\n            setSort({field: field, up: true})\n        }\n        else if (sort.field === field && sort.up) {\n            setSort({field: field, up: false})\n        }\n        else {\n            setSort(null)\n        }\n    }\n\n    const addTransaction = i => {\n        const t = [...transactions]\n        t.splice(i, 0, {\n            id: null,\n            uuid: uuidv4(),\n            account: 'Bank Austria',\n            day: null,\n            month: currentMonth.month,\n            year: currentMonth.year,\n            category: null,\n            amount: null\n        })\n        setTransactions(t)\n    }\n\n    const setNextMonth = () => {\n        let result\n        if (currentMonth.month === 12) result = {year: currentMonth.year + 1, month: 1}\n        else result = {year: currentMonth.year, month: currentMonth.month + 1}\n        setCurrentMonth(result)\n        history.push(`/transactions/${result.year}/${result.month}`)\n    }\n    const setPrevMonth = () => {\n        let result\n        if (currentMonth.month === 1) result = {year: currentMonth.year - 1, month: 12}\n        else result = {year: currentMonth.year, month: currentMonth.month - 1}\n        setCurrentMonth(result)\n        history.push(`/transactions/${result.year}/${result.month}`)\n    }\n\n    const setPrevYear = () => {\n        const result = {year: currentMonth.year - 1, month: currentMonth.month }\n        setCurrentMonth(result)\n        history.push(`/transactions/${result.year}/${result.month}`)\n    }\n\n    const setNextYear = () => {\n        const result = {year: currentMonth.year + 1, month: currentMonth.month }\n        setCurrentMonth(result)\n        history.push(`/transactions/${result.year}/${result.month}`)\n    }\n\n    const categoryChanged = cat => {\n        transactions.filter(t => t.uuid === changeCategoryFor).forEach(t => t.category = cat)\n        setChangeCategoryFor(null)\n    }\n    const quitCategoryMode = _ => {\n        setChangeCategoryFor(null)\n    }\n    const getTransaction = uuid => transactions.find(t => t.uuid === uuid)\n    const updateTransaction = (t, field, value) => {\n        console.log(\"UT \", t, field, value)\n        const newT = {...t}\n        newT[field] = value\n        setTransactions(transactions.map(x => x.uuid === newT.uuid ? newT : x))\n    }\n\n    const saveTransaction = (t_uuid) => {\n        const t = transactions.find(t => t.uuid === t_uuid)\n        console.log(t)\n        if (t) {\n            fetch(`http://localhost:8080/api/transaction`, {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify(t)\n            })\n                .then(response => response.json())\n                .then(savedT => {\n                    const result = {...t, ...savedT}\n                    setTransactions(transactions.map(x => x.uuid === result.uuid ? result : x))\n                })\n        }\n    }\n\n    const compareDescriptions = (a,b) => {\n        if (a.description > b.description) return 1\n        else if (a.description === b.description) return 0\n        else return -1\n    }\n    const compareCategories = (a,b) => {\n        if (a.category > b.category) return 1\n        else if (a.category === b.category) return 0\n        else return -1\n    }\n    const sortTransactions = (transactions) => {\n        if (sort == null) {\n            return transactions;\n        }\n        else if (sort.field === \"amount\") {\n            return [...transactions].sort((a, b) => sort.up ? a.amount - b.amount : b.amount - a.amount)\n        }\n        else if (sort.field === \"description\") {\n            return [...transactions].sort((a, b) => {\n                if (sort.up) {\n                    return compareDescriptions(a,b)\n                }\n                else {\n                    return compareDescriptions(a,b) * -1\n                }\n            })\n        }\n        else if (sort.field === \"category\") {\n            return [...transactions].sort((a, b) => {\n                if (sort.up) {\n                    return compareCategories(a,b)\n                }\n                else {\n                    return compareCategories(a,b) * -1\n                }\n            })\n        }\n        else {\n            return transactions;\n        }\n    }\n\n    const renderFilter = () => {\n        return <header className='filter'>\n            <label>Filtered <input ref={filterRef}\n                                  readOnly={true}\n                                  value={filter || ''}\n                                 onKeyDown={updateFilter}/>\n            </label>\n        </header>\n    }\n\n    const renderSort = () => {\n        const sortDirection = () => {\n            if (sort.up) return \"🠉\"\n            else return \"🠋\"\n        }\n        return sort && <header className='sort'>\n            <span>Sorted by <span class={'sort_column'}>{sort && sort.field}</span>  <span class={'sort_arrow'}>{sortDirection()}</span></span>\n        </header>\n    }\n\n    return (\n        <DataEntrySection className={className}>\n            {showHelp &&\n                <HelpContainer className={className}>\n                    <h2>HELP</h2>\n                    <ol>\n                        <li><b>Navigation:</b> ←, ↑, →, ↓, PageUp,PageDown</li>\n                        <li><b>Filter Table data:</b> type when a table cell is highlighted\n                            <ol className={'sublist'}>\n                                <li><b>&gt;</b>&nbsp;&nbsp;filter on transactions with an amount higher than</li>\n                                <li><b>&lt;</b>&nbsp;&nbsp;filter on transactions with an amount less than</li>\n                            </ol>\n                        </li>\n                        <li><b>Sort Table data:</b> CTRL + S to sort with the highlighted table cell</li>\n                        <li><b>Prev/Next month:</b> Home/End</li>\n                        <li><b>Prev/Next year:</b> Shift + Home/End</li>\n                        <li><b>Toggle Graph:</b> CTRL + G</li>\n                    </ol>\n                </HelpContainer>}\n            {showChart ? (<>\n                {renderFilter()}\n                <CategoryBarchart data={categories\n                    .filter(c => c.total !== 0)}/>\n            </>) : (\n                <>\n                    {(filter != null && filter.length > 0) && renderFilter()}\n                    {renderSort()}\n                    <ContentDiv>\n                        <Transactions {...{\n                            filter,\n                            updateFilter,\n                            updateSort,\n                            transactions: sortTransactions(filteredTransactions),\n                            changeCategoryFor, setChangeCategoryFor,\n                            updateTransaction,\n                            addTransaction,\n                            saveTransaction\n                        }}/>\n                        <Categories {...{\n                            categories,\n                            changeCategoryFor,\n                            categoryChanged,\n                            getTransaction,\n                            quitCategoryMode\n                        }}/>\n                    </ContentDiv>\n                    </>)}\n            <footer>\n                <dl>\n                    <dt>Month Start</dt>\n                    <dd>{monthData && round(monthData.startingBalance || 0)}</dd>\n                    <dt>Month End</dt>\n                    <dd>{monthData && round(transactions.map(t => t.amount).reduce((a, b) => a + b, monthData.startingBalance || 0))}</dd>\n                </dl>\n            </footer>\n        </DataEntrySection>)\n})`\n  header.filter {\n    position: absolute;\n    display: inline-block;\n    input {\n      font-size: 1em;\n      border: 1px solid black;\n      padding-top: 5px;\n      padding-left: 5px;\n      padding-bottom: 5px;\n    }\n    background: #ffffff;\n    z-index: 2;\n  }\n\n  header.sort {\n    position: absolute;\n    display: inline-block;\n    left: 30em ;\n    font-size: 1em;\n    padding-top: 5px;\n    padding-left: 5px;\n    padding-bottom: 5px;\n    z-index: 2;\n    .sort_column {\n      text-transform: capitalize;\n    }\n  }\n\n  th {\n    padding-top: 0.3rem;\n    width: 3rem;\n    font-weight: normal;\n    padding-right: 0;\n  }\n\n  \n  dt {\n    display: inline-block;\n  }\n\n  dt::after {\n    content: ':';\n  }\n\n  dd {\n    display: inline-block;\n    margin-left: 0.3rem;\n    margin-right: 3rem;\n  }\n\n`\n","import React, {useEffect, useState} from \"react\";\n\nimport styled from \"styled-components\";\nimport {ResponsiveLine} from \"@nivo/line\";\n\nexport const BalanceReport = props => {\n\n    const [data, setData] = useState(null)\n\n    useEffect(() =>{\n        fetch(`http://localhost:8080/api/timeseries/balance`)\n            .then(response => response.json())\n            .then(json => json.data.map(d =>{ return {\n                id: d.id,\n                data: d.data.map(v => {\n                    return {\n                        x: v.date,\n                        y: v.amount,\n                    }})\n            }}))\n            .then(data => {\n                setData(data)\n            })\n    }, [])\n\n    console.log(data)\n\n\n    return (<div>\n        { data  && <MyResponsiveLine data={data}/> }\n    </div>)\n}\n\nconst MyResponsiveLine = styled(({className, data}) => <div className={className}>\n    <ResponsiveLine\n        data={data}\n        margin={{ top: 50, right: 110, bottom: 100, left: 60 }}\n        xScale={{\n            type: 'time',\n            format: '%Y-%m-%d',\n            useUTC: false,\n            precision: 'day'\n        }}\n        xFormat=\"time:%Y-%m-%d\"\n        yScale={{ type: 'linear', min: 'auto', max: 'auto' }}\n        curve=\"cardinal\"\n        lineWidth={4}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            orient: 'bottom',\n            format: '%d %b %y',\n            tickValues: 'every month',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 90,\n            legend: 'time',\n            legendOffset: 36,\n            legendPosition: 'center'\n        }}\n        axisLeft={{\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'count',\n            legendOffset: -40,\n            legendPosition: 'center'\n        }}\n        pointSize={10}\n        pointColor={{ theme: 'background' }}\n        pointBorderWidth={2}\n        pointBorderColor={{ from: 'serieColor' }}\n        pointLabel=\"y\"\n        pointLabelYOffset={-12}\n        useMesh={true}\n        legends={[\n            {\n                anchor: 'bottom-right',\n                direction: 'column',\n                justify: false,\n                translateX: 100,\n                translateY: 0,\n                itemsSpacing: 0,\n                itemDirection: 'left-to-right',\n                itemWidth: 80,\n                itemHeight: 20,\n                itemOpacity: 0.75,\n                symbolSize: 12,\n                symbolShape: 'circle',\n                symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemBackground: 'rgba(0, 0, 0, .03)',\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n            }\n        ]}\n    />\n</div>)`\n  height: 85vh;\n  width: 95%;\n`\n","import React, {useEffect, useState} from \"react\";\n\nimport styled from \"styled-components\";\nimport {ResponsiveLine} from \"@nivo/line\";\n\nexport const CategoriesReport = props => {\n\n    const [category, setCategory] = useState(null)\n    const [description, setDescription] = useState(null)\n    const [total, setTotal] = useState(0)\n    const [min, setMin] = useState(1)\n    const [data, setData] = useState(null)\n    const [filteredData, setFilteredData] = useState(null)\n\n    useEffect(() =>{\n        loadData()\n    }, [])\n\n    useEffect(() =>{\n        loadData()\n    }, [description])\n\n\n    useEffect(() => {\n        setFilteredData(data ? filterData(data) : null)\n    }, [data, category, total, min])\n\n\n    const loadData = _ => {\n        var url = 'http://localhost:8080/api/timeseries/categories'\n        if (description) {\n            url += `?description=${description}`\n        }\n\n        return fetch(url)\n            .then(response => response.json())\n            .then(json => json.data.map(d =>{ return {\n                id: d.id,\n                data: d.data.map(v => {\n                    return {\n                        x: v.date,\n                        y: v.amount,\n                    }})\n            }}))\n            .then(data => {\n                setData(data)\n            })\n    }\n\n    const filterData = data => data\n        .filter(d => !category || d.id.toLowerCase().includes(category))\n        .filter(d => isNaN(total) || Math.abs(d.data.map(z => z.y).reduce((a,b) => a+b, 0)) >= total)\n        .filter(d => isNaN(min) || d.data.map(z => z.y).reduce((a,b) => {\n            const [aa, ab] = [Math.abs(a), Math.abs(b)]\n            return aa > ab  ? aa : ab }, 0) >= min)\n\n\n    const onKeyDownCapture = e => {\n        if (e.key === 'Escape') {\n            setDescription(null)\n            setCategory(null)\n            setTotal(0)\n            setMin(1)\n        }\n    }\n\n    return (<div onKeyDownCapture={onKeyDownCapture}>\n        Description: <input name='description' value={description || ''} onChange={e => setDescription(e.target.value)}/>\n        Category: <input name='category' value={category || ''} onChange={e => setCategory(e.target.value)}/>\n        Total Over Period: <input name='total' value={total || ''} onChange={e => setTotal(parseInt(e.target.value)) }/>\n        Can Exceed: <input name='min' value={min || ''} onChange={e =>  setMin(parseInt(e.target.value)) }/>\n        {filteredData ? filteredData.length : 0 } Categories\n        { filteredData  && <MyResponsiveLine data={filteredData}/> }\n    </div>)\n}\n\nconst MyResponsiveLine = styled(({className, data}) => <div className={className}>\n    <ResponsiveLine\n        data={data}\n        margin={{ top: 50, right: 110, bottom: 100, left: 60 }}\n        xScale={{\n            type: 'time',\n            format: '%Y-%m-%d',\n            useUTC: false,\n            precision: 'month'\n        }}\n        xFormat=\"time:%Y-%m-%d\"\n        yScale={{ type: 'linear', min: 'auto', max: 'auto' }}\n        curve=\"cardinal\"\n        lineWidth={4}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            orient: 'bottom',\n            format: '%d %b %y',\n            tickValues: 'every month',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 90,\n            legend: 'time',\n            legendOffset: 36,\n            legendPosition: 'center'\n        }}\n        axisLeft={{\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'count',\n            legendOffset: -40,\n            legendPosition: 'center'\n        }}\n        pointSize={10}\n        pointColor={{ theme: 'background' }}\n        pointBorderWidth={2}\n        pointBorderColor={{ from: 'serieColor' }}\n        pointLabel=\"y\"\n        pointLabelYOffset={-12}\n        useMesh={true}\n        legends={[\n            {\n                anchor: 'bottom-right',\n                direction: 'column',\n                justify: false,\n                translateX: 100,\n                translateY: 0,\n                itemsSpacing: 0,\n                itemDirection: 'left-to-right',\n                itemWidth: 80,\n                itemHeight: 20,\n                itemOpacity: 0.75,\n                symbolSize: 12,\n                symbolShape: 'circle',\n                symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemBackground: 'rgba(0, 0, 0, .03)',\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n            }\n        ]}\n    />\n</div>)`\n  height:90vh;\n  width: 95%;\n`\n","import React, {useEffect, useState} from \"react\";\n\nimport {useParams} from \"react-router-dom\";\nimport {CategoryBarchart} from \"../monthlyreport/CategoryBarchart\";\n\nexport const YearReport = props =>  {\n\n    const { year } = useParams()\n    const [categories, setCategories] = useState(null)\n\n    useEffect(() => {\n        fetch(`http://localhost:8080/api/year/${year}/categories`)\n            .then(response => response.json())\n            .then(json => setCategories(json.data))\n    }, [year])\n\n\n    return (<div>\n        <h2>Year report for {year}</h2>\n        { categories &&  <CategoryBarchart data={categories}/> }\n    </div>)\n}","import React, {useEffect, useState} from \"react\";\n\nimport {BalanceReport} from \"./BalanceReport\";\nimport {CategoriesReport} from \"./CategoriesReport\";\nimport styled from \"styled-components\";\nimport {NavLink, Route, Switch} from \"react-router-dom\";\nimport {YearReport} from \"./YearReport\";\n\nconst ReportsContainer = styled.div`\n    display: flex;\n`\n\nconst ReportsContent = styled.div`\n padding-left: 2rem;\n flex-grow: 2;\n`\n\nconst ReportsNav = styled.div`\n flex-grow: 0;\n padding-left: 2rem;\n ol {\n    list-style-type: none;\n    padding-left: 0;\n }\n ol > li  ol > li  {\n    padding-left: 2rem;\n }\n a {\n      text-align: center;\n      display: block;\n      color: black;\n      height: 3rem;\n      line-height: 3rem;\n      text-decoration: none;\n  }\n \n .navActive {\n    background-color: #DCDCDD;\n }\n`\n\n\nexport const Reports = props => {\n\n    const [years, setYears] = useState(null)\n\n    useEffect(() =>{\n        loadData()\n    }, [])\n\n    const loadData = () => {\n        var url = 'http://localhost:8080/api/years'\n        return fetch(url)\n            .then(response => response.json())\n            .then(json => setYears(json.years))\n    }\n\n    return (\n    <ReportsContainer>\n        <ReportsNav>\n            <ol>\n                <li><NavLink activeClassName='navActive' to='/reports/timeline'>Overview</NavLink></li>\n               { years && years.map(y => <li key={y}><NavLink activeClassName='navActive' to={`/reports/year/${y}`}>{y}</NavLink></li>) }\n            </ol>\n        </ReportsNav>\n        <ReportsContent>\n            <Switch>\n                <Route key='1' path='/reports/year/:year'>\n                    <YearReport/>\n                </Route>\n                <Route key='1' path='/reports'>\n                    <BalanceReport/>\n                    <CategoriesReport/>\n                </Route>\n            </Switch>\n        </ReportsContent>\n   </ReportsContainer>)\n}\n","\nconst o_date = new Intl.DateTimeFormat('de-de', {\n    day: 'numeric',\n    month: 'numeric',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric'\n});\nconst f_date = (m_ca, m_it) => Object({...m_ca, [m_it.type]: m_it.value});\nexport const formatDDMMYYYY = date => {\n    const d = o_date.formatToParts(date).reduce(f_date, {});\n    return d.day + '.' + d.month + '.' + d.year\n}\n\nexport const formatHHMM = date => {\n    const d = o_date.formatToParts(date).reduce(f_date, {});\n    return d.hour + ':' + d.minute\n}","import React, {useEffect, useReducer, useState} from 'react';\nimport styled from \"styled-components\";\nimport {v4 as uuidv4} from \"uuid\";\nimport {formatDDMMYYYY, formatHHMM} from \"../util\";\n\n\nexport const Upload = styled(({className}) => {\n\n    const [accounts, setAccounts] = useState([])\n    const [feeds, setFeeds] = useState([])\n    const [statements, setStatements] = useState([])\n    const [newAccountName, setNewAccountName] = useState([])\n    const [uploadToAccount, setUploadToAccount] = useState(null)\n    const [currentBalance, setCurrentBalance] = useState(null)\n    const [file, setFile] = useState(null)\n    const [dupsForFeed, setDupsForFeed] = useState(null)\n    const [dups, dispatchDups] = useReducer(dupsReducer, [])\n\n    const [categories, dispatchCat] = useReducer(categoriesReducer, []);\n\n    useEffect(() => {\n        loadAccounts()\n        loadFeeds()\n        loadStatements()\n        loadCategories()\n    }, [])\n\n    function dupsReducer(state, action) {\n        console.log(action)\n        switch (action.type) {\n            case 'set-dups':\n                return action.duplicates;\n            case 'change-dup':\n                const v = Object.assign({}, state);\n                v[action.hash] = state[action.hash].map(d => {\n                    return  d.recordNumber === action.recordNumber ? {...d, duplicate: !d.duplicate} : d;\n                })\n                return v;\n            case 'make-assumptions':\n                Object.keys(state).forEach(k => {\n                    if (state[k].length === 1) state[k][0].duplicate = true\n                    else {\n                        state[k][0].duplicate = false\n                        state[k].slice(1).forEach(d => {\n                            d.duplicate = true\n                        })\n                    }\n                })\n                return { ...state }\n        }\n    }\n\n    function categoriesReducer(state, action) {\n        switch (action.type) {\n            case 'add-category':\n                return [...state, { id: uuidv4(), name: null, matchers: []}]\n            case 'remove-category':\n                return state.filter(c => c.id !== action.categoryId)\n            case 'update-category-name':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    name: action.name } : c )\n            case 'add-matcher':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    matchers: [...c.matchers, {id : uuidv4(), pattern: null}]} : c)\n            case 'remove-matcher':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    matchers: c.matchers.filter(m => m.id !== action.matcherId) } : c)\n            case 'update-matcher':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    matchers: c.matchers.map(m => m.id === action.matcherId ? {\n                        ...m,\n                        pattern: action.pattern\n                    } : m)} : c)\n            case 'load':\n                return action.categories\n            default:\n                throw new Error();\n        }\n    }\n\n    const loadAccounts = () => fetch(`http://localhost:8080/account`)\n        .then(response => response.json())\n        .then(json => setAccounts(json.accounts))\n\n    const loadFeeds = () => fetch(`http://localhost:8080/feed`)\n        .then(response => response.json())\n        .then(json => setFeeds(json.feeds))\n\n    const loadStatements = () => fetch(`http://localhost:8080/statement`)\n        .then(response => response.json())\n        .then(json => setStatements(json.statements))\n\n    const loadCategories = () => fetch(`http://localhost:8080/category`)\n        .then(response => response.json())\n        .then(json => dispatchCat({type: 'load', categories: json.categories}))\n\n    const addAccount = () => fetch(`http://localhost:8080/account/${newAccountName}`, { method: 'PUT' })\n        .then(response => response.ok && loadAccounts())\n\n    const deleteAccount = (accountId) => fetch(`http://localhost:8080/account/${accountId}`, { method: 'DELETE' })\n        .then(response => response.ok && loadAccounts())\n\n    const deleteImport = (feedId) => fetch(`http://localhost:8080/feed/${feedId}`, { method: 'DELETE' })\n        .then(response => response.ok && loadAccounts() && loadFeeds() && loadStatements())\n\n    const duplicateCheck = (feedId) => fetch(`http://localhost:8080/duplicateCheck/${feedId}`, { method: 'GET' })\n        .then(response => response.ok && response.json())\n        .then(json => {\n            setDupsForFeed(feedId)\n            dispatchDups({type: 'set-dups', duplicates: groupByHash(json.duplicates)})\n        })\n\n    const saveCategories = () => fetch(`http://localhost:8080/category`, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(categories)})\n        .then(response => loadCategories())\n\n    const saveDuplicates = () => fetch(`http://localhost:8080/duplicates/${dupsForFeed}`, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(dups)})\n        .then(response => response.ok && response.json())\n        .then(json => dispatchDups({type: 'set-dups', duplicates: groupByHash(json.duplicates)}))\n\n\n    const upload = (account) => {\n        const formData = new FormData()\n        formData.append('file', file)\n        if (currentBalance)\n            formData.append('currentBalance', currentBalance)\n        fetch(`http://localhost:8080/upload/${account.name}`,{\n            method: 'POST',\n            body: formData\n        }).then(response => response.json())\n        .then(response => {\n            if (!response.error) {\n                setDupsForFeed(response.feedId)\n                dispatchDups({type: 'set-dups', duplicates: groupByHash(response.duplicates)})\n                loadAccounts();\n                loadFeeds();\n                setDupsForFeed(feeds.filter(f => f.file === file.name).first)\n                loadStatements()\n            }\n        })\n    }\n    const groupByHash = duplicates => {\n        const result = {}\n        duplicates.forEach(d => result[d.contentHash] ? result[d.contentHash].push(d) : result[d.contentHash] = [d])\n        return result\n    }\n\n    const setDuplicateAssumption = dup => {\n        if (dup.length === 1) dup[0].duplicate = true\n        else {\n            dup[0].duplicate = false\n            dup.slice(1).forEach(d => { d.duplicate = true})\n        }\n        return dup\n    }\n\n    const rowStyleFor = dup => { if (dup.duplicate) return 'duplicate-row'; else return ''; }\n\n    return (<div className={className}>\n        <section>\n            <h2>Accounts</h2>\n            <ul>\n                { accounts && accounts.map(a => (<>\n                <li>{a.name} - <button onClick={_ => deleteAccount(a.id)}>Delete</button><button onClick={_ => setUploadToAccount(a.id)}>Upload</button></li>\n                <ul>\n                    <li>Number of transactions: {a.numberOfTransactions}</li>\n                    <li>Number of statements: {statements && statements.filter(s => s.accountId === a.id).length}</li>\n                    <li>Uploads:</li>\n                    { feeds.length > 0 && (<ol>\n                        {feeds.map(f => (<li>{f.file} uploaded on {formatDDMMYYYY(new Date(f.dateImported))} at {formatHHMM(new Date(f.dateImported))}\n                        <button onClick={() => duplicateCheck(f.id)}>duplicate check</button>\n                        <button onClick={() => deleteImport(f.id)}>delete</button>\n                        </li>))}\n                    </ol>) }\n                    { uploadToAccount === a.id && (<ol>\n\n                        { statements.filter(s => s.accountId === a.id).length === 0 && <li>Please specify the most current balance\n                            <input name='balance'\n                                   type='input'\n                                   value={currentBalance !== null ? currentBalance : ''}\n                                   onChange={e => setCurrentBalance(e.target.value)}/></li> }\n                        <li>Please select file  to upload\n                                <input name='upload'\n                                       type='file'\n                                       onChange={e => setFile(e.target.files[0])}/></li>\n                        <li><button onClick={() => upload(a)}>Go!</button></li>\n                    </ol>)}\n                </ul></>)) }\n\n                <li>New: <input name='newAccount' value={newAccountName} onChange={e => setNewAccountName(e.target.value)}/>\n                    <button onClick={_ => addAccount()}>Add</button></li>\n            </ul>\n        </section>\n        { dups && Object.keys(dups).length > 0 && (<section>\n            <h2>Duplicates</h2>\n            <button name=\"assumptions\" onClick={_ => dispatchDups({type: 'make-assumptions'})}>Assumptions</button>\n            <table>\n                <thead>\n                <tr>\n                    <th>line</th>\n                    <th>content</th>\n                    <th>Duplicate</th>\n                </tr>\n                </thead>\n                <tbody>\n                { Object.keys(dups).map((k, i) => <>\n                        <tr key={`${i}-dashed}`}><td>----------------</td></tr>\n                        { dups[k].map((d,j) =>  <tr key={`${i}-${j}`} className={rowStyleFor(d)}>\n                            <td>{d.recordNumber}</td>\n                            <td><label for={`duplicate-${i}-${j}`}>{d.content}</label></td>\n                            <td>{d.count}</td>\n                            <td><input id={`duplicate-${i}-${j}`}\n                                       name={`duplicate-${i}-${j}`}\n                                       type=\"checkbox\"\n                                       checked={d.duplicate}\n                                       onChange={_ => dispatchDups(\n                                           {   type: 'change-dup',\n                                               hash: d.contentHash,\n                                               recordNumber: d.recordNumber,\n                                               duplicate: !d.duplicate})}/>\n                            </td>\n                        </tr>)}\n                        </>)}\n                </tbody>\n            </table>\n            <button name='save'onClick={() => saveDuplicates()}>Save</button>\n        </section>)}\n\n        <section>\n            <h2>Categories</h2>\n            <ul>\n                { categories && categories.map(c => (<>\n                    <li><input name={`category-${c.id}`} value={c.name} onChange={e => dispatchCat({type: 'update-category-name', categoryId: c.id, name: e.target.value})}/>\n                        <button onClick={() => dispatchCat({type: 'remove-category', categoryId: c.id})}>X</button>\n                    </li>\n                    <ul>\n                        { c.matchers && c.matchers.map(m => <li><input name={m.id} value={m.pattern} onChange={e => dispatchCat({type: 'update-matcher', categoryId: c.id, matcherId: m.id, pattern: e.target.value})}/>\n                        <button onClick={() => dispatchCat({type: 'remove-matcher', categoryId: c.id, matcherId: m.id})}>X</button>\n                        </li>)}\n                        <li><button onClick={_ => dispatchCat({type: 'add-matcher', categoryId: c.id})}>Add</button></li>\n                        </ul></>))}\n                <li><button onClick={_ => dispatchCat({type: 'add-category'})}>Add</button></li>\n            </ul>\n            <button onClick={saveCategories}>Save</button>\n        </section>\n    </div>)\n})` \n\n .duplicate-row {\n   text-decoration: line-through;\n }\n `","import React, {useEffect, useState} from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport const Overview = props => {\n    const { accountName } = useParams()\n    const [overview, setOverview] = useState(null)\n\n    useEffect(() => {\n        document.title = accountName;\n        fetch(`http://localhost:8080/api/account/${accountName}/overview`)\n            .then(response => response.ok && response.json())\n            .then(json => setOverview(json))\n    }, [])\n\n    console.log(overview)\n    return (<div>\n        <h2>Overview</h2>\n        { overview && (<dl>\n            <dt>From</dt>\n            <dd>{new Date(overview.fromDate).toLocaleDateString()}</dd>\n            <dt>To</dt>\n            <dd>{new Date(overview.toDate).toLocaleDateString()}</dd>\n            <dt>Transactions</dt>\n            <dd>{overview.numberOfTransactions}</dd>\n            <dt>End of Month Statements Generated</dt>\n            <dd>{overview.numberOfStatements}</dd>\n        </dl>)\n        }\n    </div>)\n}","import React, {useEffect, useState} from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {useParams} from \"react-router-dom\";\n\nexport const FixedBalances = props => {\n    const { accountName } = useParams()\n    const [fixedBalances, setFixedBalances] = useState([])\n    const [dateInput, setDateInput] = useState(null)\n    const [amountInput, setAmountInput] = useState(null)\n\n    useEffect(() => {\n        document.title = `${accountName} Fixed Balances` ;\n        loadFixedBalances()\n    }, [])\n\n    const loadFixedBalances = () => fetch(`http://localhost:8080/api/account/${accountName}/fixedbalance`)\n        .then(response => response.ok && response.json())\n        .then(json => setFixedBalances(json.balances))\n\n    const saveFixedBalance = () => {\n        fetch(`http://localhost:8080/api/account/${accountName}/fixedbalance`, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                id: uuidv4(),\n                time: dateInput,\n                amount: amountInput\n            })})\n            .then(response => response.ok && response.json())\n            .then(json => setFixedBalances(json.balances))\n    }\n\n    return (<div>\n        <h2>Fixed Balances</h2>\n        Date: <input name='date' type='text' value={dateInput} onChange={e => setDateInput(e.target.value)}/>\n        Amount: <input name='amount' type='text' value={amountInput} onChange={e => setAmountInput(e.target.value)}/>\n        <button name='save' onClick={_ => saveFixedBalance()}>Add</button>\n        <table width='60%'>\n            <thead>\n            <tr>\n                <th key='th0'>Date</th>\n                <th key='th1'>Amount</th>\n            </tr>\n            </thead>\n            <tbody>\n            { fixedBalances && fixedBalances.map( fb => <tr>\n                    <td>{new Date(fb.time).toLocaleDateString('en', { year: 'numeric', month: 'long', day: 'numeric' })} {new Date(fb.time).toLocaleTimeString()}</td>\n                    <td>{fb.amount}</td>\n                </tr>)}\n            </tbody>\n        </table>\n    </div>)\n}","import React, {useEffect, useReducer, useState} from \"react\";\nimport styled from \"styled-components\";\n\n\nexport const Duplicates = styled( ({className, feedId})  => {\n\n    const [dupsForFeed, setDupsForFeed] = useState(null)\n    const [dups, dispatchDups] = useReducer(dupsReducer, [])\n\n    console.log(feedId)\n\n    const duplicateCheck = (feedId) => fetch(`http://localhost:8080/api/duplicateCheck/${feedId}`, { method: 'GET' })\n        .then(response => response.status === 200 && response.json())\n        .then(json => {\n            if (json) {\n                setDupsForFeed(feedId)\n                dispatchDups({type: 'set-dups', duplicates: groupByHash(json.duplicates)})\n            }\n        })\n\n    const saveDuplicates = () => fetch(`http://localhost:8080/api/duplicates/${dupsForFeed}`, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(dups)})\n        .then(response => response.ok && response.json())\n        .then(json => dispatchDups({type: 'set-dups', duplicates: groupByHash(json.duplicates)}))\n\n    const groupByHash = duplicates => {\n        const result = {}\n        duplicates.forEach(d => result[d.contentHash] ? result[d.contentHash].push(d) : result[d.contentHash] = [d])\n        return result\n    }\n\n    const rowStyleFor = dup => { if (dup.duplicate) return 'duplicate-row'; else return ''; }\n\n    useEffect(() => {\n        duplicateCheck(feedId)\n    }, [feedId])\n\n    function dupsReducer(state, action) {\n        console.log(action)\n        switch (action.type) {\n            case 'set-dups':\n                return action.duplicates;\n            case 'change-dup':\n                const v = Object.assign({}, state);\n                v[action.hash] = state[action.hash].map(d => {\n                    return  d.recordNumber === action.recordNumber ? {...d, duplicate: action.duplicate} : d;\n                })\n                return v;\n            case 'make-assumptions':\n                Object.keys(state).forEach(k => {\n                    if (state[k].length === 1) state[k][0].duplicate = true\n                    else {\n                        state[k][0].duplicate = false\n                        state[k].slice(1).forEach(d => {\n                            d.duplicate = true\n                        })\n                    }\n                })\n                return { ...state }\n        }\n    }\n\n    return dups && Object.keys(dups).length > 0 && (<section className={className}>\n            <h2>Duplicates</h2>\n            <button name=\"assumptions\" onClick={_ => dispatchDups({type: 'make-assumptions'})}>Assumptions</button>\n            <button name='save'onClick={() => saveDuplicates()}>Save</button>\n            <table>\n                <thead>\n                <tr>\n                    <th>line</th>\n                    <th>content</th>\n                    <th>Duplicate</th>\n                </tr>\n                </thead>\n                <tbody>\n                { Object.keys(dups).map((k, i) => <>\n                    <tr key={`${i}-dashed}`}><td>----------------</td></tr>\n                    { dups[k].map((d,j) =>  <tr key={`${i}-${j}`} className={rowStyleFor(d)}>\n                        <td key={`d1-${i}-${j}`}>{d.recordNumber}</td>\n                        <td key={`d2-${i}-${j}`}><label for={`duplicate-${i}-${j}`}>{d.content}</label></td>\n                        <td key={`d3-${i}-${j}`}>{d.count}</td>\n                        <td key={`d4-${i}-${j}`} className='radio'>\n                            <label>yes\n                                <input id={`duplicate-${i}-${j}`}\n                                       name={`duplicate-${i}-${j}`}\n                                       type=\"radio\"\n                                       value=\"yes\"\n                                       checked={d.duplicate === true}\n                                       onChange={_ => dispatchDups(\n                                           {   type: 'change-dup',\n                                               hash: d.contentHash,\n                                               recordNumber: d.recordNumber,\n                                               duplicate: true})}/>\n                            </label>\n                            <label>no\n                                <input id={`duplicate-${i}-${j}`}\n                                       name={`duplicate-${i}-${j}`}\n                                       type=\"radio\"\n                                       value=\"no\"\n                                       checked={d.duplicate !== true && d.duplicate !== null}\n                                       onChange={_ => dispatchDups(\n                                           {   type: 'change-dup',\n                                               hash: d.contentHash,\n                                               recordNumber: d.recordNumber,\n                                               duplicate: false})}/>\n                            </label>\n                            <label>don't know\n                                <input id={`duplicate-${i}-${j}`}\n                                       name={`duplicate-${i}-${j}`}\n                                       type=\"radio\"\n                                       value=\"unknown\"\n                                       checked={d.duplicate === null}\n                                       onChange={_ => dispatchDups(\n                                           {   type: 'change-dup',\n                                               hash: d.contentHash,\n                                               recordNumber: d.recordNumber,\n                                               duplicate: null})}/>\n                            </label>\n                        </td>\n                    </tr>)}\n                </>)}\n                </tbody>\n            </table>\n        </section>)\n})` \n\n .duplicate-row {\n   td {\n    text-decoration: line-through;\n   }\n   td.radio {\n    text-decoration: none;\n   }\n   \n }\n `","import React, {useEffect, useReducer, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {Duplicates} from \"./duplicates\";\n\nimport styled from \"styled-components\";\n\nconst StyledDt = styled.dt`\n    display: inline-block;\n`\n\nconst StyledDd = styled.dd`\n    margin-left: 4pt;\n    display: inline-block;\n`\n\nexport const Feeds = props => {\n    const { accountName } = useParams()\n    const [feeds, setFeeds] = useState([])\n    const [activeFeed, setActiveFeed] = useState(null)\n\n    useEffect(() => {\n        document.title = `${accountName} Feeds` ;\n        loadFeeds()\n    }, [])\n\n    const loadFeeds = () => fetch(`http://localhost:8080/api/account/${accountName}/feed`)\n        .then(response => response.ok && response.json())\n        .then(json => setFeeds(json.feeds))\n\n    const deleteImport = (feedId) => fetch(`http://localhost:8080/api/feed/${feedId}`, { method: 'DELETE' })\n        .then(response => response.ok && loadFeeds() && setActiveFeed(null))\n\n    const upload = (uploadFile) => {\n        console.log(uploadFile)\n        if (uploadFile) {\n            const formData = new FormData()\n            formData.append('file',uploadFile)\n            fetch(`http://localhost:8080/api/account/${accountName}/feed`, {\n                method: 'POST',\n                body: formData\n            }).then(response => response.json())\n                .then(response => {\n                    if (!response.error) {\n                        loadFeeds();\n                    }\n                })\n        }\n    }\n\n    return (<div>\n        <h2>Feeds</h2>\n        <input type='file' name='upload' onChange={ e => upload(e.target.files[0])}/>\n        <table width=\"100%\">\n            <tbody>\n            { feeds.map((f, i) => <tr key={`f0-${i}`}>\n                 <td key={`f1-${i}`}><input id={`f1-${i}`} type='radio' name='feed' onChange={_ => setActiveFeed(f)} checked={f === activeFeed}/></td>\n                 <td key={`f2-${i}`}><label htmlFor={`f1-${i}`}> {f.file}</label></td>\n                 <td key={`f3-${i}`}>{new Date(f.dateImported).toLocaleDateString('en', { year: 'numeric', month: 'long', day: 'numeric' })} {new Date(f.dateImported).toLocaleTimeString()}</td>\n             </tr>)}\n            </tbody>\n        </table>\n        { activeFeed && (<>\n            <div key='overview'>\n                <dl>\n                    <StyledDt>From:</StyledDt>\n                    <StyledDd>{new Date(activeFeed.fromDate).toLocaleDateString('en', { year: 'numeric', month: 'long', day: 'numeric' })}</StyledDd>\n                </dl>\n                    <StyledDt>To:</StyledDt>\n                    <StyledDd>{new Date(activeFeed.toDate).toLocaleDateString('en', { year: 'numeric', month: 'long', day: 'numeric' })}</StyledDd>\n                <dl>\n                    <StyledDt>Transactions:</StyledDt>\n                    <StyledDd>{activeFeed.numberOfTransactions}</StyledDd>\n                </dl>\n            </div>\n            <button name='delete' onClick={ _ => deleteImport(activeFeed.feedId)}>Delete</button>\n            <hr/>\n            { /* <FeedTransactions feedId={activeFeed.feedId}/> */ }\n            <Duplicates feedId={activeFeed.feedId}/>\n        </>)}\n    </div>)\n}\n\n\n\nexport const FeedTransactions = styled(({className, feedId}) => {\n    const [transactions, setTransactions] = useState([])\n\n    const loadFeedTransactions = () => fetch(`http://localhost:8080/api/feed/${feedId}`)\n        .then(response => response.ok && response.json())\n        .then(json => json.transactions && setTransactions(json.transactions))\n\n    const pad = (number) => {\n        if (`${number}`.length == 1) {\n            return `0${number}`\n        }\n        else return number\n    }\n\n    useEffect(() => {\n        loadFeedTransactions(feedId)\n    }, [])\n\n    return transactions.length > 0 && <section className={className}>\n        <table>\n            <tbody>\n            {\n                transactions.map(t => <tr>\n                    <td class={\"day\"}>{pad(t.day)}.{pad(t.month + 1)}.{t.year}</td>\n                    <td class={\"description\"}>{t.description.substring(0, Math.min(100, t.description.length))}</td>\n                    <td class={\"amount\"}>{t.amount}</td>\n                </tr>)\n            }\n            </tbody>\n        </table>\n    </section>\n})`\n  overflow-y: scroll;\n  max-height: 60vh;\n\n  td.day {\n    padding: 2px 100px;\n  }\n`;\n\n\n\n","import React, {useEffect, useReducer, useState} from \"react\";\nimport styled from \"styled-components\";\n\n\nexport const Duplicates2 = styled( ({className})  => {\n\n    const [transactions, setTransactions] = useState(null   )\n\n    const duplicateCheck = (feedId) => fetch(`http://localhost:8080/api/duplicateCheck2`, { method: 'GET' })\n        .then(response => response.status === 200 && response.json())\n        .then(json => {\n            if (json && json.transactions) {\n                setTransactions(json.transactions)\n            }\n        })\n\n    const saveDuplicates = () => fetch(`http://localhost:8080/api/duplicates2/`, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({ transactions: transactions.map(t => {\n                return {id: t.id, duplicate: t.duplicate}\n            })\n        }\n        )})\n        .then(response => {\n            setTransactions(null)\n            duplicateCheck()\n        })\n\n    const rowStyleFor = transaction => { if (transaction.duplicate) return 'duplicate-row'; else return ''; }\n\n    const suggestDuplicates = () => {\n        alert(\"Duplicates based on:\\n  matching transaction date & description & amount\\n                   or\\n  matching only transaction date & amount for amounts greater than 1000\")\n        setTransactions(transactions.map((t, i) => {\n          t.duplicate = contentDuplicatesPrev(t, i)\n          return t\n        }))\n    }\n\n    const clearDuplicates = () => {\n        setTransactions(transactions.map((t, i) => {\n            t.duplicate = false\n            return t\n        }))\n    }\n\n    const setDuplicateStatus = (tranId, duplicate) => {\n        setTransactions(transactions.map(t =>  {\n            if (t.id != tranId) return t\n            else {\n                t.duplicate = duplicate\n                return t;\n            }\n        }))\n    }\n\n    const contentDuplicatesPrev = (trans, i) => {\n        if (i == 0) return false;\n        if (trans.day != transactions[i-1].day) {\n            return false;\n        }\n        if (trans.amount != transactions[i-1].amount) {\n            return false;\n        }\n        if (trans.description != transactions[i-1].description) {\n            if (trans.amount > 1000 || trans.amount < -1000) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    useEffect(() => {\n        document.title = 'Find Duplicates' ;\n        duplicateCheck()\n    }, [])\n\n    return (<section className={className}>\n        <h2>Find Duplicates</h2>\n        <p>Showing all transactions which have the same <u>date</u> and the same <u>amount</u></p>\n        { transactions && transactions.length > 0 && <>\n            <button name='suggest'onClick={() => suggestDuplicates()}>Suggest</button>\n            <button name='clear'onClick={() => clearDuplicates()}>Clear</button>\n            <button name='save'onClick={() => saveDuplicates()}>Save</button>\n            <table>\n                <thead>\n                <tr>\n                    <th>line</th>\n                    <th>content</th>\n                    <th>Duplicate</th>\n                </tr>\n                </thead>\n                <tbody>\n                { transactions.map((tran, i) => <tr key={`${tran.id}`} className={rowStyleFor(tran)}>\n                    <td key={`day`} className={'day'}>{tran.day}.{tran.month + 1}.{tran.year}</td>\n                    <td key={`description`} className={'description'}>{tran.description.substring(0, Math.min(150, tran.description.length))}</td>\n                    <td key={`amount`} className={'amount'}>{tran.amount}</td>\n                    <td key={`choice`} className='radio'>\n                        <label>yes\n                            <input name={`duplicate-${tran.id}`}\n                                   type=\"radio\"\n                                   value=\"yes\"\n                                   checked={tran.duplicate === true}\n                                   onChange={_ =>\n                                    setDuplicateStatus(tran.id, true)\n                            }/>\n                        </label>\n                        <label>no\n                            <input name={`duplicate-${tran.id}`}\n                                   type=\"radio\"\n                                   value=\"no\"\n                                   checked={tran.duplicate === false}\n                                   onChange={_ =>\n                                       setDuplicateStatus(tran.id, false)\n                            }/>\n                        </label>\n                    </td>\n                </tr>)}\n                </tbody>\n            </table>\n        </> || <p>Loading....</p>}\n        </section>)\n})`\n  \n  button {\n    margin-left: 20px;\n  }\n\n\n  td {\n    cursor: default;\n  }\n  td.day {\n    padding-right: 50px;\n  }\n\n\n  td.amount {\n    padding-left: 50px;\n  }\n\n  td.radio {\n    label {\n      padding-left: 10px;\n    }\n    text-decoration: none;\n  }\n\n  .duplicate-row {\n    td {\n      font-weight: bold;\n      text-decoration: line-through;\n    }\n  }\n`;\n\n","import React, {useEffect, useState} from \"react\";\n\nimport styled from \"styled-components\";\nimport {NavLink, Route, Switch} from \"react-router-dom\";\nimport {Overview} from \"./overview\";\nimport {FixedBalances} from \"./fixedbalances\";\nimport {Feeds} from \"./feeds\";\nimport {Duplicates2} from \"./duplicates2\";\n\nconst AccountsContainer = styled.div`\n    display: flex;\n`\n\nconst AccountsContent = styled.div`\n padding-left: 2rem;\n flex-grow: 2;\n`\n\nconst AccountsNav = styled.div`\n flex-grow: 0;\n padding-left: 2rem;\n ol {\n    list-style-type: none;\n    padding-left: 0;\n }\n ol > li  ol > li  {\n    padding-left: 2rem;\n }\n a {\n      text-align: center;\n      display: block;\n      color: black;\n      height: 3rem;\n      line-height: 3rem;\n      text-decoration: none;\n  }\n \n .navActive {\n    background-color: #DCDCDD;\n }\n`\n\n\nexport const Accounts = props => {\n\n    const [accounts, setAccounts] = useState([])\n\n    useEffect(() =>{\n        document.title = 'Accounts';\n        loadData()\n    }, [])\n\n    const loadData = () => {\n        var url = 'http://localhost:8080/api/account'\n        return fetch(url)\n            .then(response => response.json())\n            .then(json => setAccounts(json.accounts))\n    }\n\n    return (\n        <AccountsContainer>\n            <AccountsNav>\n                <ol>\n                    { accounts && accounts.map(a => <li key={a.name}>\n                        <NavLink activeClassName='navActive' to={`/accounts/${a.name}`}>{a.name}</NavLink>\n                        <ol>\n                            <li><NavLink activeClassName='navActive' to={`/accounts/${a.name}/feeds`}>Feeds</NavLink></li>\n                            <li><NavLink activeClassName='navActive' to={`/accounts/${a.name}/fixedbalances`}>FixedBalances</NavLink></li>\n                        </ol>\n                    </li>) }\n                    { accounts.length > 0 && <li><NavLink activeClassName='navActive' to={`/duplicates`}>Find Duplicates</NavLink></li> }\n                </ol>\n            </AccountsNav>\n            <AccountsContent>\n                <Switch>\n                    <Route key='route-2' path='/accounts/:accountName/feeds'>\n                        <Feeds/>\n                    </Route>\n                    <Route key='route-3' path='/accounts/:accountName/fixedbalances'>\n                        <FixedBalances/>\n                    </Route>\n                    <Route key='route-3' path='/accounts/:accountName'>\n                        <Overview/>\n                    </Route>\n                    <Route key='route-3' path='/duplicates'>\n                        <Duplicates2/>\n                    </Route>\n                </Switch>\n            </AccountsContent>\n        </AccountsContainer>)\n}\n","import React, {useEffect, useReducer, useState} from \"react\";\nimport {v4 as uuidv4} from \"uuid\";\n\nexport const Categories = props => {\n\n    const [categories, dispatchCat] = useReducer(categoriesReducer, []);\n\n\n    useEffect(() => {\n        loadCategories()\n    }, [])\n\n    const loadCategories = () => fetch(`http://localhost:8080/api/category`)\n        .then(response => response.json())\n        .then(json => dispatchCat({type: 'load', categories: json.categories}))\n\n    const saveCategories = () => fetch(`http://localhost:8080/api/category`, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(categories)})\n        .then(response => loadCategories())\n\n    function categoriesReducer(state, action) {\n        switch (action.type) {\n            case 'add-category':\n                return [...state, { id: uuidv4(), name: null, matchers: []}]\n            case 'remove-category':\n                return state.filter(c => c.id !== action.categoryId)\n            case 'update-category-name':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    name: action.name } : c )\n            case 'add-matcher':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    matchers: [...c.matchers, {id : uuidv4(), pattern: null}]} : c)\n            case 'remove-matcher':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    matchers: c.matchers.filter(m => m.id !== action.matcherId) } : c)\n            case 'update-matcher':\n                return state.map(c => c.id === action.categoryId ? {\n                    ...c,\n                    matchers: c.matchers.map(m => m.id === action.matcherId ? {\n                        ...m,\n                        pattern: action.pattern\n                    } : m)} : c)\n            case 'load':\n                return action.categories\n            default:\n                throw new Error();\n        }\n    }\n\n    return (<section>\n            <h2>Categories</h2>\n            <ul>\n                { categories && categories.map(c => (<>\n                    <li><input name={`category-${c.id}`} value={c.name} onChange={e => dispatchCat({type: 'update-category-name', categoryId: c.id, name: e.target.value})}/>\n                        <button onClick={() => dispatchCat({type: 'remove-category', categoryId: c.id})}>X</button>\n                    </li>\n                    <ul>\n                        { c.matchers && c.matchers.map(m => <li><input name={m.id} value={m.pattern} onChange={e => dispatchCat({type: 'update-matcher', categoryId: c.id, matcherId: m.id, pattern: e.target.value})}/>\n                            <button onClick={() => dispatchCat({type: 'remove-matcher', categoryId: c.id, matcherId: m.id})}>X</button>\n                        </li>)}\n                        <li><button onClick={_ => dispatchCat({type: 'add-matcher', categoryId: c.id})}>Add</button></li>\n                    </ul></>))}\n                <li><button onClick={_ => dispatchCat({type: 'add-category'})}>Add</button></li>\n            </ul>\n            <button onClick={saveCategories}>Save</button>\n        </section>\n    )\n}","import React, {useState} from 'react';\nimport {BrowserRouter as Router, NavLink, Route, Switch, Redirect} from 'react-router-dom';\nimport './App.css';\nimport {MonthyReport} from \"./containers/monthlyreport/MonthyReport\";\nimport styled from 'styled-components'\nimport {Reports} from \"./containers/reports/reports\";\nimport {Upload} from \"./containers/upload/upload\";\nimport {Accounts} from \"./containers/accounts/accounts\";\nimport {Categories} from \"./containers/categories/categories\";\n\nconst StyledHeader = styled.header`\n  display: flex;\n\n  ol {\n    display: flex;\n    margin: 0;\n    list-style-type: none;\n\n    li {\n      padding-right: 1rem;\n    }\n\n    a {\n      text-align: center;\n      display: block;\n      color: black;\n      height: 3rem;\n      line-height: 3rem;\n      text-decoration: none;\n    }\n\n    .navActive {\n      background-color: #DCDCDD;\n    }\n  }\n\n  h1 {\n    margin: 0;\n    margin-left: 5rem;\n  }\n\n  border-bottom: solid black 1px;\n`;\n\nconst InfoBar = styled.div`\n  padding-top: 0.9em;\n  margin-left: 10rem;\n\n  //    position: absolute;\n  //   right: 30vw;\n`;\n\n\nconst StyledMain = styled.main`\n`;\n\nfunction App() {\n    const [headerInfo, setHeaderInfo] = useState(\"\")\n    const currentMonth = new Date().getMonth() + 1\n    const currentYear = new Date().getFullYear()\n\n    return (\n        <div className=\"App\">\n            <Router>\n                <StyledHeader className=\"App-header\">\n                    <ol>\n                        <li><NavLink activeClassName='navActive' to=\"/accounts\">Accounts</NavLink></li>\n                        <li><NavLink activeClassName='navActive' to=\"/categories\">Categories</NavLink></li>\n                        <li><NavLink activeClassName='navActive' to=\"/transactions\">Monthly</NavLink></li>\n                        <li><NavLink activeClassName='navActive' to=\"/reports\">Reports</NavLink></li>\n                    </ol>\n                    <h1>{headerInfo}</h1>\n                    <InfoBar>Press CTRL+H for help</InfoBar>\n                </StyledHeader>\n                <StyledMain>\n                    <Switch>\n                        <Route exact={true} key=\"route-1\" path='/transactions'>\n                            <Redirect to={`/transactions/${currentYear}/${currentMonth}`}/>\n                        </Route>\n                        <Route exact={true} key=\"route-1\" path='/transactions/:year/:month'>\n                            <MonthyReport onChangeHeaderInfo={(text) => setHeaderInfo(text)}/>\n                        </Route>\n                        <Route exact={false} key=\"route-2\" path='/reports'>\n                            <Reports/>\n                        </Route>\n                        <Route exact={false} key=\"route-3\" path='/accounts'>\n                            <Accounts/>\n                        </Route>\n                        <Route exact={false} key=\"route-3\" path='/duplicates'>\n                            <Accounts/>\n                        </Route>\n                        <Route exact={false} key=\"route-3\" path='/categories'>\n                            <Categories/>\n                        </Route>\n                        <Route exact={false} key=\"route-3\" path='/upload'>\n                            <Upload/>\n                        </Route>\n                        <Route>\n                            <Redirect to='enterdata'/>\n                        </Route>\n                    </Switch>\n                </StyledMain>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}